#TMSH-VERSION: 12.1.2

cli admin-partitions {
    update-partition Common
}
analytics gui-widget /Common/uwid5915d0809f8fe {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { events_count }
    module asm
    period 86400
    username admin
    view-by asm_repev_request_type
    widget-type 1
}
analytics gui-widget /Common/uwid5915d0811b64c {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { count }
    module dosl7
    order-on-page 1
    period 86400
    username admin
    view-by vip
    widget-type 1
}
analytics gui-widget /Common/uwid5915d0812da99 {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { count }
    module dns
    order-on-page 1
    period 86400
    username admin
    view-by dns_query_name
    widget-type 3
}
analytics gui-widget /Common/uwid5915d0814a37f {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { errors }
    module network
    order-on-page 4
    period 86400
    username admin
    view-by fw_error_reason
    widget-type 3
}
analytics gui-widget /Common/uwid5915d0815a22c {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { count }
    module dosl7
    order-on-page 6
    period 86400
    username admin
    view-by dosl7_attack_id
    widget-type 3
}
analytics gui-widget /Common/uwid5915d08125d0c {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { events_count }
    module asm
    period 86400
    username admin
    view-by asm_repev_request_type
    widget-type 3
}
analytics gui-widget /Common/uwid5915d08141d4e {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { acl_matches }
    module network
    order-on-page 3
    period 86400
    username admin
    view-by acl_enforced_rule
    widget-type 3
}
analytics gui-widget /Common/uwid5915d08150e0d {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { drop_count }
    module dosl3
    order-on-page 5
    period 86400
    username admin
    view-by dosl3_attack_id
    widget-type 3
}
analytics gui-widget /Common/uwid5915d08138501 {
    cent-report-destination-type self
    gui-pagecode _ov_summary
    metrics { count drop_count total_count }
    module dosl3
    order-on-page 2
    period 86400
    username admin
    view-by dosl3_action
    widget-type 2
}
analytics gui-widget /Common/uwid5915d08165880 {
    gui-pagecode _ov_summary
    metrics { __ }
    module _______xxx___
    username admin
    view-by __
    widget-type 1
}
apm client-packaging /Common/client-packaging { }
apm report default-report {
    report-name sessionReports/sessionSummary
    user /Common/admin
}
apm resource remote-desktop citrix-client-bundle /Common/default-citrix-client-bundle { }
auth password-policy {
    required-uppercase 1
}
auth remote-role {
    role-info {
        /Common/F5Admin {
            attribute F5-LTM-User-Info-1=F5Admin
            console tmsh
            line-order 1
            role administrator
            user-partition All
        }
    }
}
auth remote-user {
    default-role admin
    remote-console-access tmsh
}
auth source {
    type tacacs
}
auth tacacs /Common/system-auth {
    accounting send-to-all-servers
    debug enabled
    protocol ip
    secret $M$qf$Iorr7n/eaRSsAdTv9W8WXg==
    servers { 10.0.0.201 }
    service ppp
}
auth user admin {
    description "Admin User"
    encrypted-password $6$0oyzAsQK$ZD/V0r6zLSeC.HqM8oHcfcOWn4zObYnyGyaT7oNyVeCSV1bj.tp6VR8.DLGy0ZXqesxrPK0lUzjer685IXxSI0
    partition-access {
        all-partitions {
            role admin
        }
    }
    shell bash
}
auth user f5hubblelcdadmin {
    description f5hubblelcdadmin
    encrypted-password YwsTEgZNYKyRwbJHiCd3gzLpRWztHnrf
    partition-access {
        all-partitions {
            role admin
        }
    }
    shell none
}
auth user kevin {
    description kevin
    encrypted-password $6$YDzdZu7n$r9nFtv.YN6Pi4iignf30qPi7BHk1lbDYjLz2dWG1m3lUENV983DGreOlzM1XVabuweyH7XNyJBW/thIh49ELt.
    partition-access {
        all-partitions {
            role admin
        }
    }
    shell bash
}
auth user root {
    description root
    encrypted-password $6$qFNC4ngF$NjSx3mNbfmg9tG4UjKpxf2IkT.g3ivHkAGYvuMP5n/QILdq4GFYtQJ7NgFPXbfAX2keusrRQM4N4wjL6emMUt1
    shell bash
}
cli global-settings {
    audit disabled
    idle-timeout 120
}
cm cert /Common/dtca-bundle.crt {
    cache-path /config/filestore/files_d/Common_d/trust_certificate_d/:Common:dtca-bundle.crt_36418_6
    certificate-text "-----BEGIN CERTIFICATE-----
MIIDljCCAn6gAwIBAgIDCNiaMA0GCSqGSIb3DQEBBQUAMC4xLDAqBgNVBAMTI2E1
OGUxMDYzLTI1OTctNGUxYy05Y2RlMDAwYzI5NjY2YmNkMB4XDTEzMTExMzE2MTYy
MFoXDTIzMTExMTE2MTYyMFowLjEsMCoGA1UEAxMjYTU4ZTEwNjMtMjU5Ny00ZTFj
LTljZGUwMDBjMjk2NjZiY2QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQCjUvTte/d90lEQRtpDWYr79I6rNdXJajPkx4qCLKsaxqE3kttTEbkUxgVHYr0f
77+LtAdii3npFrGcxUcZnclvp8YLExmpNZ4+X6GV+nGK0egzN5g9UoJ+SUGSvAmi
lcKhXLFp3jJMj0/JoGdxvHDwuooRgBl6Tcj2vBeoovf3CHKzF5pKUMj/nMEJ0NAi
5x2K5LgB36eWLG1/+v+osRMi+ZY21FVOyeEdFuYBWJhqvxB8PZkGIrul2Wvf7EZI
FSpTaLAQ8ZgV1fnC6X3sncL9qYlgmyinGZnzTbQW9okYkfAqSlxcSYZKuyswShbx
CkVqqWo+OntRZOL62apH7YT5AgMBAAGjgbwwgbkwHQYDVR0RBBYwFIISYmlnaXBB
MS5mNWRlbW8uY29tMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgG2MB0G
A1UdDgQWBBSm/tDHU2Nk2F3Oy+OyOrgddpWhbjBYBgNVHSMEUTBPgBSm/tDHU2Nk
2F3Oy+OyOrgddpWhbqEypDAwLjEsMCoGA1UEAxMjYTU4ZTEwNjMtMjU5Ny00ZTFj
LTljZGUwMDBjMjk2NjZiY2SCAwjYmjANBgkqhkiG9w0BAQUFAAOCAQEAlYTvUhfZ
lOaGddwkOE9bVwraUTib0avVN49KrKKaF9r8Dg9V+nDUtjWOCS7cGtslbEc7YoYb
s/LDQScCNdAhNGAT3XQD/B+CvuGaqTgXQVHxeQdlzGV5pkwl5vf9qq/vZ0TOP/de
XHmaD1RrxLeHrVT4VaZz3rqe2sU/HpLahYAI4L8yMZ7SvYzwwCb76Lxxk4aVAHXM
VGcaZ86tI4UDzThlIrxGHKAxnvg2bTa5Mqy/vK7KQAvNh8XQbrRUwK8Bskk2rmEi
5AZbJ/s0Qo176JrMTzTPUAbyiXp7jDPa2GwGav/XGWl9l67BdY6/se7EHO9wxDBm
yjpak4knX36Kgw==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC2jCCAcKgAwIBAgIEasiivzANBgkqhkiG9w0BAQUFADAvMS0wKwYDVQQDEyQ4
Y2JjNDAzMi0zNzE5LTQ0ZWYtOTQ5YS1jMWZiNDViZTYxOTkwHhcNMTcwNTA5MjEx
OTQ4WhcNMjcwNTA4MjExOTQ4WjAvMS0wKwYDVQQDEyQ4Y2JjNDAzMi0zNzE5LTQ0
ZWYtOTQ5YS1jMWZiNDViZTYxOTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQCyBPB3GDkzulxhGKPtfTch/i58EtLVJ5mV7khvoFq+QQQnYRxdCd+to5ml
yJS37GmyL16/UkoTRdVG5JL5w0K+RNl37Dde3l04om7edZNBUcYdpkonO9pa9RjW
sXDtNTgYrRrU/wSVb9VOKGQPNbVnNSqNv6kf5t8rbAUy/2TuIrwb5wUEnTF5qUYw
mgJrUH3SBiB4CX0xbdZ8OvCtiCK3aY1ILYmncU9Z1GzJltwyDcQLrTaqX2JT+3n2
yi1Lr3uc5ANXmsuoylragfJngPeqV+allZE17BOggeTIytkZdHmLjkxUNe3RATc0
QkBEP0LgfYCLx0y8D5KzVNV/ITqJAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAEII
fMJCMV2EpTMVAp+nNSPotTGEClaMxOFLgb5Izj1FSvNtkVb3pkpaWOmjrjhvBFjf
wSXxTKK1DnPs+gQBvafmtrjJMp+vNyc6VFv5N1A+wmNMYk8AlEc6wgRudfj9pXmy
GIsypi54xPUkMz4OcOEqDrLm4AObhmT0WX0AaU3DlntUWL9d69+lUPShHjcbFOhl
unJClgt6K0kxa95F7r+UeToNxa96YdgV3eDKGMSDt3KXp24r6smABhIEk8v3bWT9
P/T68eQOfBmM2JDLvIH4PBO9z9PSeOOkJNjdNiI1plccKFIi6x4ljSyFcDFYjLXo
UKkrtJCqNj4y/mOtxys=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC2jCCAcKgAwIBAgIEMl7T2DANBgkqhkiG9w0BAQUFADAvMS0wKwYDVQQDEyRm
NjQ2MzE5ZC1iZDQxLTQ2NWEtYjQ4ZC0yZTlhNWY3OGQ2YTIwHhcNMTYwMTA1MjEw
NTMxWhcNMjYwMTAzMjEwNTMxWjAvMS0wKwYDVQQDEyRmNjQ2MzE5ZC1iZDQxLTQ2
NWEtYjQ4ZC0yZTlhNWY3OGQ2YTIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQCAOoKewnuATDLBQEAwlYP+NU5SLARO4IDU9FH757P7vWxiWY2zxiGdsVAa
S8CpgDpSl0EC6GLhRVI3rG69La2KVjjuIjftwwibJoCZ+fANkBDqqY2csYENKg/4
V5A5jv1KGrCPZVsd+P2UIHaKX+KZzwnw/IVyLO7ZqVDq0WX8hmR4iXcUDBmEU2jK
tablIqK/DNzyxxCExE6JdWveVPDhNL8tNKUb81tcPCq9bj+c6eMq7ESueqCKqdOx
1pZj/KzG1K62h3eLi+ouLCytoMNkR7ru3l/6tEebvcflqMHz9gXd+6GOmkcVHIS1
QblPQzeOi3uk9gVm20BXQZNQQfi/AgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAH7h
85qLKa3qXe+79SpgKixzwq4JaLy/cIQ4MLpSOPKqyFXpMustKa27JnVqbYbfQde/
+AXgc6534jfAEEY+DyWVM6xP3QB4ISNFONpGDqrduKexhGWdIhaLIWirlJisumOu
R/zL5GOiBK1YBeupQhyFRPZ6W3/GVnrs/6GL8YjfCIaHDgj8lw5Tr14CbHVRC1H4
+1y6hbBXCsaEE7jp263n3ziMiXEGh41RsfiJqCHpn71Z4rflbk5T/hgsOUAD3cgH
EgesA2ZdtyseKVuBN1xOS67tyOebaV9dNV/kvIiuHOe7q6Ie/NMAMDqJRQmOiS+S
/8Wg2JEFjVD4W1V9q1c=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC2jCCAcKgAwIBAgIEMB4qczANBgkqhkiG9w0BAQUFADAvMS0wKwYDVQQDEyRj
ZjhkMWJmYy1lZjUzLTQwZDYtOGEyZC0wNmQ5YmZhMWNkYWQwHhcNMTcwMzAyMDY1
ODUwWhcNMjcwMzAxMDY1ODUwWjAvMS0wKwYDVQQDEyRjZjhkMWJmYy1lZjUzLTQw
ZDYtOGEyZC0wNmQ5YmZhMWNkYWQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQC63sF35df0CpznenHPyveNVIjm2aoSF+XIxDWGrYQJH4wfw2Jez77X/j6F
TGh14KmNqnkbd9ldv8cKDTVdPPs36A7ej8ioQiZdvFFncD6wp3OYoRYdX4nEXV1k
Hq+p5pevTUt79terjlqa923NNUwI4mN97uPmsim9oHta4Fy15bYV3ls659HGBSAp
ORkm8YaXMKRA9eU5vi8fNWh+jVzpx4Iyb4whkkJL/qLNo+KGJknj1P5a6JBFLpxl
NIloclwTYNR0AltTF+u4k+hWRDNKdK1Nev/90FDvoJNcRZJKCt9FzcENlQzB/bhy
guz7Iuo65mkLju/1PsRiJIBsye9DAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAFFQ
ahqbAWUKCugQjdW3oMQhLm+9PfgSCc5+WbOLGjNmXfnJbxNiSrSZfJQs4nE9u9e0
4rI9IqW6MrrXMTMloU7W+P2TMCVNTw7NUfC1qox0TN/FeUK6Lu84xKok01mKDZEt
EXxi08lIi2A0hhHU9NCtL41w/ep1COULff4c0bAuAD/4vxEICviZ1q2xcoLVZRYV
4i63TuC7RnnilwvVjDi2HZgnpy6HdYQEWdoV9fDzyKCvHQmUtqCYYd0QHTT2awfj
vnJGMsv/dEEMT+phkTQ+N9yblz29LoLYf0GqXUxSlmW29bEd5SxPbQb59aktvvaz
LWP50mmRj4v+HeUgM1Y=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC2jCCAcKgAwIBAgIENUg8hTANBgkqhkiG9w0BAQUFADAvMS0wKwYDVQQDEyQy
ZjhjOGY5My0yOTJkLTQyZWMtYTY0OS00ZGQ3YWE0ZWI2NTMwHhcNMTcwNTA5MjEx
OTQ0WhcNMjcwNTA4MjExOTQ0WjAvMS0wKwYDVQQDEyQyZjhjOGY5My0yOTJkLTQy
ZWMtYTY0OS00ZGQ3YWE0ZWI2NTMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQCOdvxDxJdhXv6uZe4pyhFuMJhoEYjPOE/Xb4DPTMd91MKzUjvZYYcAy2vZ
1Eitzhvhrp3EKkjkLTBkuZtjPBtuoEw5bg4+si/IQcV9lEz2zYqru4FWUt4ZB1Qa
75T9lz5iLpO/zU9rfL19PgssWRsZ2Dj0uncDK1RG3TjKWWWiJQPdpEImFe3f198g
VDCsEqpyvP1abF5LXgqz0FSD0Vl8YQMkHk8YFxgtPsTdhfw4QLYhz/xID1pnjO//
Yj55Qev5eVkek8fgwwqtStYyxC2p0XMozsWZK/m5tJCEy0pBllxhe1OlMorl7fNu
gTx6H97bZ0UA+73cB0Xo5LUwiwrVAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBADbX
aqpvefiTAaVVejH7qvMdsCwy7LZ6AzbqchP2G2Y9dh0RLhjT2aDGTvK8xZuUj7J7
ZvNeyF7QsVfFSCeXoyj4yqOEJyXFKIUCoy5AWYE2Qyly0M++RdplHiuSk6O9ZylI
EjLf45xRvGpZH77iFrBcAszBRJPDNH+XZxhWx9QjtqMXtjlXwknRmPkYRfUm5woA
ryqW3jtyv9rKh02JTsmOkiNT1auIpxrCgFg2AKlzDd7ALHEC2TylklGnu7USuvEZ
qPh+/cqki9cWbsa+6ncB7ky/Txxs40PRYhmJ+dqEjhmVY0RJSpG4YgXemhevUpZk
v/lNJcrbwrP8E3DQyaY=
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIC2jCCAcKgAwIBAgIEDEf3MTANBgkqhkiG9w0BAQUFADAvMS0wKwYDVQQDEyRk
MTBjOGM0MC04YTVjLTQ2YjgtYTEyZC1hZGY2ZjUxZDZhZjUwHhcNMTcwNTA5MjEx
OTUwWhcNMjcwNTA4MjExOTUwWjAvMS0wKwYDVQQDEyRkMTBjOGM0MC04YTVjLTQ2
YjgtYTEyZC1hZGY2ZjUxZDZhZjUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQClJ5YNjzbt4YEnSt7eZGXmdSjGb0DVDrvN1NIS1e6MXWqXbBOd8Y8d14wB
mOIWKNLWy7C2RMzyh/mMIOzFEQr3+Y4xAC8ymPi4ZackcP+DsfN+xil9T/xKiOOq
jGLbn1Hnk/GyXX9uDgYGej4g46phUuCrlgsAA9AxDbktjJEjuhpHAorUJsqc1id4
28qjefRr7Gq/sBasjpW4yPatxf4CK76p5xSWZ3VlJXrvVTSMmw4MzKye0q8HuZj+
eQA6EzFSfxGTncFWJ/amMJSo1RT2uz361vlymu/28arcqco0V7gQ012hPNOVd2nN
ZI3KlyrvdZlrJJMRyoLt9Hx/UCQXAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAARD
Vj1KlexS5NKhztzNMNgoluvLFdKzKn0/VqRI90IDZDjd2g3aWzI9ae7b4zcIjsEd
nnhcU1RU/Nfwxn1pCEpHbY45J6VsVLvK6r2uh1DIjcMWoLRDAnbvE4PilSrilUL2
iCC8D+eRrsUAF5ddaNvWKFU92JklL7rXFIpmqSntdPiq73RfgvzkrDuzxmOWanS9
Yu9VTwYnfFxCD27mKehYmvnfc6kUuS1PRRuY8MF4c4/PeXEiI/VEUzZ93N+BGOPt
QTAHtDfGmzSEKWq/HHKlkwkayNpJUPX0r4y0oXFQf81/vHs/T5jkT+xLrRIAbzPz
DLoeXvsn8Pgc0QfG2pM=
-----END CERTIFICATE-----
"
    checksum SHA1:6556:60a9c7ad393e6b53052fc0ccee57a33cde0454ba
    revision 6
}
cm cert /Common/dtca.crt {
    cache-path /config/filestore/files_d/Common_d/trust_certificate_d/:Common:dtca.crt_36414_4
    certificate-text "-----BEGIN CERTIFICATE-----
MIIDljCCAn6gAwIBAgIDCNiaMA0GCSqGSIb3DQEBBQUAMC4xLDAqBgNVBAMTI2E1
OGUxMDYzLTI1OTctNGUxYy05Y2RlMDAwYzI5NjY2YmNkMB4XDTEzMTExMzE2MTYy
MFoXDTIzMTExMTE2MTYyMFowLjEsMCoGA1UEAxMjYTU4ZTEwNjMtMjU5Ny00ZTFj
LTljZGUwMDBjMjk2NjZiY2QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQCjUvTte/d90lEQRtpDWYr79I6rNdXJajPkx4qCLKsaxqE3kttTEbkUxgVHYr0f
77+LtAdii3npFrGcxUcZnclvp8YLExmpNZ4+X6GV+nGK0egzN5g9UoJ+SUGSvAmi
lcKhXLFp3jJMj0/JoGdxvHDwuooRgBl6Tcj2vBeoovf3CHKzF5pKUMj/nMEJ0NAi
5x2K5LgB36eWLG1/+v+osRMi+ZY21FVOyeEdFuYBWJhqvxB8PZkGIrul2Wvf7EZI
FSpTaLAQ8ZgV1fnC6X3sncL9qYlgmyinGZnzTbQW9okYkfAqSlxcSYZKuyswShbx
CkVqqWo+OntRZOL62apH7YT5AgMBAAGjgbwwgbkwHQYDVR0RBBYwFIISYmlnaXBB
MS5mNWRlbW8uY29tMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgG2MB0G
A1UdDgQWBBSm/tDHU2Nk2F3Oy+OyOrgddpWhbjBYBgNVHSMEUTBPgBSm/tDHU2Nk
2F3Oy+OyOrgddpWhbqEypDAwLjEsMCoGA1UEAxMjYTU4ZTEwNjMtMjU5Ny00ZTFj
LTljZGUwMDBjMjk2NjZiY2SCAwjYmjANBgkqhkiG9w0BAQUFAAOCAQEAlYTvUhfZ
lOaGddwkOE9bVwraUTib0avVN49KrKKaF9r8Dg9V+nDUtjWOCS7cGtslbEc7YoYb
s/LDQScCNdAhNGAT3XQD/B+CvuGaqTgXQVHxeQdlzGV5pkwl5vf9qq/vZ0TOP/de
XHmaD1RrxLeHrVT4VaZz3rqe2sU/HpLahYAI4L8yMZ7SvYzwwCb76Lxxk4aVAHXM
VGcaZ86tI4UDzThlIrxGHKAxnvg2bTa5Mqy/vK7KQAvNh8XQbrRUwK8Bskk2rmEi
5AZbJ/s0Qo176JrMTzTPUAbyiXp7jDPa2GwGav/XGWl9l67BdY6/se7EHO9wxDBm
yjpak4knX36Kgw==
-----END CERTIFICATE-----
"
    checksum SHA1:1306:7e1bbb833eeb694bdd676f67489d9aa64b6bfae4
    revision 4
}
cm cert /Common/dtdi.crt {
    cache-path /config/filestore/files_d/Common_d/trust_certificate_d/:Common:dtdi.crt_36410_4
    certificate-text "-----BEGIN CERTIFICATE-----
MIIDYzCCAkugAwIBAgIDDw9eMA0GCSqGSIb3DQEBBQUAMC4xLDAqBgNVBAMTI2E1
OGUxMDYzLTI1OTctNGUxYy05Y2RlMDAwYzI5NjY2YmNkMB4XDTE3MDMwNzExMzA1
M1oXDTI3MDMwNTExMzA1M1owHTEbMBkGA1UEAxMSYmlnaXBBMi5mNWRlbW8uY29t
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA80dkjKe274Atb16yP+iT
AQj2HZWbGLWjnueaw5rBG1OALXvX6W6fLt63c3HKbmT9C+ddmoRRaHgDRsaC8qwC
BClRGyEXI07KvNowazUtFCBwesfuNUjXyFTLqKCBfTU6oeQzz0XvOSxjq9D61jxR
XK1RSkj0eY+CwVP0IR5IqwpbgbmI84VnybZE9Y+8wCZ5I1AfQkUwRmrdpkRWa6Hn
X+IlsMNA5/GHHqdPXjp2YlNcUBh8azSOxuN1g6ZfPyskryvO00QTd/WNDlETXJky
OL/vZYpqbm3K9yUgkDCPbP2+xubhyoAIrkHPpG0CtA6FcGZ9Z6uSUXZksgVF9VUP
PQIDAQABo4GaMIGXMAwGA1UdEwEB/wQCMAAwDgYDVR0PAQH/BAQDAgWgMB0GA1Ud
DgQWBBRhwl5H+7vWHjp17vk3TPQ+pEF23jBYBgNVHSMEUTBPgBSm/tDHU2Nk2F3O
y+OyOrgddpWhbqEypDAwLjEsMCoGA1UEAxMjYTU4ZTEwNjMtMjU5Ny00ZTFjLTlj
ZGUwMDBjMjk2NjZiY2SCAwjYmjANBgkqhkiG9w0BAQUFAAOCAQEAZMyLl1UO5o4D
HA/9B2qTTyI+fHFEwKaGA/kf1ZpSbmYXUBfO9pgiuA2gqTKYjLh8uGF14AhK2lkd
2c1+LCRa5wCv7n6Armq1dt4eAJe6BUMhph400i3A1i5DRn6fz2tg0s0TPDGczup2
fipKsqETpyWwVWYJztERgeLL4Y57papzjwwqbI+45IhMIXEJqSJJqosN8Tvxx5CU
dF1YXt5vD8kKCGAoSnnvvBc+bZIyw+Q97ZEIdNEodldA+388vqspCxReZV0+T+8g
YR82eJaNo7oYD9iDwK0RxJssKzgmmiu8E83RnofY1dYZunQkF2oiiYvRbGJlvTge
TurW8HP4qg==
-----END CERTIFICATE-----
"
    checksum SHA1:1237:53cd4c0f5682eaa4985b5f6b0b64b30443d1eca6
    revision 4
}
cm device /Common/bigipA1.f5demo.com {
    active-modules { "APM, Base, VE GBB (500 CCU)|NOPNWXP-BYIMXTV|Anti-Virus Checks|Base Endpoint Security Checks|Firewall Checks|Network Access|Secure Virtual Keyboard|APM, Web Application|Machine Certificate Checks|Protected Workspace|Remote Desktop|App Tunnel|50 CCU, 200 Access Sessions" "BT-VE, 10G|ZDRUNGK-WPNNOFV|Rate Shaping|SDN Services, VE|SSL, Forward Proxy, VE|Max Compression, VE|Acceleration Manager, VE|Crytpo Offload, VE, Tier 2 (1G - 10G)|BIG-IP VE, Multicast Routing|Advanced Protocols, VE|DNS and GTM (250 QPS), VE|SSL, VE|AFM, VE|ASM, VE|DNS-GTM, Base, 10Gbps|DNSSEC|GTM Licensed Objects, Unlimited|DNS Licensed Objects, Unlimited|DNS Rate Fallback, 250K|GTM Rate Fallback, 250K|GTM Rate, 250K|DNS Rate Limit, 250K QPS|CGN, BIG-IP VE, AFM ONLY|Routing Bundle, VE|PSM, VE" }
    base-mac 00:0c:29:78:58:7a
    build 1.0.271
    chassis-id 564d4547-7d19-33db-a01b1178587a
    configsync-ip 10.128.30.243
    edition "Hotfix HF1"
    ha-capacity 5
    hostname bigipA1.f5demo.com
    management-ip 192.168.1.249
    marketing-name "BIG-IP Virtual Edition"
    mirror-ip 10.128.30.243
    mirror-secondary-ip 10.128.20.240
    optional-modules { "App Mode (TMSH Only, No Root/Bash)" "Concurrent Users" "Concurrent Users and Access Sessions, VE" "External Interface and Network HSM, VE" "IPI Subscription, 1Yr, VE" "IPI Subscription, 1Yr, VE-10G" "IPI Subscription, 3Yr, VE" "IPI Subscription, 3Yr, VE-10G" "PEM URL Filtering, 1Yr, HIGH PERF" "PEM URL Filtering, 3Yr, HIGH PERF" "PEM URL Filtering, Subscription, 1Yr, 1G, 3G, 5G" "PEM URL Filtering, Subscription, 3Yr, 1G, 3G, 5G" "PEM, ADD-VE, 5G" "PEM, Quota Management, VE" "SWG Subscription, 1Yr, VE" "SWG Subscription, 3Yr, VE" "URL Filtering Subscription, 1Yr, VE" "URL Filtering Subscription, 3Yr, VE" }
    platform-id Z100
    product BIG-IP
    time-zone America/New_York
    unicast-address {
        {
            effective-ip 10.128.30.243
            effective-port 1026
            ip 10.128.30.243
        }
        {
            effective-ip management-ip
            effective-port 1026
            ip management-ip
        }
    }
    version 12.1.2
}
cm device /Common/bigipA2.f5demo.com {
    active-modules { "APM, Base, VE GBB (500 CCU)|CILNPBS-ACFWDSR|Anti-Virus Checks|Base Endpoint Security Checks|Firewall Checks|Network Access|Secure Virtual Keyboard|APM, Web Application|Machine Certificate Checks|Protected Workspace|Remote Desktop|App Tunnel|50 CCU, 200 Access Sessions" "BT-VE, 10G|APQUXPU-CFAKNKM|Rate Shaping|SDN Services, VE|SSL, Forward Proxy, VE|Max Compression, VE|Acceleration Manager, VE|Crytpo Offload, VE, Tier 2 (1G - 10G)|BIG-IP VE, Multicast Routing|Advanced Protocols, VE|DNS and GTM (250 QPS), VE|SSL, VE|AFM, VE|ASM, VE|DNS-GTM, Base, 10Gbps|DNSSEC|GTM Licensed Objects, Unlimited|DNS Licensed Objects, Unlimited|DNS Rate Fallback, 250K|GTM Rate Fallback, 250K|GTM Rate, 250K|DNS Rate Limit, 250K QPS|CGN, BIG-IP VE, AFM ONLY|Routing Bundle, VE|PSM, VE" }
    base-mac 00:0c:29:3b:98:6b
    build 1.0.271
    cert /Common/dtdi.crt
    chassis-id 564df3d5-55fe-6e1a-6059013b986b
    configsync-ip 10.128.30.242
    edition "Hotfix HF1"
    ha-capacity 5
    hostname bigipA2.f5demo.com
    key /Common/dtdi.key
    management-ip 192.168.1.248
    marketing-name "BIG-IP Virtual Edition"
    mirror-ip 10.128.30.242
    mirror-secondary-ip 10.128.20.242
    optional-modules { "App Mode (TMSH Only, No Root/Bash)" "Concurrent Users" "Concurrent Users and Access Sessions, VE" "External Interface and Network HSM, VE" "IPI Subscription, 1Yr, VE" "IPI Subscription, 1Yr, VE-10G" "IPI Subscription, 3Yr, VE" "IPI Subscription, 3Yr, VE-10G" "PEM URL Filtering, 1Yr, HIGH PERF" "PEM URL Filtering, 3Yr, HIGH PERF" "PEM URL Filtering, Subscription, 1Yr, 1G, 3G, 5G" "PEM URL Filtering, Subscription, 3Yr, 1G, 3G, 5G" "PEM, ADD-VE, 5G" "PEM, Quota Management, VE" "SWG Subscription, 1Yr, VE" "SWG Subscription, 3Yr, VE" "URL Filtering Subscription, 1Yr, VE" "URL Filtering Subscription, 3Yr, VE" }
    platform-id Z100
    product BIG-IP
    self-device true
    time-zone America/New_York
    unicast-address {
        {
            effective-ip 10.128.30.242
            effective-port 1026
            ip 10.128.30.242
        }
        {
            effective-ip management-ip
            effective-port 1026
            ip management-ip
        }
    }
    version 12.1.2
}
cm device-group /Common/device_trust_group {
    auto-sync enabled
    devices {
        /Common/bigipA1.f5demo.com { }
        /Common/bigipA2.f5demo.com { }
    }
    hidden true
    network-failover disabled
}
cm device-group /Common/gtm {
    devices {
        /Common/bigipA2.f5demo.com { }
    }
    hidden true
    network-failover disabled
}
cm device-group /Common/ha_group {
    devices {
        /Common/bigipA1.f5demo.com { }
        /Common/bigipA2.f5demo.com { }
    }
    type sync-failover
}
cm key /Common/dtca.key {
    cache-path /config/filestore/files_d/Common_d/trust_certificate_key_d/:Common:dtca.key_36416_4
    certificate-text "-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCjUvTte/d90lEQ
RtpDWYr79I6rNdXJajPkx4qCLKsaxqE3kttTEbkUxgVHYr0f77+LtAdii3npFrGc
xUcZnclvp8YLExmpNZ4+X6GV+nGK0egzN5g9UoJ+SUGSvAmilcKhXLFp3jJMj0/J
oGdxvHDwuooRgBl6Tcj2vBeoovf3CHKzF5pKUMj/nMEJ0NAi5x2K5LgB36eWLG1/
+v+osRMi+ZY21FVOyeEdFuYBWJhqvxB8PZkGIrul2Wvf7EZIFSpTaLAQ8ZgV1fnC
6X3sncL9qYlgmyinGZnzTbQW9okYkfAqSlxcSYZKuyswShbxCkVqqWo+OntRZOL6
2apH7YT5AgMBAAECggEBAJFmAPaLLkGtQs2ixhy/UqQLjBePzcuJ6Lj7i6tn6Mvl
mRDIhMjnNkXwJDLxDD2qSnQsyYZJdTa1JVnTpwB/IB1u1zh0wJuLSF1u9YN3ei2D
wZwXGkk9cz7KKL5g+JLtkF/nDWqajVzrGLT/QBhZEpK8/r2ltQjUxtwhh05yBx67
0nI78ddSjx7/OQulT0nEZEJUziT/WgMj5FLBCW/r6Xi5dS+aYOIfef/EhT2YGXhM
5hnhetYoDkeeHMKZj/KrJ11bMfUY8bud8bMkwru9F/fS9z8jgBRJKo6WHJghgVE6
9PspHVAGYada0KWb9oWQyprHb4RzDu9b09fkm6NMnAECgYEA0X7a3QuslLWF1BlB
3rxEaedqNjJktDh7RIQu0YLxK7Cn6t4pGv9MKSk/+ik7wAhV+fu9rzXJZNP0iUY2
dnSljPH2HO6VND9bvNiJgvmCfDg+rsfhOgYGKgtF4U8ccmJhrw0ryLf8leDjtTCA
tzmvKljcVxMKeAnpf7e2z5FKSrECgYEAx5RIp/VdKhFfKmQWNrtSJqOLSKgAV9o+
YN9FZ5sAoFgnskG/wqmhwBl5vPk5xgY0TSBSVH2rtFVeEtzeNAYlHnvwPlN9vf7G
s8RCv97adiwvAkC2kNZSB4N+vEmz/xxsHIKtpqmDuejkTu25UGetUHG57yMIVSB4
q7tb6jqe4MkCgYBFCkdanaRMhd4K3iAFJYpuVGN+ZPEnK44EMIO1bC/KtDdCgeCO
EyCoV/3LlZcpXBXpgnsqqNEsN2XZb5g3RY3he0QemMn3JAI5pCr9TPkhsu+Fbj3d
f2q8pGZtMEMxtxZ2OCL7zRai1jB03/0rZQlDLXHACHhkwu9+ta67jSgsoQKBgFyV
O0c/GaLkQCNoHq3xI+DsyTZBSTd39Kv3pziyvQ2lF3Un7w8cpf55UvIJI3XrduO4
dLjhO4ACggt6DlJP73Q+xmoDTTeQMxk9mEFt3iYnxP7kikySP6dgprAt+KQFyVlI
fcnspUDe+tpqiSb1kX7Z4wk+VSU4VQJFfhQgcYeRAoGAGBLncYhYNMPzh99h67dK
gy+ZfyZ+Z34nqdvvqAlA8zF6aORH8UcSV5J/ikBfs8QljaIQNpmmI0fcX6APwJDG
nnYTHVNKOvp1cnVxqH2ekeCZMeZKcFYJnE709jts7ZbEWgCyScoihXyEjLuwHXwX
zk+xQPBs7Qa9HYwAkQnQpLs=
-----END PRIVATE KEY-----
"
    checksum SHA1:1704:a04740fac1a600c26fe0d38b32740c62c38914f6
    revision 4
}
cm key /Common/dtdi.key {
    cache-path /config/filestore/files_d/Common_d/trust_certificate_key_d/:Common:dtdi.key_36412_2
    certificate-text "-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDzR2SMp7bvgC1v
XrI/6JMBCPYdlZsYtaOe55rDmsEbU4Ate9fpbp8u3rdzccpuZP0L512ahFFoeANG
xoLyrAIEKVEbIRcjTsq82jBrNS0UIHB6x+41SNfIVMuooIF9NTqh5DPPRe85LGOr
0PrWPFFcrVFKSPR5j4LBU/QhHkirCluBuYjzhWfJtkT1j7zAJnkjUB9CRTBGat2m
RFZroedf4iWww0Dn8Ycep09eOnZiU1xQGHxrNI7G43WDpl8/KySvK87TRBN39Y0O
URNcmTI4v+9limpubcr3JSCQMI9s/b7G5uHKgAiuQc+kbQK0DoVwZn1nq5JRdmSy
BUX1VQ89AgMBAAECggEBAPFN1ilBzc0/mVGHX0zOtslnByAPHbjjqfjbB4KPhI1D
RLdYyK/Mvu3xkYtbygu39dsR0aGLL2hs6esQyiBEhvdzt/Qt3VJzO9sYnMAqDZ2S
E59lohyONSKLITsQgYAdBRxBSzaDyqYuJmrtLXDEgXtommIRfRT6SRrT2CnlbPTg
sQLSf3RQW5HiedQj5WMiBo/j2+C24mSrJ/p1CYtC2wYw9rfmwhSfdaufIybr/i4L
9m3q2dVAAX3CAc2kNCUx4/a7TTjl1aq0Q4j8iAr9dW8HAsDt6aJrd4XQfq654gMS
SfAnAC//o28fjDJmrpdUdBEdu00pJclPNNrbZ+HahUECgYEA/Yc/hLFNeNwh90Zi
dAQEFOKh+Q8q8GOAIEjlPx2oC1MRAGLj20FE/TpHZYr0ibV9U5YHSAHnaeVlgKxR
fzOwlBGVCCT5UHuyFq8xs+FBQAk/lTLKWE0NLyRA2iu1jbI3CHapDVSAXcv8ZXwK
bM0BEmJmgfU2D24RCxSUNAn9JTECgYEA9aaQdIZFRrhwB7t3DDWP2JcS7XfbGMlC
+bz8ZpkmYx/x1THXx98F4OjJQY4vegL1h5ROmgLw/Pz7eqQ21vU7YmgemnZft+O1
meGGyvfFiRL9xZCC4qeR2gWffDXjzVwyO1Kw+POwjVk/NvpHEdYbQUs3KHn3otk7
Ri0OsyN8980CgYBaQmBWuVi/gn+FLUW30AYz+Ut5A/Fhi8r9s3YKNmCxR21yGcLN
ODt7e9gXSpUswbRQocUN2b+tb8HnQXHyO1DOJkRMlf08rg0FDnI/fB5i0egVEfP/
486hzeJYyd7lB2GYXcZpvH/G5OyCpNqBSarsBKRB+C6655ChxT3OGRBKwQKBgQDV
pOWh0l1R4nrc3rftEHBoqQu3KDSPXAs59Jl4Cd6O+2tyRgUrOdZ9Azh2IVk9PnGY
Vu39mG1LOiLlSQjA70uUjIWBRU5+Ojbo/HIk+FT+oFvBhauvwJljCtzoRF45buPp
IEP2YMq+RE5sXEOPSa0unmH8fAdZxKB+qhVMy6KWSQKBgAIi9HwmZsAstr/n5yWi
d6gHpW0Fg8+lHZvDgyi9thuhzFi6AgXTqqm4uDLHdcgNT9Bf5COxO/FVKl0sumiy
eda+UNHU/pUkjWWXqn6eL+uqOqGsURnUe3la7OJ9gYwwjaOmOP6+CJdG5Huqqdhv
KHtyICdwu6FySri9x9O/G7t4
-----END PRIVATE KEY-----
"
    checksum SHA1:1704:18a00191c8be2934daccab695e912d278496fee4
    revision 2
}
cm traffic-group /Common/traffic-group-1 {
    ha-group ha-1
    unit-id 1
}
cm traffic-group /Common/traffic-group-local-only { }
cm trust-domain /Common/Root {
    ca-cert /Common/dtca.crt
    ca-cert-bundle /Common/dtca-bundle.crt
    ca-devices { /Common/bigipA1.f5demo.com /Common/bigipA2.f5demo.com }
    ca-key /Common/dtca.key
    guid 7b86844c-315a-4615-9d31000c293b986b
    status initialized
    trust-group /Common/device_trust_group
}
gtm global-settings metrics {
    metrics-collection-protocols { icmp }
}
gtm global-settings metrics-exclusions {
    addresses none
}
ltm default-node-monitor {
    rule /Common/custom_icmp_monitor 
}
ltm node /Common/10.128.10.11 {
    address 10.128.10.11
}
ltm node /Common/10.128.10.12 {
    address 10.128.10.12
}
ltm node /Common/10.128.10.15 {
    address 10.128.10.15
}
ltm node /Common/10.128.10.16 {
    address 10.128.10.16
}
ltm node /Common/10.128.10.101 {
    address 10.128.10.101
}
ltm node /Common/10.128.10.211 {
    address 10.128.10.211
}
ltm node /Common/10.128.20.11 {
    address 10.128.20.11
}
ltm node /Common/10.128.20.12 {
    address 10.128.20.12
}
ltm node /Common/10.128.20.13 {
    address 10.128.20.13
}
ltm node /Common/10.128.20.14 {
    address 10.128.20.14
}
ltm node /Common/10.128.20.15 {
    address 10.128.20.15
}
ltm node /Common/10.128.20.16 {
    address 10.128.20.16
}
ltm node /Common/10.128.20.17 {
    address 10.128.20.17
}
ltm node /Common/10.128.20.21 {
    address 10.128.20.21
}
ltm node /Common/10.128.20.23 {
    address 10.128.20.23
}
ltm node /Common/10.128.20.25 {
    address 10.128.20.25
}
ltm node /Common/10.128.20.222 {
    address 10.128.20.222
}
ltm node /Common/10.128.20.227 {
    address 10.128.20.227
}
ltm policy /Common/http_redirect {
    controls { forwarding }
    requires { http }
    rules {
        http_redirect_rule {
            actions {
                0 {
                    http-reply
                    redirect
                    location "tcl:https://[getfield [HTTP::host] \":\" 1][HTTP::uri]"
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm pool /Common/New_Pool {
    members {
        /Common/10.128.20.11:80 {
            address 10.128.20.11
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/cluster-1 {
    members {
        /Common/10.128.20.11:80 {
            address 10.128.20.11
        }
        /Common/10.128.20.12:80 {
            address 10.128.20.12
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/cluster-1a {
    members {
        /Common/10.128.20.11:80 {
            address 10.128.20.11
        }
        /Common/10.128.20.12:80 {
            address 10.128.20.12
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/cluster-2 {
    members {
        /Common/10.128.20.13:80 {
            address 10.128.20.13
        }
        /Common/10.128.20.14:80 {
            address 10.128.20.14
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/cluster-3 {
    members {
        /Common/10.128.20.15:80 {
            address 10.128.20.15
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/dvwa_pool {
    members {
        /Common/10.128.20.17:80 {
            address 10.128.20.17
        }
    }
    monitor /Common/dvwa_monitor 
}
ltm pool /Common/ftp-pool {
    members {
        /Common/10.128.20.11:21 {
            address 10.128.20.11
        }
    }
    monitor /Common/custom-ftp-monitor 
}
ltm pool /Common/http_pool {
    members {
        /Common/10.128.20.11:80 {
            address 10.128.20.11
        }
        /Common/10.128.20.12:80 {
            address 10.128.20.12
        }
        /Common/10.128.20.13:80 {
            address 10.128.20.13
        }
        /Common/10.128.20.14:80 {
            address 10.128.20.14
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/new-top-pool {
    members {
        /Common/10.128.10.211:80 {
            address 10.128.10.211
        }
    }
    monitor /Common/tcp 
}
ltm pool /Common/p22_pool {
    members {
        /Common/10.128.20.12:22 {
            address 10.128.20.12
        }
        /Common/10.128.20.13:22 {
            address 10.128.20.13
        }
        /Common/10.128.20.14:22 {
            address 10.128.20.14
        }
    }
    monitor /Common/custom_tcp_monitor 
}
ltm pool /Common/p80_backup {
    members {
        /Common/10.128.20.15:80 {
            address 10.128.20.15
            session user-disabled
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm pool /Common/p443_pool {
    load-balancing-mode least-connections-member
    members {
        /Common/10.128.20.11:443 {
            address 10.128.20.11
            priority-group 8
        }
        /Common/10.128.20.12:443 {
            address 10.128.20.12
            priority-group 8
        }
        /Common/10.128.20.13:443 {
            address 10.128.20.13
            priority-group 2
        }
        /Common/10.128.20.14:443 {
            address 10.128.20.14
            ratio 2
        }
    }
    monitor /Common/https_443 
}
ltm pool /Common/radius-acct {
    members {
        /Common/10.128.20.222:1813 {
            address 10.128.20.222
        }
        /Common/10.128.20.227:1813 {
            address 10.128.20.227
        }
    }
}
ltm pool /Common/radius-lb-pool {
    allow-snat no
    members {
        /Common/10.128.20.222:1812 {
            address 10.128.20.222
        }
        /Common/10.128.20.227:1812 {
            address 10.128.20.227
        }
    }
}
ltm pool /Common/top-level-cluster-pool {
    members {
        /Common/10.128.20.21:80 {
            address 10.128.20.21
        }
        /Common/10.128.20.23:80 {
            address 10.128.20.23
        }
        /Common/10.128.20.25:80 {
            address 10.128.20.25
        }
    }
    monitor /Common/custom_http_monitor 
}
ltm rule /Common/Server_Logical_OR {
    when HTTP_REQUEST {
  if { [active_members p80_pool] < 4 } {
    drop
  }
}
}
ltm rule /Common/check_active_members {
    when HTTP_REQUEST {
  if { [active_members p80_pool] >= 4 } {
    HTTP::respond 200 content {
      <html>
	 <head>
	    <title>Check Active Members Monitor</title>
	       </head>
	          <body>
	            Good to use this pool...
	         </body>
       </html>
    }
  }
}
}
ltm rule /Common/partial_Failover {
    when HTTP_REQUEST {
  if { [active_members p80_pool] < 2 && [active_members p80_backup] >= 1} {
    pool p80_backup
  }
}
}
ltm rule /Common/persist-uie {
    when CLIENT_ACCEPTED {
    set ip_client [IP::client_addr]
    log local0. "IP client is $ip_client"
    persist uie $ip_client 1800
}
}
ltm rule /Common/radius-lb-irule {
                        # ISE persistence iRule based on Calling-Station-Id (Client MAC Address) and Framed-IPAddress
when CLIENT_ACCEPTED {
 set framed_ip [RADIUS::avp 8 ip4]
 set calling_station_id [RADIUS::avp 31 "string"]
 if { $calling_station_id ne ""} {
   log local0. "Request from $calling_station_id:$framed_ip"
   persist uie $calling_station_id 1800
 }
}
}
ltm rule /Common/radius-lb-irule-2 {
    when CLIENT_ACCEPTED {
    binary scan [UDP::payload] ccSH32cc code ident len auth attr_code1 attr_len1
    set index 22
    while { $index < $len } {
        set hsize [expr ( $attr_len1 - 2 ) * 2]
        binary scan [UDP::payload] @${index}H${hsize}cc attr_value next_attr_code2 next_attr_len2

        # If it is Calling-Station-Id (31) attribute...
        if { $attr_code1 == 31 } {
            persist uie $attr_value 120
            log local0. "AV code $attr_code1  value $attr_value"
            return
        }
        set index [ expr $index + $attr_len1 ]  
        set attr_len1 $next_attr_len2      
        set attr_code1 $next_attr_code2   
    }
}
}
ltm rule /Common/ssh-lb-rule {
    when CLIENT_ACCEPTED {
  set local_ip [IP::local_addr]
  set client_ip [IP::client_addr]
  set remote_ip [IP::remote_addr]
  log local0. "Local IP is $local_ip"
  log local0. "Client IP is $client_ip"
  log local0. "Remote IP is $remote_ip"
  if { [IP::addr [IP::client_addr] equals 10.128.20.0/24] } {
      log local0. "Automaping $client_ip"
      snat automap
   }
}
}
ltm rule /Common/ssh-lb-snat-pool {
    when CLIENT_ACCEPTED {
  set local_ip [IP::local_addr]
  set client_ip [IP::client_addr]
  set remote_ip [IP::remote_addr]
  log local0. "Local IP is $local_ip"
  log local0. "Client IP is $client_ip"
  log local0. "Remote IP is $remote_ip"
  if { [IP::addr [IP::client_addr] equals 10.128.20.0/24] } {
      log local0. "Using snatpool for  $client_ip"
      snatpool snat_pool
   }
}
}
ltm rule /Common/test-state {
    when CLIENT_ACCEPTED {
    binary scan [UDP::payload] ccSH32cc code ident len auth \
        attr_code1 attr_len1
    set index 22
    while { $index < $len } {
        set hsize [expr ( $attr_len1 - 2 ) * 2]
        binary scan [UDP::payload] @${index}H${hsize}cc attr_value \
            attr_code2 attr_len2
        # If it is State(24) attribute...
        if { $attr_code1 == 24 } {
            persist uie $attr_value 30
            return
        }
        set index [ expr $index + $attr_len1 ] 
        set attr_len1 $attr_len2    
        set attr_code1 $attr_code2
    }
}
when SERVER_DATA {
    binary scan [UDP::payload] ccSH32cc code ident len auth \
        attr_code1 attr_len1
    # If it is Access-Challenge(11)...
    if { $code == 11 } {
      set index 22
      while { $index < $len } {
        set hsize [expr ( $attr_len1 - 2 ) * 2]
        binary scan [UDP::payload] @${index}H${hsize}cc attr_value \
            attr_code2 attr_len2
        if { $attr_code1 == 24 } {
            persist add uie $attr_value 30
            return
        }
        set index [ expr $index + $attr_len1 ] 
        set attr_len1 $attr_len2    
        set attr_code1 $attr_code2
      }
    }
}
}
ltm rule /Common/vs-target-1 {
    when LB_SELECTED {    
  set ip_client [IP::client_addr]
  set p_rec [persist lookup uie $ip_client]
  log local0. "P rec is $p_rec"
  set selected_vs [LB::server addr]
  persist add uie $ip_client 
  log local0. "Selected vs is $selected_vs"
  if {$selected_vs equals "10.128.20.21"} then {
    pool cluster-1
    log local0. "pool is cluster-1"
  }
  if {$selected_vs equals "10.128.20.23"} then {
    pool cluster-2
    log local0. "pool is cluster-2"
  }
  if {$selected_vs equals "10.128.20.25"} then {
    pool cluster-3
    log local0. "pool is cluster-3"
  }
  LB::reselect
}
}
ltm rule /Common/vs-target-cluster {
    when HTTP_REQUEST {
  eval [LB::select]
  set selected_vs [LB::server addr]
  log local0. "Selected vs is $selected_vs"
  if {$selected_vs equals "10.128.20.21"} then {
    virtual vs-cluster-1
    log local0. "virtual is vs-cluster-1"
  }
  if {$selected_vs equals "10.128.20.23"} then {
    virtual vs-cluster-2
    log local0. "virtual is vs-cluster-2"
  }
  if {$selected_vs equals "10.128.20.25"} then {
    virtual vs-cluster-3
    log local0. "virtual is vs-cluster-3"
  }
}
}
ltm snat-translation /Common/10.128.20.243 {
    address 10.128.20.243
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snatpool /Common/snat_pool {
    members {
        /Common/10.128.20.243
    }
}
ltm virtual /Common/IPv6-VS {
    description "VS for IPv6 clients"
    destination /Common/2001:A:80:A::15.80
    ip-protocol tcp
    pool /Common/http_pool
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/New_VS {
    destination /Common/10.128.10.21:80
    mask 255.255.255.255
    pool /Common/New_Pool
    profiles {
        /Common/fastL4 { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/dvwa_virtual {
    destination /Common/10.128.10.35:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/dvwa_pool
    profiles {
        /Common/dvwa_ssl_profile {
            context clientside
        }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/ftp-vs {
    destination /Common/10.128.10.20:21
    ip-protocol tcp
    mask 255.255.255.255
    mirror enabled
    pool /Common/ftp-pool
    profiles {
        /Common/ftp { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/https_redirect_vs {
    destination /Common/10.128.10.30:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/p443_pool
    profiles {
        /Common/custom_client_ssl {
            context clientside
        }
        /Common/serverssl {
            context serverside
        }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/icmp_vs {
    destination /Common/0.0.0.0:0
    ip-forward
    mask any
    profiles {
        /Common/fastL4 { }
    }
    source 0.0.0.0/0
    translate-address disabled
    translate-port disabled
}
ltm virtual /Common/new-top-level {
    destination /Common/10.128.10.46:80
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/new-top-pool
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/p22_virtual {
    destination /Common/10.128.10.20:22
    ip-protocol tcp
    mask 255.255.255.255
    mirror enabled
    pool /Common/p22_pool
    profiles {
        /Common/tcp { }
    }
    rules {
        /Common/ssh-lb-snat-pool
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/p80_to_p443_redirect_vs {
    destination /Common/10.128.10.30:80
    ip-protocol tcp
    mask 255.255.255.255
    policies {
        /Common/http_redirect { }
    }
    pool /Common/http_pool
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/p80_vs {
    description "VS Shared by A1 & A2"
    destination /Common/10.128.10.20:80
    fw-enforced-policy /Common/p80_vs_Policy
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/http_pool
    profiles {
        /Common/http { }
        /Common/oneconnect { }
        /Common/tcp { }
    }
    security-log-profiles {
        /Common/LOG-FIREWALL
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/p443_to_p80_virtual {
    destination /Common/10.128.10.40:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /Common/src_persist {
            default yes
        }
    }
    pool /Common/http_pool
    profiles {
        /Common/lamp_client_ssl {
            context clientside
        }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/p443_to_p443_virtual {
    destination /Common/10.128.10.20:443
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/p443_pool
    profiles {
        /Common/custom_client_ssl {
            context clientside
        }
        /Common/serverssl {
            context serverside
        }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/radius_acct_vs {
    destination /Common/10.128.10.50:1813
    ip-protocol udp
    mask 255.255.255.255
    persist {
        /Common/custom_radius_persist {
            default yes
        }
    }
    pool /Common/radius-acct
    profiles {
        /Common/custom_udp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/radius_lb_vs {
    destination /Common/10.128.10.50:1812
    ip-protocol udp
    mask 255.255.255.255
    persist {
        /Common/custom_radius_persist {
            default yes
        }
    }
    pool /Common/radius-lb-pool
    profiles {
        /Common/custom_radius { }
        /Common/custom_udp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/vs-cluster-1 {
    destination /Common/10.128.20.21:80
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/cluster-1
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/vs-cluster-1a {
    destination /Common/10.128.10.211:80
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/cluster-1a
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/vs-cluster-2 {
    destination /Common/10.128.20.23:80
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/cluster-2
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/vs-cluster-3 {
    destination /Common/10.128.20.25:80
    ip-protocol tcp
    mask 255.255.255.255
    pool /Common/cluster-3
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /Common/vs-cluster-top-level {
    destination /Common/10.128.10.45:80
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /Common/custom_uie {
            default yes
        }
    }
    pool /Common/top-level-cluster-pool
    profiles {
        /Common/http { }
        /Common/tcp { }
    }
    rules {
        /Common/vs-target-1
    }
    source 0.0.0.0/0
    source-address-translation {
        type automap
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual-address /Common/0.0.0.0 {
    address any
    arp disabled
    icmp-echo disabled
    mask any
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.0.0 {
    address 10.128.0.0
    arp disabled
    icmp-echo disabled
    mask 255.255.0.0
    spanning enabled
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.20 {
    address 10.128.10.20
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    route-advertisement enabled
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.21 {
    address 10.128.10.21
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.30 {
    address 10.128.10.30
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.35 {
    address 10.128.10.35
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.40 {
    address 10.128.10.40
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.45 {
    address 10.128.10.45
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.46 {
    address 10.128.10.46
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.50 {
    address 10.128.10.50
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.122 {
    address 10.128.10.122
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.10.211 {
    address 10.128.10.211
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.20.0 {
    address 10.128.20.0
    arp disabled
    icmp-echo disabled
    mask 255.255.255.0
    spanning enabled
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.20.21 {
    address 10.128.20.21
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.20.23 {
    address 10.128.20.23
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.20.25 {
    address 10.128.20.25
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/10.128.20.40 {
    address 10.128.20.40
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /Common/2001:A:80:A::15 {
    address 2001:a:80:a::15
    arp enabled
    icmp-echo enabled
    traffic-group /Common/traffic-group-1
}
ltm classification signature-definition {
    last-attempt-datetime 2017-05-12:05:26:18
    last-attempt-user admin
    message "Signature file server cannot be reached (No response from update server). Please download the DPI Signatures file and install manually."
    progress-status failure
}
ltm dns nameserver /Common/dnsx_server_0 {
    address 10.128.20.252
    route-domain /Common/0
}
ltm dns zone /Common/f5demo.com {
    dns-express-server /Common/dnsx_server_0
}
ltm monitor ftp /Common/custom-ftp-monitor {
    debug no
    defaults-from /Common/ftp
    destination *:*
    filename /var/tmp/ftp-monitor-test-file.txt
    interval 10
    mode port
    password $M$Be$y7D7AWyDAhZXtQr6t/c8yA==
    time-until-up 0
    timeout 31
    username root
}
ltm monitor http /Common/check_active_members {
    adaptive disabled
    defaults-from /Common/http
    destination 10.128.10.200:80
    interval 5
    ip-dscp 0
    recv 200
    recv-disable 500
    send "GET /\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor http /Common/custom_http_monitor {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 10
    ip-dscp 0
    recv 10.128.20.[11-15]
    recv-disable none
    send "GET /index.php\r\n"
    time-until-up 0
    timeout 31
}
ltm monitor http /Common/dvwa_monitor {
    adaptive disabled
    defaults-from /Common/http
    destination *:*
    interval 5
    ip-dscp 0
    recv RandomStorm
    recv-disable none
    send "GET /login.php\r\n"
    time-until-up 0
    timeout 16
}
ltm monitor icmp /Common/custom_icmp_monitor {
    adaptive disabled
    defaults-from /Common/icmp
    interval 15
    time-until-up 0
    timeout 46
}
ltm monitor radius /Common/custom_radius_monitor {
    debug no
    defaults-from /Common/radius
    destination *:*
    interval 10
    password $M$Hp$8YtCM5I2uTWJOIKoziemVw==
    secret $M$el$FAujN3rOYmtzWYUinIf8WA==
    time-until-up 0
    timeout 31
    username f5_user
}
ltm monitor tcp /Common/custom_tcp_monitor {
    adaptive disabled
    defaults-from /Common/tcp
    destination *:*
    interval 10
    ip-dscp 0
    recv none
    recv-disable none
    send none
    time-until-up 0
    timeout 31
}
ltm persistence hash /Common/custom_radius_persist_hash {
    app-service none
    defaults-from /Common/hash
    hash-algorithm default
    hash-buffer-limit 0
    hash-end-pattern none
    hash-length 0
    hash-offset 0
    hash-start-pattern none
    match-across-pools disabled
    match-across-services enabled
    match-across-virtuals disabled
    mirror disabled
    override-connection-limit disabled
    rule /Common/radius-lb-irule
    timeout 120
}
ltm persistence sip /Common/custom_sip {
    app-service none
    defaults-from /Common/sip_info
    match-across-pools disabled
    match-across-services disabled
    match-across-virtuals disabled
    mirror disabled
    override-connection-limit disabled
    sip-info Call-ID
    timeout 180
}
ltm persistence source-addr /Common/src_persist {
    app-service none
    defaults-from /Common/source_addr
    hash-algorithm default
    map-proxies enabled
    mask 255.255.255.0
    match-across-pools disabled
    match-across-services disabled
    match-across-virtuals disabled
    override-connection-limit disabled
    timeout 30
}
ltm persistence universal /Common/custom_radius_persist {
    app-service none
    defaults-from /Common/universal
    match-across-pools disabled
    match-across-services disabled
    match-across-virtuals enabled
    mirror disabled
    override-connection-limit disabled
    rule /Common/radius-lb-irule
    timeout 120
}
ltm persistence universal /Common/custom_uie {
    app-service none
    defaults-from /Common/universal
    match-across-pools disabled
    match-across-services disabled
    match-across-virtuals disabled
    mirror disabled
    override-connection-limit disabled
    rule /Common/persist-uie
    timeout 180
}
ltm profile analytics /Common/analytics {
    app-service none
    captured-traffic-external-logging disabled
    captured-traffic-internal-logging disabled
    collect-geo disabled
    collect-http-throughput enabled
    collect-ip disabled
    collect-max-tps-and-throughput disabled
    collect-methods enabled
    collect-page-load-time disabled
    collect-response-codes enabled
    collect-server-latency enabled
    collect-subnets disabled
    collect-url disabled
    collect-user-agent disabled
    collect-user-sessions disabled
    collected-stats-external-logging disabled
    collected-stats-internal-logging enabled
    description none
    external-logging-publisher none
    notification-by-email disabled
    notification-by-snmp disabled
    notification-by-syslog disabled
    notification-email-addresses none
    publish-irule-statistics disabled
    sampling disabled
    sampling-ratio 1
    session-cookie-security ssl-only
    session-timeout 300
    session-timeout-minutes 5
    smtp-config none
    traffic-capture {
        /Common/capturing-for-analytics { }
    }
}
ltm profile analytics /Common/my_analytics {
    app-service none
    captured-traffic-external-logging disabled
    captured-traffic-internal-logging enabled
    collect-geo disabled
    collect-ip enabled
    collect-max-tps-and-throughput enabled
    collect-methods enabled
    collect-page-load-time enabled
    collect-response-codes enabled
    collect-subnets disabled
    collect-url enabled
    collect-user-agent enabled
    collect-user-sessions enabled
    collected-stats-external-logging disabled
    collected-stats-internal-logging enabled
    defaults-from /Common/analytics
    description none
    external-logging-publisher none
    notification-by-email disabled
    notification-by-snmp disabled
    notification-by-syslog enabled
    notification-email-addresses none
    publish-irule-statistics disabled
    session-cookie-security ssl-only
    session-timeout 300
    session-timeout-minutes 5
    traffic-capture {
        /Common/capturing-for-my_analytics {
            request-captured-parts all
            response-captured-parts all
        }
    }
}
ltm profile client-ssl /Common/custom_client_ssl {
    alert-timeout 10
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /Common/custom_ssl_cert.crt
    cert-key-chain {
        custom_ssl_cert {
            cert /Common/custom_ssl_cert.crt
            key /Common/custom_ssl_cert.key
        }
    }
    chain none
    ciphers DEFAULT
    defaults-from /Common/clientssl
    handshake-timeout 10
    inherit-certkeychain false
    key /Common/custom_ssl_cert.key
    mod-ssl-methods disabled
    options { dont-insert-empty-fragments }
    passphrase none
    proxy-ssl disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size indefinite
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-ticket disabled
    sni-default false
    sni-require false
    strict-resume disabled
    unclean-shutdown enabled
}
ltm profile client-ssl /Common/dvwa_ssl_profile {
    alert-timeout 10
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /Common/dvwa.crt
    cert-key-chain {
        dvwa {
            cert /Common/dvwa.crt
            key /Common/dvwa.key
        }
    }
    chain none
    ciphers DEFAULT
    defaults-from /Common/clientssl
    generic-alert enabled
    handshake-timeout 10
    inherit-certkeychain false
    key /Common/dvwa.key
    mod-ssl-methods disabled
    mode enabled
    options { dont-insert-empty-fragments }
    passphrase none
    proxy-ssl disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size indefinite
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-ticket disabled
    sni-default false
    sni-require false
    ssl-sign-hash any
    strict-resume disabled
    unclean-shutdown enabled
}
ltm profile client-ssl /Common/lamp_client_ssl {
    alert-timeout 10
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /Common/lamp.crt
    cert-key-chain {
        lamp {
            cert /Common/lamp.crt
            key /Common/lamp.key
        }
    }
    chain none
    ciphers DEFAULT
    defaults-from /Common/custom_client_ssl
    handshake-timeout 10
    inherit-certkeychain false
    key /Common/lamp.key
    mod-ssl-methods disabled
    options { dont-insert-empty-fragments }
    passphrase none
    proxy-ssl disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size indefinite
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-ticket disabled
    sni-default false
    sni-require false
    strict-resume disabled
    unclean-shutdown enabled
}
ltm profile dns /Common/dns_profile {
    app-service none
    defaults-from /Common/dns
}
ltm profile radius /Common/custom_radius {
    app-service none
    defaults-from /Common/radiusLB
}
ltm profile udp /Common/custom_udp {
    app-service none
    datagram-load-balancing disabled
    defaults-from /Common/udp
    idle-timeout 600
}
net interface 1.1 {
    media-fixed 10000T-FD
}
net interface 1.2 {
    media-fixed 10000T-FD
}
net interface 1.3 {
    media-fixed 10000T-FD
}
net packet-filter /Common/Block_ {
    action discard
    logging enabled
    order 5
    rule "( src net 10.0.0.2/32 ) and ( dst net 10.0.0.249/32 ) and ( dst port 22 )"
}
net route /Common/external_default_gateway {
    gw 10.128.10.2
    network default
}
net route-domain /Common/0 {
    id 0
    vlans {
        /Common/HA
        /Common/http-tunnel
        /Common/socks-tunnel
        /Common/external
        /Common/internal
    }
}
net self /Common/10.128.30.242 {
    address 10.128.30.242/24
    allow-service all
    traffic-group /Common/traffic-group-local-only
    vlan /Common/HA
}
net self /Common/10.128.10.242 {
    address 10.128.10.242/24
    allow-service all
    traffic-group /Common/traffic-group-local-only
    vlan /Common/external
}
net self /Common/10.128.20.241 {
    address 10.128.20.241/24
    allow-service {
        default
    }
    traffic-group /Common/traffic-group-1
    vlan /Common/internal
}
net self /Common/10.128.20.242 {
    address 10.128.20.242/24
    allow-service all
    traffic-group /Common/traffic-group-local-only
    vlan /Common/internal
}
net self-allow {
    defaults {
        igmp:0
        ospf:0
        pim:0
        tcp:161
        tcp:22
        tcp:4353
        tcp:443
        tcp:53
        udp:1026
        udp:161
        udp:4353
        udp:520
        udp:53
    }
}
net stp /Common/cist {
    interfaces {
        1.1 {
            external-path-cost 2000
            internal-path-cost 2000
        }
        1.2 {
            external-path-cost 2000
            internal-path-cost 2000
        }
        1.3 {
            external-path-cost 2000
            internal-path-cost 2000
        }
    }
    vlans {
        /Common/HA
        /Common/external
        /Common/internal
    }
}
net vlan /Common/HA {
    interfaces {
        1.3 { }
    }
    tag 4092
}
net vlan /Common/external {
    interfaces {
        1.1 { }
    }
    tag 4093
}
net vlan /Common/internal {
    interfaces {
        1.2 { }
    }
    tag 4094
}
net fdb tunnel /Common/http-tunnel { }
net fdb tunnel /Common/socks-tunnel { }
net fdb vlan /Common/HA { }
net fdb vlan /Common/external { }
net fdb vlan /Common/internal { }
net ipsec ike-daemon /Common/ikedaemon {
    log-publisher /Common/default-ipsec-log-publisher
}
net tunnels tunnel /Common/http-tunnel {
    description "Tunnel for http-explicit profile"
    profile /Common/tcp-forward
}
net tunnels tunnel /Common/socks-tunnel {
    description "Tunnel for socks profile"
    profile /Common/tcp-forward
}
pem global-settings analytics { }
security dos udp-portlist /Common/dos-udp-portlist {
    entries {
        entry1 {
            match-direction both
            port-number 53
        }
    }
    list-type exclude-listed-ports
}
security firewall address-list /Common/bad-clients {
    addresses {
        10.128.10.106 { }
        10.128.10.107 { }
        10.128.10.108 { }
        10.128.10.109 { }
        10.128.10.110 { }
    }
}
security firewall address-list /Common/good-nets {
    addresses {
        10.128.10.0/24 { }
        10.128.20.0 { }
        10.128.30.0 { }
        192.168.1.0/24 { }
    }
}
security firewall config-change-log {
    log-publisher /Common/local-db-publisher
}
security firewall global-rules {
    enforced-policy /Common/glob-policy-1
    staged-policy /Common/glob-policy-1
}
security firewall policy /Common/glob-policy-1 {
    rules {
        check-icmp-1 {
            rule-list /Common/check-icmp
        }
        p80_vs_global {
            action accept
            ip-protocol tcp
            log yes
            destination {
                addresses {
                    10.128.10.20 { }
                }
                ports {
                    80 { }
                }
            }
        }
    }
}
security firewall policy /Common/p80_vs_Policy {
    rules {
        p80_vs_rule_set {
            rule-list /Common/check-p80-vs
        }
    }
}
security firewall policy /Common/test-staging-policy {
    rules {
        test-staging-rule {
            action drop
            log yes
        }
    }
}
security firewall port-list /Common/_sys_self_allow_tcp_defaults {
    ports {
        22 { }
        53 { }
        161 { }
        443 { }
        1029-1043 { }
        4353 { }
    }
}
security firewall port-list /Common/_sys_self_allow_udp_defaults {
    ports {
        53 { }
        161 { }
        520 { }
        1026 { }
        4353 { }
    }
}
security firewall rule-list /Common/_sys_self_allow_all {
    rules {
        _sys_allow_all {
            action accept
        }
    }
}
security firewall rule-list /Common/_sys_self_allow_defaults {
    rules {
        _sys_allow_tcp_defaults {
            action accept
            ip-protocol tcp
            destination {
                port-lists {
                    /Common/_sys_self_allow_tcp_defaults
                }
            }
        }
        _sys_allow_udp_defaults {
            action accept
            ip-protocol udp
            destination {
                port-lists {
                    /Common/_sys_self_allow_udp_defaults
                }
            }
        }
        _sys_allow_ospf_defaults {
            action accept
            ip-protocol ospf
        }
        _sys_allow_pim_defaults {
            action accept
            ip-protocol pim
        }
        _sys_allow_igmp_defaults {
            action accept
            ip-protocol igmp
        }
    }
}
security firewall rule-list /Common/_sys_self_allow_management {
    rules {
        _sys_allow_ssh {
            action accept
            ip-protocol tcp
            destination {
                ports {
                    22 { }
                }
            }
        }
        _sys_allow_web {
            action accept
            ip-protocol tcp
            destination {
                ports {
                    443 { }
                }
            }
        }
    }
}
security firewall rule-list /Common/check-icmp {
    rules {
        check-icmp-rule-2 {
            action drop
            ip-protocol icmp
            log yes
            icmp {
                255 { }
            }
            source {
                address-lists {
                    /Common/bad-clients
                }
            }
        }
        check-icmp-rule-1 {
            action accept
            ip-protocol icmp
            log yes
            destination {
                addresses {
                    10.128.10.0/24 { }
                    10.128.20.0/24 { }
                    10.128.30.0/24 { }
                }
            }
            icmp {
                255 { }
            }
            source {
                address-lists {
                    /Common/good-nets
                }
            }
        }
        check-icmp-rule-3 {
            action drop
            ip-protocol icmp
            log yes
            icmp {
                255 { }
            }
        }
    }
}
security firewall rule-list /Common/check-p80-vs {
    rules {
        p80_vs_block_bad_clients {
            action drop
            ip-protocol tcp
            log yes
            source {
                address-lists {
                    /Common/bad-clients
                }
            }
        }
        p80_vs_Allowed {
            action accept
            ip-protocol tcp
            log yes
            source {
                address-lists {
                    /Common/good-nets
                }
            }
        }
        p80_vs_block {
            action drop
            ip-protocol tcp
            log yes
        }
    }
}
security ip-intelligence policy /Common/ip-intelligence { }
security log profile /Common/LOG-FIREWALL {
    network {
        /Common/LOG-FIREWALL {
            filter {
                log-acl-match-accept enabled
                log-acl-match-drop enabled
                log-acl-match-reject enabled
            }
            format {
                field-list { acl_rule_name action drop_reason vlan src_ip src_port dest_ip dest_port protocol }
                type field-list
            }
            publisher /Common/local-db-publisher
        }
    }
}
sys db adm.block.enable {
    value "1"
}
sys db avr.stats.internal.maxentitiespertable {
    value "20000"
}
sys db avr.subnetprefixlength.ipv4 {
    value "24"
}
sys db avr.subnetprefixlength.ipv6 {
    value "64"
}
sys db bigd.debug {
    value "enable"
}
sys db dos.udplimiterportmode_0 {
    value "all"
}
sys db gtm.peerinfototalgtms {
    value "0"
}
sys db log.accesscontrol.level {
    value "Notice"
}
sys db log.accessperrequest.level {
    value "Notice"
}
sys db log.apmacl.level {
    value "Notice"
}
sys db log.big3d.level {
    value "crit"
}
sys db log.big3dshim.level {
    value "crit"
}
sys db log.eca.level {
    value "Notice"
}
sys db log.gtm.level {
    value "crit"
}
sys db log.sso.level {
    value "Notice"
}
sys db log.swg.level {
    value "Notice"
}
sys db provision.1nic {
    value "disable"
}
sys db provision.1nicautoconfig {
    value "enable"
}
sys db provision.extramb {
    value "0"
}
sys db provision.tomcat.extramb {
    value "0"
}
sys db rule.validation {
    value "strict"
}
sys db ssl.certrequest.commonname {
    value "bigipA1.f5demo.com"
}
sys db ssl.certrequest.countryname {
    value "US"
}
sys db ssl.certrequest.divisionname {
    value "IT"
}
sys db ssl.certrequest.localityname {
    value "Seattle"
}
sys db ssl.certrequest.organizationname {
    value "F5 Networks"
}
sys db ssl.certrequest.stateorprovincename {
    value "WA"
}
sys db systemauth.primaryadminuser {
    value "admin"
}
sys db tm.allowmulticastl2destinationtraffic {
    value "disable"
}
sys db tm.fw.defaultaction {
    value "accept"
}
sys db tm.tcpallowinsecurerst {
    value "disable"
}
sys db tmm.classallocatemetadata {
    value "enable"
}
sys db tmm.coredump {
    value "enable"
}
sys db tmm.dhcp.client.connection.packets.inprogress.max {
    value "2000"
}
sys db tmm.dhcp.server.connection.packets.inprogress.max {
    value "2000"
}
sys db tmm.gradualfileloadadjust {
    value "enable"
}
sys db tmm.lb.wlcoffset {
    value "disable"
}
sys db tmm.verbose {
    value "disable"
}
sys db tmm.verbosecmp {
    value "disable"
}
sys db woc.remembered.wan.vlans {
    value "/Common/external /Common/internal "
}
sys dns {
    name-servers { 10.128.20.252 10.128.10.230 }
    search { 10.128.20.252 10.128.10.230 }
}
sys feature-module cgnat {
    disabled
}
sys folder / {
    device-group /Common/ha_group
    hidden false
    inherited-devicegroup false
    inherited-traffic-group false
    traffic-group /Common/traffic-group-1
}
sys folder /Common {
    device-group /Common/ha_group
    hidden false
    inherited-devicegroup true
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
sys folder /Common/Drafts {
    device-group /Common/ha_group
    hidden false
    inherited-devicegroup true
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
sys global-settings {
    gui-security-banner-text "Welcome to the F5 BIG-IP VE vlab environment!

The vlab environment is intended for F5 Networks training and demonstration purposes only.

Log in with your username and password using the fields on the left."
    gui-setup disabled
    hostname bigipA2.f5demo.com
    mgmt-dhcp disabled
}
sys ha-group ha-1 {
    pools {
        /Common/http_pool {
            threshold 3
            weight 50
        }
    }
}
sys httpd {
    allow { 10.0.0.0/24 192.168.1.0/24 }
    auth-pam-idle-timeout 100000
}
sys management-dhcp /Common/sys-mgmt-dhcp-config {
    request-options { subnet-mask broadcast-address routers domain-name domain-name-servers host-name ntp-servers }
}
sys management-ip 192.168.1.248/24 {
    description configured-statically
}
sys management-ovsdb {
    ca-cert-file none
    cert-file none
    cert-key-file none
    disabled
    log-level info
}
sys management-route /Common/default {
    description configured-statically
    gateway 192.168.1.254
    network default
}
sys ntp {
    description configured-by-dhcp
    servers { 192.168.1.252 }
    timezone America/New_York
}
sys provision afm {
    level nominal
}
sys provision ltm {
    level nominal
}
sys snmp {
    agent-addresses { tcp6:161 udp6:161 }
    allowed-addresses { 10.128.10.0/255.255.255.0 10.0.0.0/255.255.255.0 }
    communities {
        /Common/ipublic_1 {
            community-name public
        }
    }
    disk-monitors {
        /Common/root {
            minspace 2000
            path /
        }
        /Common/var {
            minspace 10000
            path /var
        }
    }
    process-monitors {
        /Common/bigd {
            process bigd
        }
        /Common/chmand {
            process chmand
        }
        /Common/httpd {
            max-processes infinity
            process httpd
        }
        /Common/mcpd {
            process mcpd
        }
        /Common/sod {
            process sod
        }
        /Common/tmm {
            max-processes infinity
            process tmm
        }
    }
    traps {
        /Common/i10_0_0_13_1 {
            community public
            host 10.0.0.13
            port 161
        }
    }
}
sys state-mirroring {
    addr 10.128.30.242
    secondary-addr 10.128.20.242
}
sys syslog {
    kern-from crit
    kern-to alert
    local6-from alert
    local6-to alert
    messages-from crit
    messages-to alert
    remote-servers {
        /Common/remotesyslog1 {
            host 10.0.0.13
        }
    }
    user-log-from crit
    user-log-to alert
}
sys application template /Common/HTTP-TPL-1 {
    actions {
        definition {
            html-help {
                <p><strong>web iApp Template</strong></p>

<p>This template creates a complete configuration optimized for managing web traffic. <br>Before you start: </p>
<ul>
    <li>All of the help for this iApp template is found inline. Select <b>Yes, show inline help</b> from the inline help question.</li>
	<li>For a complete walkthrough of this web iApp, as well as detailed information and help, see http://www.f5.com/pdf/deployment-guides/iapp-http-dg.pdf</li>
    <li>Check System :: Resource Provisioning to ensure that LTM (Local Traffic Manager) is provisioned.</li>
    <li>Set up VLANs and Self IP addresses on the networks you use for client-side and server-side traffic.</li>
    <li>If configuring SSL Offload on the BIG-IP system, before running the iApp, import the proper SSL certificate(s) that corresponds to the DNS names used by the clients.</li>
    <li>If you plan to use the iApp to deploy any of the optional modules, the modules must be fully licensed and provisioned before running the iApp.</li>

</ul>
            }
            implementation {
                package require iapp 1.1.0
iapp::template start

set DEFAULT_ANSWER    /#default#
set DO_NOT_USE_ANSWER /#do_not_use#
set CREATE_NEW_ANSWER /#create_new#

proc v11_4_main {} {
    package require iapp 1.1.0
    set app $tmsh::app_name

    # CLIENT-SIDE VLAN SELECTION
    set advanced [expr { [iapp::is ::ssl_encryption_questions__advanced yes] \
                 || [iapp::is ::ssl_encryption_questions__legacy_advanced yes]}]
    set select_vlans [iapp::is ::net__vlan_mode enabled disabled]

    # array keys: $advanced,$select_vlans
    array set vlan_arr {
        1,1 { vlans-$::net__vlan_mode vlans replace-all-with \{ $::net__client_vlan \} }
        *   { vlans-disabled vlans none }
    }

    # SNATPOOL PARAMETERS
    set do_snat      [expr { [iapp::is ::net__same_subnet  yes] \
                     || ![iapp::is ::net__route_to_bigip yes] || !$advanced}]
    set do_automap   [expr { [iapp::is ::net__snat_type automap] || !$advanced}]
    set new_snatpool [iapp::is ::net__snatpool $::CREATE_NEW_ANSWER]

    # array keys: $do_snat,$do_automap,$new_snatpool
    array set snatpool_arr {
        1,1,1 { snat automap }
        1,1,0 { snat automap }
        1,0,1 { snatpool [iapp::conf create ltm snatpool ${app}_snatpool \
                members replace-all-with \{ [string map \
                {"addr " "" \{ "" \} ""} $::net__snatpool_members] \} ]}
        1,0,0 { snatpool $::net__snatpool }
        *     { snat none }
    }

    # CLIENT TCP OPTIMIZATION PROFILE
    # In order to show the correct recommendation per the chosen topology,
    # the presentation of client tcp optimization has a split presentation.
    # Only one of tcp_lan_opt or tcp_wan_opt contains the user's selection.
    # This statement identifies whether the user has selected the recommended
    # option from this split presentation.

    # array keys: $::net__client_mode,$::net__server_mode
    array set best_tcp_profile {
        lan,lan    tcp-lan-optimized
        lan,wan    tcp-lan-optimized
        wan,lan    tcp-wan-optimized
        wan,wan    tcp-wan-optimized
        lan,tunnel wom-tcp-lan-optimized
        *          wom-tcp-wan-optimized
    }

    set new_client_tcp [expr { !$advanced || ( \
                       [iapp::is ::net__client_mode lan] ? \
                       [iapp::is ::client__tcp_lan_opt $::CREATE_NEW_ANSWER] : \
                       [iapp::is ::client__tcp_wan_opt $::CREATE_NEW_ANSWER] )}]

    # array keys: $new_client_tcp,$::net__client_mode
    array set client_tcp_arr {
        0,lan    $::client__tcp_lan_opt
        0,wan    $::client__tcp_wan_opt
        0,tunnel $::client__tcp_wan_opt
        *        { [iapp::conf create ltm profile tcp ${app}_[iapp::substa \
                   best_tcp_profile($::net__client_mode,$::net__server_mode)] \
                   defaults-from [iapp::substa \
                   best_tcp_profile($::net__client_mode,$::net__server_mode)] \
                 ]}
    }


    # SERVER TCP OPTIMIZATION PROFILE
    # See above comments regarding the client tcp optimization array.
    set new_server_tcp [expr { !$advanced || ( \
                       [iapp::is ::net__server_mode lan] ? \
                       [iapp::is ::server__tcp_lan_opt $::CREATE_NEW_ANSWER] : \
                       [iapp::is ::server__tcp_wan_opt $::CREATE_NEW_ANSWER] )}]

    # array keys: $new_server_tcp,$::net__server_mode
    array set server_tcp_arr {
        0,lan    $::server__tcp_lan_opt
        0,wan    $::server__tcp_wan_opt
        0,tunnel $::server__tcp_wan_opt
        *        { [iapp::conf create ltm profile tcp ${app}_[iapp::substa \
                   best_tcp_profile($::net__server_mode,$::net__client_mode)] \
                   defaults-from [iapp::substa \
                   best_tcp_profile($::net__server_mode,$::net__client_mode)] \
                    ]}
    }

    # CLIENT SSL 
    set do_client_ssl [iapp::is ::ssl__mode client_ssl client_ssl_server_ssl]
    set ssl_pass_thru [iapp::is ::ssl__mode pass_thru]

    set new_client_ssl [expr { !$advanced || [iapp::is \
                       ::ssl__client_ssl_profile $::CREATE_NEW_ANSWER] }]
    set do_chain_cert  [expr { $advanced && \
                       ![iapp::is ::ssl__use_chain_cert $::DO_NOT_USE_ANSWER] }]
    set cssl_cmd \
        "ltm profile client-ssl ${app}_client-ssl defaults-from clientssl"

    # array keys: $do_client_ssl,$new_client_ssl,$do_chain_cert
    array set client_ssl_arr {
        1,1,1 { [iapp::conf create $cssl_cmd key $::ssl__key cert $::ssl__cert \
              chain $::ssl__use_chain_cert] \{ context clientside \} }
        1,1,0 { [iapp::conf create $cssl_cmd key $::ssl__key cert $::ssl__cert \
              chain none] \{ context clientside \} }
        1,0,1 { $::ssl__client_ssl_profile \{ context clientside \} }
        1,0,0 { $::ssl__client_ssl_profile \{ context clientside \} }
        *     {}
    }

    # SERVER SSL PROFILE 
    set do_server_ssl [iapp::is ::ssl__mode server_ssl client_ssl_server_ssl] 
    set default_server [expr { !$advanced || \
                       [iapp::is ::ssl__server_ssl_profile $::DEFAULT_ANSWER] }]

    # array keys: $do_server_ssl,$default_server
    array set server_ssl_arr {
        1,1 { [iapp::conf create ltm profile server-ssl ${app}_server-ssl \
              defaults-from serverssl] \{ context serverside \} }
        1,0 { $::ssl__server_ssl_profile \{ context serverside \} }
        *   {}
    }

    set apm_profiles ""

    # HTTP PROFILE
    set new_http [expr { !$advanced || \
                 [iapp::is ::pool__http $::CREATE_NEW_ANSWER] }]
    set xff_cmd  [expr { (!$advanced || [iapp::is ::pool__xff yes]) \
                 ? "insert-xforwarded-for enabled" \
                 : "insert-xforwarded-for disabled" }]

    # array keys: $ssl_pass_thru,$new_http,$do_client_ssl
    array set http_arr {
        0,0,0 { $::pool__http }
        0,0,1 { $::pool__http }
        0,1,0 { [iapp::conf create ltm profile http ${app}_http \
                 defaults-from http  \
                 redirect-rewrite none $xff_cmd] }
        0,1,1 { [iapp::conf create ltm profile http ${app}_http \
                 defaults-from http  \
                 redirect-rewrite matching $xff_cmd] }
        *     { }
    }

    # COMPRESSION PROFILE
    set do_compress  [expr { !$ssl_pass_thru && \
        ![iapp::is ::client__http_compression $::DO_NOT_USE_ANSWER] }]
    set new_compress [iapp::is ::client__http_compression $::CREATE_NEW_ANSWER]

    # array keys: $do_compress,$new_compress
    array set compress_arr {
        1,1 { [iapp::conf create ltm profile http-compression \
              ${app}_wan-optimized-compression \
              defaults-from wan-optimized-compression \
              content-type-include replace-all-with \{ $::HTTP_CONTENT_TYPES \}] }
        1,0 { $::client__http_compression }
        *   {}
    }

    # AAM APPLICATION
    # The purpose of the embedded string map is to remove the table column names
    set perf_monitor  [iapp::is ::client__enable_perf_monitor yes]
    set wam_cmd "wam application ${app}_aam hosts replace-all-with \{ \
             [string map {"name " ""} [join [join [expr { [info exists \
             ::pool__hosts] ? "$::pool__hosts" : ""}]]]] \}"

    # array keys: $advanced,$perf_monitor,$ssl_pass_thru
    # "do_configure_wa" need not be keyed here since this is called from
    # caching_arr, which is already keyed on "do_configure_wa".
    array set wam_arr {
        1,1,0 { [iapp::conf create $wam_cmd policy \"$::client__policy\" \
                 info-header $::client__x_wa_info_header \
                 perf-monitor enabled \
                 perf-monitor-data-retention-period \
                 $::client__data_retention_period] }
        1,0,0 { [iapp::conf create $wam_cmd policy \"$::client__policy\" \
                 info-header $::client__x_wa_info_header \
                 perf-monitor disabled \
                 perf-monitor-data-retention-period 0] }
        0,1,0 { [iapp::conf create $wam_cmd \
                 policy \"/Common/Generic Policy - Enhanced\" \
                 info-header none \
                 perf-monitor enabled \
                 perf-monitor-data-retention-period \
                 $::client__data_retention_period] }
        0,0,0 { [iapp::conf create $wam_cmd \
                 policy \"/Common/Generic Policy - Enhanced\" \
                 info-header none \
                 perf-monitor disabled \
                 perf-monitor-data-retention-period 0] }
        *     {}
    }

    # CACHING PROFILE
    set do_configure_wa [expr { !$ssl_pass_thru && [iapp::get_provisioned am] && \
        [iapp::is ::client__use_wa yes] }]
    set do_caching [expr { !$ssl_pass_thru && ($do_configure_wa || \
        ![iapp::is ::client__standard_caching_without_wa $::DO_NOT_USE_ANSWER])}]
    set new_caching [expr { !$advanced || \
        ($do_configure_wa && \
        [iapp::is ::client__standard_caching_with_wa $::CREATE_NEW_ANSWER]) || \
        (!$do_configure_wa && \
        [iapp::is ::client__standard_caching_without_wa $::CREATE_NEW_ANSWER])}]

    # array keys: $do_caching,$new_caching,$do_configure_wa
    array set caching_arr {
        1,1,1 { [iapp::conf create ltm profile web-acceleration \
              ${app}_optimized-acceleration \
              defaults-from optimized-acceleration  \
              applications replace-all-with \{ [iapp::substa \
              wam_arr($advanced,$perf_monitor,$ssl_pass_thru)] \}] }
        1,1,0 { [iapp::conf create ltm profile web-acceleration \
              ${app}_optimized-caching defaults-from optimized-caching \
              applications none cache-size 10  \
              cache-object-max-size 2000000] }
        1,0,1 $::client__standard_caching_with_wa
        1,0,0 $::client__standard_caching_without_wa
        *     {}
    }

    # ONECONNECT PROFILE
    set do_oneconnect  [expr { !$ssl_pass_thru && (!$advanced || \
                       ![iapp::is ::server__oneconnect $::DO_NOT_USE_ANSWER])}]
    set new_oneconnect [expr { !$advanced || \
                       [iapp::is ::server__oneconnect $::CREATE_NEW_ANSWER] }]
    set one_cmd "ltm profile one-connect ${app}_oneconnect \
                 defaults-from oneconnect source-mask"

    # array keys: $do_oneconnect,$new_oneconnect,$do_snat
    array set oneconnect_arr {
        1,1,1 { [iapp::conf create $one_cmd 255.255.255.255] }
        1,1,0 { [iapp::conf create $one_cmd 0.0.0.0] }
        1,0,1 $::server__oneconnect
        1,0,0 $::server__oneconnect
        *     {}
    }

    # NTLM PROFILE
    # array keys: $do_oneconnect,$advanced
    array set ntlm_arr {
        1,1  $::server__ntlm
        *    /#do_not_use#
    }

    # array keys: $ntlm_arr($do_oneconnect,$advanced)
    array set ntlm_cmd {
        /#create_new# { /Common/${app}.app/[iapp::conf create ltm profile \
                        ntlm ${app}_ntlm defaults-from ntlm] }
        /#do_not_use# { }
        *             { [iapp::substa ntlm_arr($do_oneconnect,$advanced)] }
    }

    # PERSISTENCE
    set discourage_persist [iapp::is ::ssl_encryption_questions__version 2013]

    # array keys: $discourage_persist,$advanced,$ssl_pass_thru,$is_edge
    array set persist_arr {
        0,0,0,0 /#cookie#
        0,0,0,1 /#source#
        0,0,1,0 /#source#
        0,0,1,1 /#source#
        0,1,0,0 $::pool__persist
        0,1,0,1 $::pool__persist
        0,1,1,0 $::pool__pass_thru_persist
        0,1,1,1 $::pool__pass_thru_persist
        1,1,0,0 $::pool__discourage_persist
        1,1,0,1 $::pool__discourage_persist
        1,1,1,0 $::pool__pass_thru_discourage_persist
        1,1,1,1 $::pool__pass_thru_discourage_persist
        *       /#do_not_use#
    }

    array set persist_cmd {
        /#cookie#     { persist replace-all-with \{ \
                        [iapp::conf create $cookie_cmd] \}\
                        fallback-persistence [iapp::conf create $source_cmd] }
        /#source#     { persist replace-all-with \{ \
                        [iapp::conf create $source_cmd] \}\
                        fallback-persistence none }
        /#do_not_use# { persist none \
                        fallback-persistence none }
        *             { persist replace-all-with \{ [iapp::substa \
        persist_arr($discourage_persist,$advanced,$ssl_pass_thru,$is_edge)] \} \
                        fallback-persistence none }
    }

    set is_edge [expr { ![iapp::get_items -exists -norecursive \
                        ltm persistence cookie /Common/cookie] }]
    set cookie_cmd "ltm persistence cookie ${app}_cookie-persistence "
    set cm_sync_status_details [lindex [tmsh::get_status cm sync-status] 0]
    set cm_sync_status [tmsh::get_field_value $cm_sync_status_details status]
    set mirror_action  [expr { $cm_sync_status eq "Standalone" && [iapp::is \
                       ::pool__mirror enabled] ? "enabled" : "disabled" }]
    set source_cmd     "ltm persistence source-addr \
                       ${app}_source-addr-persistence mirror $mirror_action"

    # ISESSION
    set do_isession   [expr { [iapp::is ::net__server_mode tunnel]
                      && [iapp::get_provisioned am] }]
    set new_isession  [iapp::is ::client__isession_profile $::CREATE_NEW_ANSWER]

    # array keys: $do_isession,$advanced,$new_isession
    array set isession_arr {
        1,1,1 { [iapp::conf create wom profile isession ${app}_isession \
              data-encryption $::client__isession__encryption \
              compression $::client__isession__compression \
              deduplication $::client__isession__deduplication] \
              \{ context serverside \} }
        1,1,0 { $::client__isession_profile \{ context serverside \} }
        1,0,1 { /Common/isession \{ context serverside \} }
        1,0,0 { /Common/isession \{ context serverside \} }
        *     {}
    }

    # IRULES
    set stats_irule {
when HTTP_REQUEST {
  set reqtime [clock clicks]
}
when HTTP_RESPONSE {
  ISTATS::set "sys.application.service <APP> string app-rtt" [expr {[clock clicks] - $reqtime}]
  ISTATS::set "sys.application.service <APP> string tcp-rtt" [TCP::rtt]
}
    }

    set irule_names [expr { !$ssl_pass_thru && [iapp::is ::rtt_stats enabled] \
        ? [iapp::conf create ltm rule ${app}_stats_irule \
          [string map "<APP> /Common/$app.app/$app" $stats_irule]] : "" }]

    append irule_names [expr { $advanced && [info exists ::irules__irules] \
        ? " $::irules__irules" : "" }]

    # array key: [llength $irule_names]
    array set irule_arr {
        0 { rules none }
        * { rules \{ $irule_names \} }
    }

    if { [info exists ::pool__port_secure] } {
        set redirect_rule [string map [list _PORT $::pool__port_secure] {
when HTTP_REQUEST {
    HTTP::redirect https://[getfield [HTTP::host] : 1]:_PORT[HTTP::uri]
}}]
    }

    # array keys: $::pool__port_secure
    array set redirect_irule {
        443  { _sys_https_redirect }
        *    { [iapp::conf create ltm rule ${app}_https_redirect $redirect_rule] }
    }

    # ANALYTICS (AVR) PROFILE
    set do_analytics  [expr { $advanced && [iapp::get_provisioned avr] \
        && !$ssl_pass_thru && ![iapp::is ::stats__analytics $::DO_NOT_USE_ANSWER] }]
    set new_analytics [iapp::is ::stats__analytics $::CREATE_NEW_ANSWER]

    # array keys: $do_analytics,$new_analytics
    array set analytics_arr {
        1,1 { [iapp::conf create ltm profile analytics ${app}_analytics \
            defaults-from analytics] }
        1,0 $::stats__analytics
        *   {}
    }

    # REQUEST LOGGING
    set do_logging [expr { $advanced && !$ssl_pass_thru && \
                   ![iapp::is ::stats__request_logging $::DO_NOT_USE_ANSWER] }]

    # array keys: $do_logging
    array set logging_arr {
        1 { $::stats__request_logging }
        0 {}
    }

    # MONITOR SEND STRING
    # only the first FQDN in the hosts table is used for monitoring
    set hostname   [lindex [join [join [expr { [info exists ::pool__hosts] \
                   ? "$::pool__hosts" : "" }]]] 1]
    set http10     [expr {$advanced && [iapp::is ::monitor__http_version http10]}]
    set http_post  [expr {$advanced && [iapp::is ::monitor__http_method POST]}]
    set ntlm_creds 0

    # array keys: $http10,$http_post,$ntlm_creds
    array set send_string_arr {
        1,1,1 { 'POST $::monitor__uri HTTP/1.0\\r\\nContent-Length: [string length $::monitor__post_body]\\r\\nConnection: Keep-Alive\\r\\n\\r\\n$::monitor__post_body' }
        1,1,0 { 'POST $::monitor__uri HTTP/1.0\\r\\nContent-Length: [string length $::monitor__post_body]\\r\\n\\r\\n$::monitor__post_body' }
        1,0,1 { 'GET $::monitor__uri HTTP/1.0\\r\\nConnection: Keep-Alive\\r\\n\\r\\n' }
        1,0,0 { 'GET $::monitor__uri HTTP/1.0\\r\\n\\r\\n' }
        0,1,1 { 'POST $::monitor__uri HTTP/1.1\\r\\nHost: $hostname\\r\\nContent-Length: [string length $::monitor__post_body]\\r\\n$::monitor__post_body' }
        0,1,0 { 'POST $::monitor__uri HTTP/1.1\\r\\nHost: $hostname\\r\\nContent-Length: [string length $::monitor__post_body]\\r\\nConnection: Close\\r\\n\\r\\n$::monitor__post_body' }
        0,0,1 { 'GET $::monitor__uri HTTP/1.1\\r\\nHost: $hostname\\r\\n' }
        *     { 'GET $::monitor__uri HTTP/1.1\\r\\nHost: $hostname\\r\\nConnection: Close\\r\\n\\r\\n'}
    }

    # MONITOR
    set new_pool [expr {( $::net__server_mode ne "tunnel" && \
                 [iapp::is ::pool__pool_to_use $::CREATE_NEW_ANSWER] ) || \
                        ( $::net__server_mode eq "tunnel" && \
                 [iapp::is ::pool__pool_to_use_wom $::CREATE_NEW_ANSWER] )}]
    set new_monitor   [iapp::is ::monitor__monitor $::CREATE_NEW_ANSWER]
    set http_or_https [expr { $do_server_ssl || $ssl_pass_thru ?{https}:{http} }]

    # array keys: $new_pool,$new_monitor,$advanced
    array set monitor_arr {
        1,1,1 { monitor [iapp::conf create ltm monitor $http_or_https \
              ${app}_${http_or_https}_monitor \
              defaults-from $http_or_https \
              interval $::monitor__frequency \
              timeout [expr { $::monitor__frequency * 3 + 1 } ] \
              [expr { [iapp::is ::monitor__anonymous "no"] || \
                      [iapp::is ::monitor__credentials "basic"] || \
                      [iapp::is ::monitor__credentials "ntlm"] ? \
              "username $::monitor__user \
               password [iapp::make_safe_password $::monitor__passwd]" : "" }] \
              send [iapp::substa send_string_arr($http10,$http_post,$ntlm_creds)]\
              recv '$::monitor__response'] }
        1,1,0 { monitor [iapp::conf create ltm monitor $http_or_https \
              ${app}_${http_or_https}_monitor \
              defaults-from $http_or_https \
              interval 30 \
              timeout 91 \
              send [iapp::substa send_string_arr($http10,$http_post,$ntlm_creds)]\
              recv '$::monitor__response'] }
        1,0,1 { monitor $::monitor__monitor }
        1,0,0 { monitor $::monitor__monitor }
        *     { monitor none }
    }

    # GENERAL POOL PARAMETERS 1
    set do_slow_ramp [iapp::is ::server__use_slow_ramp yes]
    set do_pga       [iapp::is ::pool__use_pga yes]

    # array keys: $advanced,$do_slow_ramp,$do_pga
    array set pool_ramp_pga_arr {
        1,1,1 { slow-ramp-time $::server__slow_ramp_setvalue \
              min-active-members $::pool__min_active_members }
        1,1,0 { slow-ramp-time $::server__slow_ramp_setvalue \
              min-active-members 0 }
        1,0,1 { slow-ramp-time 10 \
              min-active-members $::pool__min_active_members }
        1,0,0 { slow-ramp-time 10 min-active-members 0 }
        *     { slow-ramp-time 300 min-active-members 0 }
    }

    # GENERAL POOL PARAMETERS 2
    set tcp_queuing [iapp::is ::server__tcp_req_queueing yes]

    # array keys: $advanced,$is_edge,$tcp_queuing
    array set pool_lb_queue_arr {
        1,1,1 { load-balancing-mode $::pool__lb_method_edge \
                queue-on-connection-limit enabled \
                queue-depth-limit $::server__tcp_queue_length \
                queue-time-limit  $::server__tcp_queue_timeout }
        1,1,0 { load-balancing-mode $::pool__lb_method_edge \
                queue-on-connection-limit disabled }
        1,0,1 { load-balancing-mode $::pool__lb_method \
                queue-on-connection-limit enabled \
                queue-depth-limit $::server__tcp_queue_length \
                queue-time-limit  $::server__tcp_queue_timeout }
        1,0,0 { load-balancing-mode $::pool__lb_method \
                queue-on-connection-limit disabled }
        0,1,1 { load-balancing-mode round-robin \
                queue-on-connection-limit disabled }
        0,1,0 { load-balancing-mode round-robin \
                queue-on-connection-limit disabled }
        *     { load-balancing-mode least-connections-member \
                queue-on-connection-limit disabled }
    }

    # POOL
    set no_pool [expr {( $::net__server_mode ne "tunnel" && \
                [iapp::is ::pool__pool_to_use $::DO_NOT_USE_ANSWER] ) || \
                       ( $::net__server_mode eq "tunnel" && \
                [iapp::is ::pool__pool_to_use_wom $::DO_NOT_USE_ANSWER] )}]

    # array keys: $new_pool,$no_pool
    array set pool_arr {
        1,0 { [iapp::conf create ltm pool ${app}_pool \
              [iapp::substa pool_ramp_pga_arr($advanced,$do_slow_ramp,$do_pga)] \
              [iapp::substa pool_lb_queue_arr($advanced,$is_edge,$tcp_queuing)] \
              [iapp::substa monitor_arr($new_pool,$new_monitor,$advanced)] \
              [iapp::pool_members $::pool__members]] }
        0,0 { [expr { $::net__server_mode ne "tunnel" ? \
              $::pool__pool_to_use : $::pool__pool_to_use_wom }] }
        *   { none }
    }

    # VIRTUAL SERVERS
    set secure_client [expr { $do_client_ssl || $ssl_pass_thru }]
    set do_redirect [expr { [iapp::is ::pool__redirect_to_https yes] || \
             !$advanced}]
    set mask [expr { $advanced && $::pool__mask ne "" \
             ? $::pool__mask : [iapp::destination -mask $::pool__addr] }]

    # array keys: $secure_client,$do_redirect
    array set vs_arr {
        1,1 { [iapp::conf create ltm virtual ${app}_vs \
            destination [iapp::destination $::pool__addr $::pool__port_secure] \
            mask $mask \
            $vs_params \
            ip-protocol tcp \
            mirror $mirror_action \
            profiles replace-all-with \{ $vs_profiles \}] \
            \
            [iapp::conf create ltm virtual ${app}_redir_vs \
            destination [iapp::destination $::pool__addr [expr {[info exists \
            ::pool__redirect_port] ? $::pool__redirect_port : 80}]] \
            mask $mask \
            $redir_vs_params \
            ip-protocol tcp \
            mirror $mirror_action \
            profiles replace-all-with \{ $tcp_profiles http \} \
            rules \{ [iapp::substa redirect_irule($::pool__port_secure)] \}]}
        1,0 { [iapp::conf create ltm virtual ${app}_vs \
            destination [iapp::destination $::pool__addr $::pool__port_secure] \
            mask $mask \
            $vs_params \
            ip-protocol tcp \
            mirror $mirror_action \
            profiles replace-all-with \{ $vs_profiles \}] }
        *   { [iapp::conf create ltm virtual ${app}_vs \
            destination [iapp::destination $::pool__addr $::pool__port] \
            mask $mask \
            $vs_params \
            ip-protocol tcp \
            mirror $mirror_action \
            profiles replace-all-with \{ $vs_profiles \}] }
    }

    # MAIN
    # Array contents (including TCL code) are evaluated during the
    # assignments below. TMSH parameters and profile names are collected
    # for use in subsequent calls including the creation of the virtual
    # server(s). Many parameters are shared between the redirect virtual
    # server and the main virtual server. This builds the redirect
    # parameters first, then re-uses them when constructing the main
    # virtual parameter list.
    set redir_vs_params \
    "[iapp::substa vlan_arr($advanced,$select_vlans)] \
     [iapp::substa snatpool_arr($do_snat,$do_automap,$new_snatpool)]"

    set vs_params "$redir_vs_params \
        [iapp::substa persist_cmd([iapp::substa \
        persist_arr($discourage_persist,$advanced,$ssl_pass_thru,$is_edge)])] \
        pool [set pool_name [iapp::substa pool_arr($new_pool,$no_pool)]] \
        [iapp::substa irule_arr([llength $irule_names])] "

    # TMSH syntax dictates that a profile may only be mentioned once.
    # If the same profile is used in 2 contexts, then specify "context all".
    set client_tcp [iapp::substa \
        client_tcp_arr($new_client_tcp,$::net__client_mode)]
    set server_tcp [iapp::substa \
        server_tcp_arr($new_server_tcp,$::net__server_mode)]

    if { $client_tcp eq $server_tcp } {
        set tcp_profiles "$client_tcp \{ context all \} "
    } else {
        set tcp_profiles "$client_tcp \{ context clientside \} \
                               $server_tcp \{ context serverside \} "
    }

    # Order is important to the "context clientside" and "context serverside"
    # parameters, so those parameters without context must come after those
    # with context. For example, HTTP must come after TCP and SSL.
    set http_name [iapp::substa http_arr($ssl_pass_thru,$new_http,$do_client_ssl)]

    set vs_profiles "[iapp::substa \
            client_ssl_arr($do_client_ssl,$new_client_ssl,$do_chain_cert)] \
        [iapp::substa server_ssl_arr($do_server_ssl,$default_server)] \
        [iapp::substa isession_arr($do_isession,$advanced,$new_isession)] \
        $tcp_profiles $http_name \
        [iapp::substa compress_arr($do_compress,$new_compress)] \
        [iapp::substa \
            caching_arr($do_caching,$new_caching,$do_configure_wa)] \
        [iapp::substa \
            oneconnect_arr($do_oneconnect,$new_oneconnect,$do_snat)]  \
        [iapp::substa ntlm_cmd([iapp::substa ntlm_arr($do_oneconnect,$advanced)])] \
        [iapp::substa analytics_arr($do_analytics,$new_analytics)]  \
        [iapp::substa logging_arr($do_logging)] \
        $apm_profiles"

    set vs_name [iapp::substa vs_arr($secure_client,$do_redirect)]

    if { [iapp::is ::app_stats enabled] } {
        # START EMBEDDED ICALL SCRIPT
        set icall_script_tmpl {
            set app APP
            set aso "sys.application.service /Common/${app}.app/$app"

            set virtual_path    "ltm virtual ${app}.app/VS"
            set http_path       "ltm profile http ${app}.app/HTTP"
            set pool_path       "ltm pool ${app}.app/POOL"

            # these lists represent strings taken from "show ... field-fmt"
            set http_stats { get-reqs number-reqs post-reqs resp-5xx-cnt }
            set virtual_stats {
                clientside.bits-in clientside.bits-out clientside.cur-conns
                clientside.max-conns clientside.pkts-in clientside.pkts-out
                clientside.tot-conns status.availability-state status.enabled-state
                status.status-reason
            }
            set pool_stats {
                active-member-cnt serverside.bits-in serverside.bits-out
                serverside.cur-conns serverside.max-conns serverside.pkts-in
                serverside.pkts-out serverside.tot-conns
            }

            # loop over each type of object we want to look at, building the name
            # of the path and the stats for it as needed
            foreach type { HTYPE virtual PTYPE } {
                # making this its own variable made the Tcl validator stop throwing
                # a warning - though it _should_ be fine to move it inline w/its use
                set path [set ${type}_path]
                set objs [tmsh::get_status $path raw]
                if { [llength $objs] == 0 } {
                    puts "no object found for: $type"
                    continue
                }
                set obj [lindex $objs 0]
                foreach stat [set ${type}_stats] {
                    set value [tmsh::get_field_value $obj $stat]
                    # associate the iStat with the app service
                    istats::set "$aso string $stat" $value
                }
            }

            # Set an additional iStat for the size of the pool, as this is not
            # stored as a stat but is nice to have when looking at pool health.
            # Do that here each run through rather than in the iApp because if
            # an external pool is used or strictness was off the size of the
            # pool can change and the iApp wouldn't run to adjust the size
            set pools PLIST
            if { [llength $pools] != 1 } {
                set pool_size 0
            } else {
                # safe to assume only obj in list is our pool now. grab its size
                # and move along
                set pool [lindex $pools 0]
                set pool_size [llength [tmsh::get_field_value $pool members]]
            }
            istats::set "$aso string total-member-cnt" $pool_size
        }; # END EMBEDDED ICALL SCRIPT

        # used to fill in variables within iCall script
        set script_map [list    APP         $tmsh::app_name \
                                VS          [string trim $vs_name] \
                                HTTP        [string trim $http_name] \
                                POOL        [string trim $pool_name] \
            HTYPE       [expr { $ssl_pass_thru ? {} : {http} }] \
            PTYPE       [expr { $no_pool ? {} : {pool} }] \
            PLIST       [expr { $no_pool ? {""} : {[tmsh::get_config $pool_path]}}]]

        set icall_script_src [string map $script_map $icall_script_tmpl]
        iapp::conf create sys icall script publish_stats \
            definition \{ $icall_script_src \}
        iapp::conf create sys icall handler periodic publish_stats \
            interval 60 script publish_stats
    }
}

# This array customizes the assignment of old variables to the vx and tx arrays,
# which are used to construct the new variables in tmsh. Since the old variable
# name is almost always used during this assignment, "##" may be used as an
# abbreviation. The assignment of ssl_encryption_questions__legacy_advanced
# is long, but it merely sets the new template context to "basic" or "advanced"
# based on the complexity of the user's application.
array set upgrade_var_arr {
    ::ssl_encryption_questions__offload_ssl { \
         [set vx(offload_history) ##] \
         [set vx(ssl_encryption_questions__offload_ssl) "legacy"] \
         [set vx(ssl_encryption_questions__legacy_advanced) [expr { \
           ( ![iapp::get_provisioned avr] || \
             [iapp::is ::analytics__add_analytics {No}] ) && \
             [iapp::is ::basic__snat              {No}]   && \
             [iapp::is ::basic__need_snatpool     {No}]   && \
             [iapp::is ::basic__using_ntlm        {No}]   && \
             [iapp::is ::server_pools__tcp_request_queuing_enable_question \
                                                  {No}]   && \
           ( [iapp::is ::server_pools__create_new_monitor {Use Monitor...}] || \
           ( [string equal -length 3 $::server_pools__monitor_send   {GET}] && \
             [iapp::is ::server_pools__monitor_http_version  {Version 1.0}] )) \
             ?no:yes}]]}
    ::ssl_encryption_questions__offload_ssl_1    {[set vx(ssl__mode)        ##]}
    ::ssl_encryption_questions__offload_ssl_2    {[set vx(ssl__mode)        ##]}
    ::ssl_encryption_questions__cert             {[set vx(ssl__cert)        ##]}
    ::ssl_encryption_questions__key              {[set vx(ssl__key)         ##]}
    ::analytics__add_analytics                   {[set vx(stats__analytics) \
        [expr { ## eq {No} ? {No} : \
        [expr { $::analytics__create_new_analytics eq {Yes} ? {Yes} : \
        $::analytics__analytics_profile }] }] ]}
    ::basic__addr                       {[set vx(pool__addr)                ##]}
    ::basic__port                       {[set vx(pool__port)                ##]}
    ::basic__secure_port                {[set vx(pool__port_secure)         ##]}
    ::basic__create_redir               {[set vx(pool__redirect_to_https)   ##]}
    ::basic__redir_port                 {[set vx(pool__redirect_port)       ##]}
    ::basic__snat                       {[set vx(net__same_subnet)          ##]}
    ::basic__need_snatpool              {[set vx(net__snat_type)            ##]\
                                         [set vx(net__snatpool)             ##]}
    ::basic__snatpool_members           {[set tx(net__snatpool_members)     ##]}
    ::basic__using_ntlm                 {[set vx(server__ntlm)              ##]}
    ::server_pools__create_new_pool     {[set vx(pool__pool_to_use)         ##]}
    ::server_pools__lb_method_choice    {[set vx(pool__lb_method)           ##]}
    ::server_pools__tcp_request_queuing_enable_question \
                                        {[set vx(server__tcp_req_queueing)  ##]}
    ::server_pools__tcp_request_queue_length \
                                        {[set vx(server__tcp_queue_length)  ##]}
    ::server_pools__tcp_request_queue_timeout \
                                        {[set vx(server__tcp_queue_timeout) ##]}
    ::server_pools__create_new_monitor  {[set vx(monitor__monitor) \
     [expr { ## eq {Use Monitor...} ?$::server_pools__reuse_monitor_name:## }]]}
    ::server_pools__servers             {[set tx(pool__members)             ##]}
    ::server_pools__monitor_interval    {[set vx(monitor__frequency)        ##]}
    ::server_pools__monitor_send  {[set vx(monitor__http_method) [lindex ## 0]]\
                                   [set vx(monitor__uri)     [lrange ## 1 end]]}
    ::server_pools__monitor_http_version    {[set vx(monitor__http_version) ##]}
    ::server_pools__monitor_dns_name { \
                                   [set tx(pool__hosts) [subst {{ name ## }}] ]}
    ::server_pools__monitor_recv        {[set vx(monitor__response)         ##]}
    ::optimizations__lan_or_wan         {[set vx(net__client_mode)          ##]\
                                         [set vx(client__tcp_lan_opt)       ##]\
                                         [set vx(client__tcp_wan_opt)       ##]\
                                         [set vx(client__http_compression)  ##]}
    ::optimizations__use_wa { \
                     [expr { [iapp::get_provisioned am]  \
                     ? [set vx(client__use_wa) ##] : { }}]\
                     [set vx(client__standard_caching_with_wa)              ##]\
                     [set vx(client__standard_caching_without_wa)           ##]}
    ::optimizations__x_wa_info_header {[set vx(client__x_wa_info_header)    ##]}
    ::optimizations__perf_monitor     {[set vx(client__enable_perf_monitor) ##]}
    ::optimizations__policy           {[set vx(client__policy)              ##]}
    ::optimizations__use_asm          {[expr { [iapp::get_provisioned asm] && \
                                       ![iapp::get_provisioned am] \
                                       ? [set vx(asm__use_asm) ##] : { }}]}
    ::optimizations__use_wa_or_asm    { \
          [set vx(client__use_wa) \
              [expr { [iapp::get_provisioned am] && [iapp::get_provisioned asm]\
             && [iapp::is ::optimizations__use_wa_or_asm "Use WAM"] ?yes:no }]]\
          [set vx(client__standard_caching_with_wa) \
              [expr { [iapp::get_provisioned am] && [iapp::get_provisioned asm]\
             && [iapp::is ::optimizations__use_wa_or_asm "Use WAM"] ?yes:no }]]\
          [set vx(client__standard_caching_without_wa) \
              [expr { [iapp::get_provisioned am] && [iapp::get_provisioned asm]\
             && [iapp::is ::optimizations__use_wa_or_asm "Use WAM"] ?yes:no }]]\
          [set vx(asm__use_asm) \
              [expr { [iapp::get_provisioned am] && [iapp::get_provisioned asm]\
             && [iapp::is ::optimizations__use_wa_or_asm "Use ASM"] ?yes:no }]]}
    ::optimizations__language         {[set vx(asm__language)               ##]}
}

# Two types of translation are supported in this array. If the key is literal,
# then the translation is applied to all ASO variables. If the key is a variable
# name, then the translation is applied only to that variable.

array set upgrade_trans_arr [subst {
    {Create New Pool}     $CREATE_NEW_ANSWER
    {Create New Monitor}  $CREATE_NEW_ANSWER
    {Use Default Profile} $::DEFAULT_ANSWER
    Yes                   yes
    No                    no
    enabled               yes
    disabled              no
    {Version 1.0}         http10
    {Version 1.1}         http11
    LAN                   lan
    WAN                   wan
    offload_history {
        Yes  Yes
        No   No
    }
    net__snat_type {
        Yes  snatpool
        No   automap
    }
    net__need_snatpool {
        Yes  $CREATE_NEW_ANSWER
        No   no
    }
    ssl__mode {
        Yes  client_ssl
        No   no_ssl
    }
    server__ntlm {
        Yes  /Common/ntlm
        No   $DO_NOT_USE_ANSWER
    }
    monitor__response {
        none { }
    }
    stats__analytics {
        Yes  $CREATE_NEW_ANSWER
        No   $DO_NOT_USE_ANSWER
    }
}]

array set downgrade_tbl_arr {
    ::pool__members         server_pools__servers
    ::pool__hosts           optimizations__hosts
    ::net__snatpool_members basic__snatpool_members
}

# ABOUT LEGACY MODE, UPGRADE, AND DOWNGRADE
#
# The variable ::ssl_encryption_questions__offload_ssl is inherited from the
# v11.3 F5.HTTP template and is used to determine whether a template originated
# in a prior release. The purpose is to maintain the user's original selections
# while making the legacy option unavailable for new applications.
#
# Values of ::ssl_encryption_questions__offload_ssl:
#     - does not exist => template in v11.4 mode
#     - "Yes" or "No" => template in v11.3 mode
#     - "legacy" => template created v11.3, now in v11.4 mode
#
# The variable ssl_encryption_questions__advanced allows the user to select
# the complexity of the options presented in the template. If the template
# was originally created pre v11.3, then a different choice variable is used
# which provides the additional option of returning to the legacy mode.
#
# Values of ::ssl_encryption_questions__advanced:
#     - "yes" => v11.4 advanced configuration mode
#     - "no" => v11.4 basic configuration mode
#
# Values of ::ssl_encryption_questions__legacy_advanced:
#     - "yes" => v11.4 advanced configuration mode
#     - "no" => v11.4 basic configuration mode
#     - "legacy" => v11.4 user chooses to return to v11.3 view.
#       This option is not available to virgin v11.4 applications.
#
# When a user upgrades this template from v11.3 to v11.4 mode, the value
# of ::ssl_encryption_questions__offload_ssl is stored in ::offload_history.
# This value is recovered if the user later opts to return to v11.3 mode.

set do_v11_3  [expr { [iapp::is ssl_encryption_questions__offload_ssl Yes] \
                   || [iapp::is ssl_encryption_questions__offload_ssl No] }]
set upgrade   [iapp::is ssl_encryption_questions__upgrade Yes]
set downgrade [iapp::is ssl_encryption_questions__legacy_advanced legacy]

# array keys: $do_v11_3,$upgrade,$downgrade
array set main {
    0,0,0 { [v11_4_main] }
    0,1,0 { [v11_4_main] }
    0,1,1 { [iapp::downgrade_template ssl_encryption_questions__offload_ssl \
             ssl_encryption_questions__upgrade downgrade_tbl_arr] }
    0,0,1 { [iapp::downgrade_template ssl_encryption_questions__offload_ssl \
             ssl_encryption_questions__upgrade downgrade_tbl_arr] }
    1,1,0 { [iapp::upgrade_template upgrade_var_arr upgrade_trans_arr] }
    1,1,1 { [iapp::upgrade_template upgrade_var_arr upgrade_trans_arr] }
    *     { [package require iapp::legacy 1.0.0] \
            [tmsh::include "f5.app_utils"] \
            [iapp::legacy::http::configure_http_deployment ""] }
}

iapp::substa main($do_v11_3,$upgrade,$downgrade)
iapp::template stop
            }
            macro {
            }
            presentation {
                section intro {

        # APL choice values may be set even if the optional
        # clause is not true. This trick is useful for setting
        # values that APL otherwise would not have access to.
        # Here, system provisioning values are recalled, and later
        # used to customize messages displayed within the template.
        optional ( "HIDE" == "THIS" ) {
            choice am_provisioned tcl {
                package require iapp 1.1.0
                return [expr {[iapp::get_provisioned am] ? "yes" : "no"}]
            }
            choice apm_provisioned tcl {
                package require iapp 1.1.0
                return [expr {[iapp::get_provisioned apm] ? "yes" : "no"}]
            }
            choice asm_provisioned tcl {
                package require iapp 1.1.0
                return [expr {[iapp::get_provisioned asm] ? "yes" : "no"}]
            }
            choice analytics_provisioned tcl {
                package require iapp 1.1.0
                return [expr {[iapp::get_provisioned avr] ? "yes" : "no"}]
            }
            choice is_edge tcl {
                package require iapp 1.1.0
                return [expr {[iapp::get_items -exists -norecursive ltm persistence cookie /Common/cookie] ? "no" : "yes" }]
            }
        }

        message hello
        message check_for_updates

        optional ( am_provisioned == "no" ) {
            message am_not_provisioned
        }
        optional ( analytics_provisioned == "no" ) {
            message analytics_not_provisioned
        }

    }

    section ssl_encryption_questions {

        # If this variable is present, then the user is re-parenting from
        # a v11.3 or earlier template. This condition causes the system
        # to display the old template along with an offer to upgrade.
        optional ( "HIDE" == "THIS" ) {
            choice offload_ssl default "no_legacy" { "Yes", "No", "legacy", "no_legacy" }
        }

        # For v11.3 applications
        optional ( offload_ssl == "Yes" || offload_ssl == "No" ) {
            message deprecated

            choice upgrade default "No" display "small"

            message gap_1 ""
            message gap_2 ""
            message section_head ""
        }
        optional ( offload_ssl == "Yes" ) {
            choice offload_ssl_1 default "Yes"
        }
        optional ( offload_ssl == "No" ) {
            choice offload_ssl_2 default "No"
        }
        optional ((ssl_encryption_questions.offload_ssl == "Yes"
                && ssl_encryption_questions.offload_ssl_1 == "Yes" )
                || (ssl_encryption_questions.offload_ssl == "No"
                && ssl_encryption_questions.offload_ssl_2 == "Yes" )) {

            choice cert default "/Common/default.crt" display "xxlarge" tcl {
                package require iapp 1.1.0
                return [iapp::get_items -norecursive -filter NAME !~ ca-bundle.crt|f5-irule.crt sys file ssl-cert]
            }

            choice key default "/Common/default.key" display "xxlarge" tcl {
                package require iapp 1.1.0
                return [iapp::get_items -norecursive sys file ssl-key]
            }
        }

        # For v11.4 applications
        optional ( offload_ssl == "legacy" || offload_ssl == "no_legacy" ) {

            choice help display "xxlarge" default "hide"
            optional ( help == "max" ) {
                message help_max
            }
            optional ( offload_ssl == "legacy" ) {
                choice legacy_advanced display "xxlarge" default "no"
                optional ( legacy_advanced == "legacy" ) {
                    message legacy_warning
                }
            }
            optional ( offload_ssl == "no_legacy" ) {
                choice advanced display "xxlarge" default "no"
                optional ( help == "max" ) {
                    message conf_mode_max
                }

            }
        }
    }

    # For post-v11.4 applications
    optional ( ssl_encryption_questions.offload_ssl == "legacy"
             || ssl_encryption_questions.offload_ssl == "no_legacy" ) {

        section net {
            choice client_mode display "xxlarge" default "wan" tcl {

                package require iapp 1.1.0
                set rval "Local area network  (LAN)\tlan\nWide area network  (WAN)\twan\n"
                if { [iapp::get_provisioned am] } {
                    append rval "WAN through another BIG-IP system\ttunnel\n"
                }

                return $rval
            }

			optional ( ssl_encryption_questions.help == "max" ) {
				message client_mode_max
			}
            optional ( client_mode == "tunnel" ) {
                message tunnel_max1
                message tunnel_max2
            }
            optional ( ssl_encryption_questions.legacy_advanced == "yes"
                    || ssl_encryption_questions.advanced == "yes" ) {
                choice vlan_mode display "xxlarge" default "enabled"
				optional ( ssl_encryption_questions.help == "max" ) {
					message vlan_max
				}
                optional ( vlan_mode != "all" ) {
                    multichoice client_vlan default tcl {
                        package require iapp 1.1.0
                        return [iapp::get_items net vlan]
                    } tcl {
                        package require iapp 1.1.0
                        return [iapp::get_items net vlan]
                    }
					optional ( vlan_mode == "disabled" ) {
						message disabled_vlan_max
					}
					optional ( ssl_encryption_questions.help == "max" ) {
						message client_vlan_max
					}
                }
            }

            choice server_mode display "xxlarge" default "lan" tcl {

                package require iapp 1.1.0
                set rval "Local area network  (LAN)\tlan\nWide area network  (WAN)\twan\n"
                if { [iapp::get_provisioned am] } {
                    append rval "WAN through another BIG-IP system\ttunnel\n"
                }
                return $rval
            }
			optional ( ssl_encryption_questions.help == "max" ) {
				message server_mode_max
			}
            optional ( server_mode == "tunnel" ) {
                message tunnel_max3
                message tunnel_max4
            }

            optional ( ssl_encryption_questions.legacy_advanced != "no"
                    || ssl_encryption_questions.advanced == "yes" ) {
                choice same_subnet display "xxlarge" default "no"


                optional ( ssl_encryption_questions.help == "max" ) {
                    message subnet_1_max
                    message subnet_2_max
                    message subnet_3_max
                }

                optional ( same_subnet == "no" ) {
                    choice route_to_bigip display "xxlarge" default "no"


                    optional ( ssl_encryption_questions.help == "max" ) {
                        message def_rt_1_max
                        message def_rt_2_max
                        message def_rt_3_max
                    }
                }

                optional ( same_subnet == "yes"
                         ||  ( same_subnet == "no"
                          && route_to_bigip == "no" )) {
                    choice snat_type display "xxlarge" default "automap"
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message snat_max
                    }
                    optional ( snat_type == "snatpool" ) {
                        choice snatpool display "xxlarge" default "/#create_new#" tcl {
                            package require iapp 1.1.0
                            return "Create a new SNAT pool\t/#create_new#\n[iapp::get_items ltm snatpool]"
                        }


                        optional ( snatpool == "/#create_new#" ) {
                            table snatpool_members {
                                string addr required validator "IpAddress"
                                    display "xlarge"
                            }


                            optional ( ssl_encryption_questions.help == "max" ) {
                                message snatpool_members_max
                            }
                        }

                    }

                }
            }
        }

        section ssl {

                choice mode display "xxlarge" default "no_ssl"

            optional ( ssl_encryption_questions.help == "max" ) {
                message mode_1_max
                message mode_2_max
                message mode_3_max
				message mode_7_max
                message mode_4_max
                message mode_5_max
                message mode_6_max
            }

            optional ( mode == "client_ssl" || mode == "client_ssl_server_ssl"  ) {
                optional ( ssl_encryption_questions.legacy_advanced == "yes"
                        || ssl_encryption_questions.advanced == "yes" ) {
                    choice client_ssl_profile display "xxlarge"
                        default "/#create_new#" tcl {
                        package require iapp 1.1.0
                        return "Create a new Client SSL profile\t/#create_new#\n[iapp::get_items ltm profile client-ssl]"
                    }
                }
				optional ( ssl_encryption_questions.help == "max" ) {
					message client_ssl_profile_max
				}
                optional (( ssl_encryption_questions.legacy_advanced == "no"
                         && ssl_encryption_questions.advanced == "no" )
                         || client_ssl_profile == "/#create_new#" ) {
                    choice cert default "/Common/default.crt"
                             display "xxlarge" tcl {
                        package require iapp 1.1.0
                        return [iapp::get_items -norecursive -filter NAME !~ ca-bundle.crt|f5-irule.crt sys file ssl-cert]
                    }
					optional ( ssl_encryption_questions.help == "max" ) {
						message cert_max
						message cert1_max
					}
                    choice key default "/Common/default.key"
                             display "xxlarge" tcl {
                        package require iapp 1.1.0
                        return [iapp::get_items -norecursive sys file ssl-key]
                    }
					optional ( ssl_encryption_questions.help == "max" ) {
						message key_max
					}
                    optional ( cert == "/Common/default.crt"
                            || key == "/Common/default.key" ) {
                        message ssl_warn_1

                    }

                    optional ( ssl_encryption_questions.legacy_advanced == "yes"
                            || ssl_encryption_questions.advanced == "yes" ) {
                        choice use_chain_cert display "xxlarge"
                                default "/#do_not_use#" tcl {
                            package require iapp 1.1.0
                            return "Do not use an intermediate certificate\t/#do_not_use#\n[iapp::get_items -norecursive sys file ssl-cert]"
                        }


                        optional ( ssl_encryption_questions.help == "max" ) {
                            message use_chain_cert_1_max
                            message use_chain_cert_2_max
                        }
                    }
                }
            }


                optional ( mode == "server_ssl" || mode == "client_ssl_server_ssl" )
             {
                choice server_ssl_profile display "xxlarge"
                        default "/#default#" tcl {
                    package require iapp 1.1.0
                    return "Create a new Server SSL profile based on serverssl (recommended)\t/#default#\n[iapp::get_items ltm profile server-ssl]"
                }
				optional ( ssl_encryption_questions.help == "max" ) {
					message server_ssl_profile_max
				}
            }

        }

        section pool {
            string addr display "xxlarge" required validator "IpAddress"
			optional ( ssl_encryption_questions.help == "max" ) {
				message addr_max
			}
            optional ( ssl_encryption_questions.legacy_advanced == "yes"
                    || ssl_encryption_questions.advanced == "yes" ) {
                string mask display "xxlarge" validator "IpAddress"
				optional ( ssl_encryption_questions.help == "max" ) {
					message mask_max
				}
            }

            optional ( ssl.mode != "client_ssl" && ssl.mode != "pass_thru"
                && ssl.mode != "client_ssl_server_ssl" ) {
                string port display "medium" validator "PortNumber"
                    default "80" required
            }
            optional ( ssl.mode == "client_ssl" || ssl.mode == "pass_thru"
                || ssl.mode == "client_ssl_server_ssl" ) {
                string port_secure display "medium" validator "PortNumber"
                    default "443" required
            }
			optional ( ssl_encryption_questions.help == "max" ) {
				message port_max
			}

            optional ( ssl_encryption_questions.legacy_advanced == "yes"
                    || ssl_encryption_questions.advanced == "yes" ) {
                optional ( "HIDE" == "THIS" ) {
                    choice is_ha tcl {
                        set sync_status [lindex [tmsh::get_status cm sync-status] 0]
                        set status [tmsh::get_field_value $sync_status status]
                        return $status
                    }
                }

                optional ( is_ha != "Standalone" ) {
                    choice mirror display "xxlarge" default "disabled"

                    optional ( ssl_encryption_questions.help == "max" ) {
                        message mirror_max
                    }
                }
            }

            table hosts {
                string name required validator "FQDN" display "xlarge"
            }
            optional ( ssl_encryption_questions.help == "max" ) {
                message fqdn_max
            }

            optional (( ssl_encryption_questions.legacy_advanced == "yes"
                     || ssl_encryption_questions.advanced == "yes" )
                     && ( ssl.mode == "client_ssl"
                     || ssl.mode == "client_ssl_server_ssl"
                     || ssl.mode == "pass_thru" )) {

                choice redirect_to_https display "xxlarge" default "yes"
                optional ( ssl_encryption_questions.help == "max" ) {
                        message redirect_max
                    }
                optional ( redirect_to_https == "yes" ) {
                    string redirect_port display "medium"
                        validator "PortNumber" default "80"
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message redirect_port_max
                    }
                }
            }

            optional ( ssl_encryption_questions.legacy_advanced == "yes"
                    || ssl_encryption_questions.advanced == "yes" ) {

                optional ( ssl.mode != "pass_thru"  ) {
                    choice http display "xxlarge" default "/#create_new#" tcl {
                        package require iapp 1.1.0
                        return "Create a new HTTP profile (recommended)\t/#create_new#\n[iapp::get_items ltm profile http]"
                    }
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message http_max
                    }

                    optional ( http == "/#create_new#" ) {
                        choice xff display "xxlarge" default "yes"
                        optional ( ssl_encryption_questions.help == "max" ) {
                            message xff_max
                        }
                    }
                }

                optional ( ssl.mode != "pass_thru" ) {
                    choice persist display "xxlarge" default "/#cookie#" tcl {
                        package require iapp 1.1.0
                        if { [iapp::get_items -exists -norecursive ltm persistence cookie /Common/cookie] } {
                            set stat "Use cookie persistence (recommended)\t/#cookie#\nUse source address persistence\t/#source#\nDo not use persistence\t/#do_not_use#\n[iapp::get_items ltm persistence cookie]"
                        } else {
                            set stat "Use source address persistence\t/#source#\nDo not use persistence\t/#do_not_use#"
                        }
                        return "$stat\n[iapp::get_items ltm persistence source-addr]\n[iapp::get_items ltm persistence ssl]\n[iapp::get_items ltm persistence universal]"
                    }
                }
                optional ( ssl.mode == "pass_thru" ) {
                    choice pass_thru_persist display "xxlarge" default "/#source#" tcl {
                        package require iapp 1.1.0
                        set stat "Use source address persistence\t/#source#\nDo not use persistence\t/#do_not_use#"
                        return "$stat\n[iapp::get_items ltm persistence source-addr]\n[iapp::get_items ltm persistence ssl]"
                    }
                }

                optional ( ssl_encryption_questions.help == "max" && ssl.mode != "pass_thru" ) {
                    message persist_max
                }
				optional ( ssl_encryption_questions.help == "max" && ssl.mode == "pass_thru" ) {
                        message pass_thru_persist_max
                    }
            }

            optional ( net.server_mode != "tunnel" ) {
                choice pool_to_use display "xxlarge" default "/#create_new#" tcl {
                    package require iapp 1.1.0
                    return "Create a new pool\t/#create_new#\nDo not use a pool\t/#do_not_use#\n[iapp::get_items ltm pool]"
                }
            }
            optional ( net.server_mode == "tunnel" ) {
                choice pool_to_use_wom display "xxlarge" default "/#do_not_use#" tcl {
                    package require iapp 1.1.0
                    return "Create a new pool\t/#create_new#\nDo not use a pool\t/#do_not_use#\n[iapp::get_items ltm pool]"
                }
            }


        optional ( ssl_encryption_questions.help == "max" ) {
            message pool_max
        }

        optional (( net.server_mode != "tunnel" && pool_to_use == "/#create_new#" )
        || ( net.server_mode == "tunnel" && pool_to_use_wom == "/#create_new#" )) {
            optional ( ssl_encryption_questions.legacy_advanced == "yes"
                    || ssl_encryption_questions.advanced == "yes" ) {
                optional ( intro.is_edge == "no" ) {
                    choice lb_method default "least-connections-member" display "xxlarge"
                }

                optional ( intro.is_edge == "yes" ) {
                    choice lb_method_edge default "round-robin" display "xxlarge"
                }

                optional ( ssl_encryption_questions.help == "max" ) {
                    message lb_method_max
                }

                choice use_pga default "no" display "xxlarge"
                optional ( ssl_encryption_questions.help == "max" ) {
                        message pga_max
                }
                optional ( use_pga == "yes" ) {
                    string min_active_members display "medium" default "0"
                        required validator "NonNegativeNumber"
						optional ( ssl_encryption_questions.help == "max" ) {
							message min_active_members_max
						}
					}
            }

            table members {
                editchoice addr display "large" tcl {
                    package require iapp 1.1.0
                    return [iapp::get_items ltm node]
                }

                optional ( ssl.mode == "client_ssl"
                         || ssl.mode == "no_ssl" ) {
                    string port display "small" required default "80"
                        validator "PortNumber"
                }
                optional ( ssl.mode == "server_ssl"
                         || ssl.mode == "client_ssl_server_ssl"
                         || ssl.mode == "pass_thru" ) {
                    string port_secure display "small" required
                        default "443" validator "PortNumber"
                }


                string connection_limit display "small" required
                        default "0" validator "NonNegativeNumber"
                optional (  lb_method == "ratio-member"
                           || lb_method == "ratio-node"
                           || lb_method == "ratio-session"
                           || lb_method == "ratio-least-connections-member"
                           || lb_method == "ratio-least-connections-node"
                           || lb_method == "dynamic-ratio-member"
                           || lb_method == "dynamic-ratio-node" ) {
                    string ratio default "1" validator "NonNegativeNumber"
                        display "small"
                }

                optional (( ssl_encryption_questions.legacy_advanced == "yes"
                        || ssl_encryption_questions.advanced == "yes" )
                        && use_pga == "yes" ) {
                    string priority default "0" required
                        validator "NonNegativeNumber" display "small"
                }
            }
			optional ( ssl_encryption_questions.help == "max" ) {
				message members_max
			}
        }
    }

    optional (( ssl_encryption_questions.legacy_advanced == "yes"
            || ssl_encryption_questions.advanced == "yes" )
            || ( ssl.mode != "pass_thru"  )) {
        section client {
            optional ( ssl.mode != "pass_thru"  ) {
                optional ( intro.am_provisioned == "yes" ) {
                    # If the template user decides to use AAM, the Web
                    # Acceleration question in the Virtual Server  ( basic )
                    # section are modified to disallow "Do not use" as an option.
                    choice use_wa default "yes" display "xxlarge"
                }
                optional ( ssl_encryption_questions.help == "max" ) {
                    message standard_caching_with_wa_max
                }
                optional ( ssl_encryption_questions.legacy_advanced == "yes"
                        || ssl_encryption_questions.advanced == "yes" ) {
                    # If the template user elects to use AAM in the
                    # preceeding section, the user must *not* be presented with
                    # an option for "Do not use a Web Acceleration profile" here.

                    optional ( intro.am_provisioned == "yes"
                             && use_wa == "yes" ) {

                        choice standard_caching_with_wa display "xxlarge"
                                 default "/#create_new#" tcl {
                            package require iapp 1.1.0
                            return "Create a profile based on optimized-acceleration (recommended)\t/#create_new#\n[iapp::get_items \
                                -filter applications ne none \
                                ltm profile web-acceleration]"
                        }
                        optional ( standard_caching_with_wa != "/#create_new#" ) {
                            optional ( ssl_encryption_questions.help == "max" ) {
                                message standard_caching_with_wa_not_default_max
                            }
                        }
                    }

                    optional ( intro.am_provisioned == "no" || use_wa != "yes" ) {
                        choice standard_caching_without_wa display "xxlarge" default "/#create_new#" tcl {
                            package require iapp 1.1.0
                            set prof_list [iapp::get_items -filter applications eq none \
                                -list ltm profile web-acceleration]
                            set purge_item [lsearch $prof_list "/Common/optimized-acceleration"]
                            if { $purge_item != -1 } {
                                set prof_list [lreplace $prof_list $purge_item $purge_item]
                            }
                            return "Create a profile based on optimized-caching (recommended)\t/#create_new#\nDo not use caching\t/#do_not_use#\n[join $prof_list \n]"
                        }
                    }
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message about_custom_caching_max_1
                    }
                    optional ( ssl_encryption_questions.help == "max" && use_wa == "yes") {
                        message about_custom_caching_max_2
                    }
                    optional ( ssl_encryption_questions.help == "max" && use_wa != "yes") {
                        message about_custom_caching_max_3
                    }
                }

                optional ( intro.am_provisioned == "yes" && ( ssl.mode != "pass_thru"  )) {
                    optional ( use_wa == "yes" && (
                               ( ssl_encryption_questions.legacy_advanced == "no"
                               && ssl_encryption_questions.advanced == "no" )
                          || ( ( ssl_encryption_questions.legacy_advanced == "yes"
                               || ssl_encryption_questions.advanced == "yes" )
                             && standard_caching_with_wa == "/#create_new#" )) ) {
                        optional ( ssl_encryption_questions.legacy_advanced == "yes"
                                || ssl_encryption_questions.advanced == "yes" ) {
                            choice x_wa_info_header default "none" display "xxlarge"


                            optional ( ssl_encryption_questions.help == "max" ) {
                                message x_wa_info_max
                            }

                            choice enable_perf_monitor display "xxlarge" default "no"

                            optional ( ssl_encryption_questions.help == "max" ) {
                                message enable_perf_monitor_max
                            }

                            optional ( enable_perf_monitor == "yes" ) {
                                string data_retention_period default "30" required
                                    validator "NonNegativeNumber" display "medium"
                            }

                            optional ( use_wa == "yes" ) {
                                choice policy display "xxlarge"
                                        default "/Common/Generic Policy - Enhanced" tcl {
                                    package require iapp 1.1.0
                                    set results "/Common/Generic Policy - Complete\n/Common/Generic Policy - Enhanced\n/Common/Generic Policy - Extension Based\n/Common/Generic Policy - Fundamental\n"
                                    append results [string map {"\"" ""} \
                                        [iapp::get_items -nocomplain -norecursive \
                                        -filter predefined == no wam policy predefined]]
                                    return $results
                                }
                            }


                            optional ( ssl_encryption_questions.help == "max" ) {
                                optional ( policy == "/Common/Generic Policy - Complete" ) {
                                    message policy_complete_about_max
                                }

                                optional ( policy == "/Common/Generic Policy - Enhanced" ) {
                                    message policy_enhanced_about_max
                                }

                                optional ( policy == "/Common/Generic Policy - Extension Based" ) {
                                    message policy_extension_about_max
                                }

                                optional ( policy == "/Common/Generic Policy - Fundamental" ) {
                                    message policy_fundamental_about_max
                                }

                            }
                        }
                    }
                }

                choice http_compression display "xxlarge" default "/#create_new#" tcl {
                    package require iapp 1.1.0
                    return "Create a profile based on wan-optimized-compression (recommended)\t/#create_new#\nDo not compress HTTP responses\t/#do_not_use#\n[iapp::get_items ltm profile http-compression]"
                }

                optional ( ssl_encryption_questions.help == "max" ) {
                    message comp_max
                    message comp1_max
                }
            }

            optional ( ssl_encryption_questions.legacy_advanced == "yes"
                    || ssl_encryption_questions.advanced == "yes" ) {
                optional ( net.client_mode == "lan" ) {
                    choice tcp_lan_opt display "xxlarge"
                            default "/#create_new#" tcl {
                        package require iapp 1.1.0
                        return "Create a profile based on tcp-lan-optimized (recommended)\t/#create_new#\n[iapp::get_items ltm profile tcp]"
                    }
                }

                optional ( net.client_mode != "lan" ) {
                    choice tcp_wan_opt display "xxlarge"
                            default "/#create_new#" tcl {
                        package require iapp 1.1.0
                        return "Create a profile based on tcp-wan-optimized (recommended)\t/#create_new#\n[iapp::get_items ltm profile tcp]"
                    }
                }

                optional ( ssl_encryption_questions.help == "max" ) {
                    message tcp_max
                }
                optional ( net.server_mode == "tunnel"
                    && intro.am_provisioned == "yes" ) {
                    choice isession_profile display "xxlarge"
                            default "/Common/isession" tcl {
                        package require iapp 1.1.0
                        return "New iSession profile\t/#create_new#\n[iapp::get_items -nocomplain wom profile isession]"
                    }
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message isession_profile_max
                    }
                    optional ( isession_profile == "/#create_new#" ) {
                        row isession {
                            choice encryption default "disabled" display "small"
                                { "Yes" => "enabled", "No" => "disabled" }
                            choice compression default "enabled" display "small"
                                { "Yes" => "enabled", "No" => "disabled" }
                            choice deduplication default "enabled" display "small"
                                { "Yes" => "enabled", "No" => "disabled" }
                        }
                        optional ( ssl_encryption_questions.help == "max" ) {
                            message isession_max
                        }
                    }
                }
            }
        }
    }

    optional ( ssl_encryption_questions.legacy_advanced == "yes"
            || ssl_encryption_questions.advanced == "yes" ) {
        section server {
            optional ( ssl.mode != "pass_thru"  ) {
                choice oneconnect display "xxlarge" default "/#create_new#" tcl {
                    package require iapp 1.1.0
                    return "Create a profile based on the oneconnect parent (recommended)\t/#create_new#\nDo not use OneConnect\t/#do_not_use#\n[iapp::get_items ltm profile one-connect]"
                }

                optional ( ssl_encryption_questions.help == "max" ) {
                    message oc_max
                }

            optional ( oneconnect != "/#do_not_use#" ) {
                choice ntlm display "xxlarge" default "/#do_not_use#" tcl {
                    package require iapp 1.1.0
                    return "Create an NTLM profile\t/#create_new#\nDo not use NTLM  (recommended)\t/#do_not_use#\n[iapp::get_items ltm profile ntlm]"
                }
                optional ( ssl_encryption_questions.help == "max" ) {
                    message ntlm_max
                }
            }

            }

            optional ( net.server_mode == "lan" ) {
                choice tcp_lan_opt display "xxlarge" default "/#create_new#" tcl {
                    package require iapp 1.1.0
                    return "Create a profile based on tcp-lan-optimized (recommended)\t/#create_new#\n[iapp::get_items ltm profile tcp]"
                }
            }

            optional ( net.server_mode != "lan" ) {
                choice tcp_wan_opt display "xxlarge" default "/#create_new#" tcl {
                    package require iapp 1.1.0
                    return "Create a profile based on tcp-wan-optimized (recommended)\t/#create_new#\n[iapp::get_items ltm profile tcp]"
                }
            }

            optional ( ssl_encryption_questions.help == "max" ) {
                message tcp_max
            }

            choice tcp_req_queueing display "xxlarge" default "no"
            optional ( ssl_encryption_questions.help == "max" ) {
                message tcp_request_queue_2_max
            }
            optional ( tcp_req_queueing == "yes" ) {
			message tcp_request_queue_1_max
                string tcp_queue_length display "medium"
                    validator "NonNegativeNumber" required
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message tcp_queue_length_max
                    }
                string tcp_queue_timeout display "medium"
                    validator "NonNegativeNumber" required
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message tcp_queue_timeout_max
                    }
                }

            choice use_slow_ramp default "yes" display "xxlarge"
            optional ( use_slow_ramp == "yes" ) {
                optional ( ssl_encryption_questions.help == "max" ) {
                    message slow_ramp_max
                }

                string slow_ramp_setvalue display "medium"
                    default "300" required validator "NonNegativeNumber"
					optional ( ssl_encryption_questions.help == "max" ) {
						message slow_ramp_setvalue_max
					}
            }
        }
    }

    optional (( net.server_mode != "tunnel" && pool.pool_to_use == "/#create_new#" )
    || ( net.server_mode == "tunnel" && pool.pool_to_use_wom == "/#create_new#" )) {
        section monitor {

            choice monitor display "xxlarge" default "/#create_new#" tcl {
                package require iapp 1.1.0
                set choices "Create a new health monitor\t/#create_new#\n[iapp::get_items ltm monitor http]\n[iapp::get_items ltm monitor https]\n[iapp::get_items -filter NAME != "external" ltm monitor external]"
                return $choices
            }

            optional ( ssl_encryption_questions.help == "max" ) {
                message monitor_max
            }

            optional ( monitor == "/#create_new#" ) {

                optional ( ssl_encryption_questions.legacy_advanced == "yes"
                        || ssl_encryption_questions.advanced == "yes" ) {
                    string frequency display "medium" required default "30"
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message freq_max
                    }
                    choice http_method display "xxlarge" default "GET"
                        { "GET", "POST" }
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message method_max
                    }
                }

                string uri display "xxlarge" required default "/"
                optional ( ssl_encryption_questions.help == "max" ) {
                    message uri_max
                }

                optional ( ssl_encryption_questions.legacy_advanced == "yes"
                        || ssl_encryption_questions.advanced == "yes" ) { 
                    choice http_version display "xxlarge" default "http11"

                    optional ( ssl_encryption_questions.help == "max" ) {
                        message version_max
                    }


                    optional ( http_method == "POST" ) {
                        string post_body display "xxlarge" required

                        optional ( ssl_encryption_questions.help == "max" ) {
                            message body_max
                        }
                    }
                }
                string response display "xxlarge" 

                optional ( ssl_encryption_questions.help == "max" ) {
                    message response_max
                }

                optional ( ssl_encryption_questions.legacy_advanced == "yes"
                        || ssl_encryption_questions.advanced == "yes" ) {

                    choice anonymous display "xxlarge" default "yes"
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message anonymous_max
                    }
                    optional ( anonymous == "no" ) {
                        string user required display "xxlarge"
                        optional ( ssl_encryption_questions.help == "max" ) {
                            message user_max
                        }
                        password passwd required display "xxlarge"
                        optional ( ssl_encryption_questions.help == "max" ) {
                            message passwd_max
                        }
                    }

                }
            }
        }
    }

    optional ( ssl_encryption_questions.legacy_advanced == "yes"
            || ssl_encryption_questions.advanced == "yes" ) {
        section irules {
        message note
            optional ( ssl_encryption_questions.help == "max" ) {
                message irule_2_max
                message irule_3_max
            }

            multichoice irules display "xlarge" tcl {
                package require iapp 1.1.0
                return [iapp::get_items -filter NAME !~ "^_sys" ltm rule]
            }
        }

        optional ( ssl.mode != "pass_thru"  ) {
            section stats {
                optional ( intro.analytics_provisioned == "yes" ) {
                    choice analytics display "xxlarge" default "/#do_not_use#" tcl {
                        package require iapp 1.1.0
                        return "Do not enable Application Visibility Reporting\t/#do_not_use#\nCreate a profile based on analytics\t/#create_new#\n[iapp::get_items -nocomplain ltm profile analytics]"
                    }
                    message avr_1_max
                    optional ( ssl_encryption_questions.help == "max" ) {
                        message avr_2_max
                        message avr_3_max
                    }
                }

                choice request_logging display "xxlarge"
                        default "/#do_not_use#" tcl {
                    package require iapp 1.1.0
                    return "Do not enable HTTP request logging\t/#do_not_use#\n[iapp::get_items ltm profile request-log]"
                }

                optional ( ssl_encryption_questions.help == "max" ) {
                    message req_log_max
                }
            }
        }
    }

    optional ( ssl_encryption_questions.help == "max" ) {
        section extra {
            message dns
            message web_servers
            optional (( ssl.mode == "client_ssl"
                     || ssl.mode == "client_ssl_server_ssl" )
                     && ( ssl.cert == "/Common/default.crt"
                     || ssl.cert == "/Common/ca-bundle.crt"
                     || ssl.cert == "/Common/f5-irule.crt"
                     || ssl.key == "/Common/default.key" )) {
                message critical
            }
        }
    }
}

# Legacy template rendering continues here.

optional ( ssl_encryption_questions.offload_ssl == "Yes"
        || ssl_encryption_questions.offload_ssl == "No" ) {
    optional ( intro.analytics_provisioned == "yes" ) {
        section analytics {
            choice add_analytics default "No" display "small"
            optional ( add_analytics == "Yes" ) {
                message about_analytics_profiles
                choice create_new_analytics default "Select a Custom Profile" display "xlarge"
                optional ( create_new_analytics == "Select a Custom Profile" ) {
                    choice analytics_profile display "xlarge" tcl {
                        package require iapp 1.1.0
                        return [iapp::get_items -nocomplain ltm profile analytics]
                    }
                }
            }
        }
    }

    section basic {
        string addr required validator "IpAddress"
        optional ((ssl_encryption_questions.offload_ssl == "Yes"
                && ssl_encryption_questions.offload_ssl_1 == "No" )
                || (ssl_encryption_questions.offload_ssl == "No"
                && ssl_encryption_questions.offload_ssl_2 == "No" )) {
            string port default "80" required validator "PortNumber" display "small"
        }
        optional ((ssl_encryption_questions.offload_ssl == "Yes"
                && ssl_encryption_questions.offload_ssl_1 == "Yes" )
                || (ssl_encryption_questions.offload_ssl == "No"
                && ssl_encryption_questions.offload_ssl_2 == "Yes" )) {
            string secure_port default "443" required validator "PortNumber" display "small"

            choice create_redir default "Yes" display "small"
            optional ( create_redir == "Yes" ) {
                string redir_port default "80" required validator "PortNumber" display "small"
            }
        }

        choice snat default "No" display "small"
        optional ( snat == "No" ) {
            choice need_snatpool default "No" display "small"
            optional ( need_snatpool == "Yes" ) {
                table snatpool_members {
                    string addr required validator "IpAddress"
                }
            }
        }
        choice using_ntlm default "No" display "small"
    }

    section server_pools {
        choice create_new_pool default "Create New Pool" display "large"
        optional ( create_new_pool == "Create New Pool" ) {
            choice lb_method_choice default "least-connections-member" display "xxlarge"

            table servers {
                string addr required validator "IpAddress"
                string port default "80" required validator "PortNumber"
                    display "small"
                string connection_limit default "0" required
                    validator "NonNegativeNumber" display "small"
                optional ( lb_method_choice == "ratio-member" ||
                    lb_method_choice == "ratio-node" ||
                    lb_method_choice == "ratio-session" ||
                    lb_method_choice == "ratio-least-connections-member" ||
                    lb_method_choice == "ratio-least-connections-node" ||
                    lb_method_choice == "dynamic-ratio-member" ||
                    lb_method_choice == "dynamic-ratio-node" ) {
                    string ratio default "1" validator "NonNegativeNumber"
                        display "small"
                }
            }

            choice tcp_request_queuing_enable_question default "No" display "small"
            optional ( tcp_request_queuing_enable_question == "Yes" ) {
                message note

                string tcp_request_queue_length required
                    validator "NonNegativeNumber" display "small"
                string tcp_request_queue_timeout required
                    validator "NonNegativeNumber" display "small"
            }

            choice create_new_monitor default "Create New Monitor" display "xlarge"
            optional ( create_new_monitor == "Create New Monitor" ) {
                string monitor_interval default "30" required
                    validator "NonNegativeNumber" display "small"

                string monitor_send default "GET /" required display "xlarge"

                choice monitor_http_version default "Version 1.0"
                optional ( monitor_http_version == "Version 1.1" ) {
                    string monitor_dns_name required validator "FQDN"
                        display "large"
                }

                string monitor_recv display "xlarge"
            }

            optional ( create_new_monitor == "Use Monitor..." ) {
                choice reuse_monitor_name display "xlarge" tcl {
                    package require iapp 1.1.0
                    return "[iapp::get_items ltm monitor http]\n[iapp::get_items ltm monitor https]"
                }
            }
        }

        optional ( create_new_pool == "Use Pool..." ) {
            choice reuse_pool_name display "xlarge" tcl {
                package require iapp 1.1.0
                return [iapp::get_items ltm pool]
            }
        }
    }

    section optimizations {
        choice lan_or_wan default "WAN"

        optional ( intro.am_provisioned == "yes" ) {
            choice use_wa default "No" display "small"
            optional ( use_wa == "Yes" ) {
                table hosts {
                    string host required validator "FQDN" display "xlarge"
                }

                choice x_wa_info_header default "None"
                choice perf_monitor default "disabled"
                optional ( perf_monitor == "enabled" ) {
                    string data_retention_period default "30" required
                        validator "NonNegativeNumber"
                }

                choice policy display "xlarge"
                        default "/Common/Generic Policy - Enhanced" tcl {
                    package require iapp 1.1.0
                    set results "/Common/Generic Policy - Complete\n/Common/Generic Policy - Enhanced\n/Common/Generic Policy - Extension Based\n/Common/Generic Policy - Fundamental\n"
                    append results [iapp::get_items -nocomplain -norecursive -filter predefined == no wam policy predefined]
                    return $results
                }
            }
        }

    }
}

text {
    intro "Welcome to the iApp template for web applications"

    intro.hello "Introduction" "Configure security, high availability, and acceleration for web applications. This template supports basic web services. For detailed information and configuration assistance, see http://www.f5.com/pdf/deployment-guides/iapp-http-dg.pdf."

    intro.check_for_updates "Check for Updates" "Check for new versions of this template on the AskF5 Knowledge Base website (http://support.f5.com/kb/en-us/solutions/public/13000/400/sol13422.html)."

    intro.am_not_provisioned "Additional features available" "This system is not currently provisioned to run the BIG-IP Application Acceleration Manager (AAM). Provisioning AAM provides acceleration and optimization for your web applications."

    intro.analytics_not_provisioned "Additional features available" "The system is not currently provisioned to run the BIG-IP Application Visibility Reporting Module (AVR). Activating this module provides rich application statistics and reporting for your deployment."

    ssl_encryption_questions "Template Options"

    ssl_encryption_questions.help "Do you want to see inline help?" {

            "Yes, show inline help" => "max",
            "No, do not show inline help" => "hide"
    }

    ssl_encryption_questions.help_max "" "Inline help is available to provide contextual descriptions to aid in the completion of this configuration.  Select to show or hide the inline help in this template. Important notes and warnings are always visible, no matter which selection you make here. "

    ssl_encryption_questions.legacy_advanced "Which configuration mode do you want to use?" {

            "Basic - Use F5's recommended settings" => "no",
            "Advanced - Configure advanced options" => "yes",
            "Legacy - Return to the deprecated template" => "legacy"

    }

    ssl_encryption_questions.legacy_warning "NOTE" "Downgrading to the legacy template will temporarily take your application offline and return all non-table entries to their pre-upgrade values. Any changes made after the upgrade will be lost. To complete the downgrade, click Finished, then Reconfigure, then Finished."

    ssl_encryption_questions.advanced "Which configuration mode do you want to use?" {
            "Basic - Use F5's recommended settings" => "no",
            "Advanced - Configure advanced options" => "yes"
    }

    ssl_encryption_questions.conf_mode_max "" "This template supports basic and advanced configurations modes. Basic mode exposes the most commonly used settings, and automatically configures the rest of the options based on F5's recommended settings.  Advanced mode allows you to review and change all settings. If you are unsure, select Basic."

    net "Network"

    net.client_mode "What type of network connects clients to the BIG-IP system?"
	net.client_mode_max "" "Select the type of network that connects the clients to the BIG-IP system. This is used to determine the client-side TCP optimizations the system uses (in the case of WAN or LAN), or if the system will use an iSession tunnel (in the case of WAN through another BIG-IP system)."
    net.vlan_mode "Do you want to restrict client traffic to specific VLANs?" {
        "Enable traffic on all VLANs and Tunnels" => "all",
        "Yes, enable traffic only on the VLANs I specify" => "enabled",
        "Yes, disable traffic only on the VLANs I specify" => "disabled"
    }

	net.vlan_max "" "You can optionally configure the BIG-IP system to accept or deny client traffic from specific VLANs you have configured. If you leave the default, the BIG-IP system accepts traffic from all VLANs configured on the system. If you select to enable or disable traffic on specific VLANs, you must specify the VLANs in the next question. The VLAN objects must already be configured on this BIG-IP system before you can select them."

    net.client_vlan "On which VLANs should traffic be enabled or disabled?"

	net.client_vlan_max "" "Because you selected you want to enable or disable traffic on specific VLANs in the previous question, use this section to specify the VLANs. By default, all VLANs on the BIG-IP system appear in the Selected box. Click any applicable VLANs and then use the Move buttons (<<) and (>>) to adjust list membership. The Selected box lists the VLANs and tunnels that are specifically enabled or disabled."

	net.disabled_vlan_max "WARNING" "By default, all VLANs on the box are in the Selected list.  Because you selected to disable client traffic from specific VLANs, if you do not move any of the VLANs to the Options list, traffic will be denied from ALL VLANs, and this configuration will not pass any traffic."

    net.server_mode "What type of network connects servers to the BIG-IP system?"
	net.server_mode_max "" "Select the type of network that connects the servers to the BIG-IP system. This is used to determine the server-side TCP optimizations the system uses (in the case of WAN or LAN), or if the system will use an iSession tunnel (in the case of WAN through another BIG-IP system)."

    net.tunnel_max1 "NOTE" "Selecting 'WAN Network through another BIG-IP system' enables this iApp to create a secure and optimized iSession tunnel between this BIG-IP system and the remote BIG-IP system. Note that iSession tunnels are a shared BIG-IP system resource. And once configured, the settings in the iSession profile may overrule certain iApp encryption settings in order to avoid conflicts with the iSession tunnel encryption settings."

    net.tunnel_max2 "IMPORTANT" "To use this feature, you must have Local Endpoint and Listener objects created on both BIG-IP systems. See the deployment guide or BIG-IP documentation for information on creating these objects."

    net.tunnel_max3 "NOTE" "Selecting 'WAN Network through another BIG-IP system' enables this iApp to create a secure and optimized iSession tunnel between this BIG-IP system and the remote BIG-IP system. Note that iSession tunnels are a shared BIG-IP system resource. And once configured, the settings in the iSession profile may overrule certain iApp encryption settings in order to avoid conflicts with the iSession tunnel encryption settings."

    net.tunnel_max4 "IMPORTANT" "To use this feature, you must have Local Endpoint and Listener objects created on both BIG-IP systems. See the deployment guide or BIG-IP documentation for information on creating these objects."

    net.same_subnet "Where will the virtual servers be in relation to the web servers?" {
        "BIG-IP virtual server IP and web servers are on different subnets" => "no",
        "BIG-IP virtual server IP and web servers are on the same subnet"   => "yes"
    }

    net.subnet_1_max "" "It is important to ensure that responses to client requests made using the BIG-IP virtual server address are returned through the BIG-IP system. If the client receives a response directly from the web server, the connection is dropped. The way the BIG-IP system handles this depends on your network topology."

    net.subnet_2_max "" "For environments in which the virtual server IP address is on a subnet different from the web servers, select BIG-IP virtual server IP and the web servers are on different subnets."

    net.subnet_3_max "" "For environments in which the virtual server IP address provided is on the same subnet as the web servers in the associated pool, select BIG-IP virtual server IP and the web servers are on the same subnet. This enables Secure Network Address Translation (SNAT Auto Map). This configuration results in the BIG-IP system replacing the client IP address of an incoming connection with its self IP address  (using floating addresses when available), ensuring the server response returns through the BIG-IP system."


    net.route_to_bigip "How have you configured routing on your web servers?" {
        "Servers have a route to clients through the BIG-IP system"           => "yes",
        "Servers do not have a route to clients through the BIG-IP system"    => "no"
    }

    net.def_rt_1_max "" "For environments in which the virtual server IP is on a subnet different from the web servers, information regarding the IP setting of the web servers is required to ensure the correct BIG-IP system configuration."

    net.def_rt_2_max "" "If the web servers use the BIG-IP system as their default gateway, select Web servers have a route for clients through the BIG-IP system. In this scenario, no configuration is needed to support your environment to ensure correct server response handling."

    net.def_rt_3_max "" "If the web servers do not have a route through the BIG-IP system, select Web servers do not have a route for clients through the BIG-IP system. This enables Secure Network Address Translation  (SNAT Auto Map). This configuration results in the BIG-IP system replacing the client IP address of an incoming connection with its self IP address (using floating addresses when available) ensuring the server response returns through the BIG-IP system. "

    net.snat_type "How many connections do you expect to each web server?" {
                  "Fewer than 64,000 concurrent connections" => "automap",
                  "More than 64,000 concurrent connections" => "snatpool"
    }

    net.snat_max "" "For environments with fewer than 64,000 concurrent connections per server, the BIG-IP system enables SNAT Auto Map, which uses a unique IP:port combination for each client request it sends to the web server. For environments with more than 64,000 concurrent connections per web server, the BIG-IP system enables a SNAT pool, and additional IP addresses are reserved to ensure the system has enough unique combinations. If the system exhausts all combinations, new client connections are refused until one is available."

    net.snatpool "Create a new SNAT pool or use an existing one?"

    net.snatpool_members "What are the IP addresses you want to use for the SNAT pool?"

    net.snatpool_members.addr "IP"

    net.snatpool_members_max "" "SNAT Pool addresses should be available IP addresses, not the self-IP address(es) of the BIG-IP system"


    ssl "SSL Encryption"

    ssl.mode "How should the BIG-IP system handle SSL traffic?" {
        "Terminate SSL from clients, plaintext to servers (SSL offload)"         => "client_ssl",
        "Terminate SSL from clients, re-encrypt to servers (SSL bridging)"
                                                 => "client_ssl_server_ssl",
        "Encrypted traffic is forwarded without decryption (SSL pass-through)" 
                                                 => "pass_thru",
        "Plaintext to and from clients, encrypt to servers"         => "server_ssl",
        "Plaintext to and from both clients and servers"            => "no_ssl"
    }

    ssl.mode_1_max "" "SSL is a cryptographic protocol used to secure client to server communications. Select how you want the BIG-IP system to handle encrypted traffic. For encryption between client and BIG-IP system:"

    ssl.mode_2_max "" "If your application requires encryption and session persistence (which ensures requests from a single user are always distributed to the server on which they started) , we recommend you configure the BIG-IP system for terminating SSL for client requests. This allows the system to more accurately persist connections based on granular protocol or application-specific variables."

    ssl.mode_3_max "" "If security requirements do not allow the BIG-IP system to decrypt client connections, select to re-encrypt to the web servers. With this selection the system will use SSL ID or Client/Server IP to enforce session persistence. Because these parameters are less granular, using them may result in inconsistent distribution of client requests."

    ssl.mode_4_max "" "Encryption between BIG-IP system and web servers:"

    ssl.mode_5_max "" "Encryption and decryption of SSL is computationally intensive and consumes server CPU resources. In environments that do not require encryption between the BIG-IP system and the web servers, select SSL Offload to terminate the SSL session from the client at the BIG-IP system and provide clear text communication from the BIG-IP system to the web servers."

    ssl.mode_6_max "" "For environments that require encryption between the BIG-IP system and the web servers, select SSL re-encryption to terminate the SSL session from the client at the BIG-IP system and re-encrypt it for communication between the BIG-IP system and the web servers."

	ssl.mode_7_max "" "If you do not want the BIG-IP system to do anything with encrypted traffic and simply send it to the web servers, select SSL pass-through. This differs from SSL re-encryption because the system is not decrypting and re-encrypting the traffic, only sending the traffic through without modification. "

    ssl.cert "Which SSL certificate do you want to use?"
	ssl.cert_max "" "To establish encrypted communication, a client and server negotiate security parameters that are used for the session. As part of this handshake, a certificate is provided by the server to the client to identify itself. The client can then validate the certificate with an authority for authenticity before sending data. When the BIG-IP system is decrypting communication between the client and server, an SSL certificate and key pair for each fully-qualified DNS name related to this application instance must be configured on the system."
	ssl.cert1_max "" "Select the SSL certificate you imported for this deployment.  Importing certificates and keys is not a part of this template, see Local Traffic >> SSL Certificate List. To select any new certificates and keys you import, you need to restart or reconfigure this template."

    ssl.key "Which SSL private key do you want to use?"
	ssl.key_max "" "Select the associated SSL key you imported."

    ssl.use_chain_cert "Which intermediate certificate do you want to use?"
    ssl.use_chain_cert_1_max "" "Intermediate certificates, also called intermediate certificate chains or chain certificates, are used to help systems which depend on SSL certificates for peer identification. These certificates are intended to create a chain of trust between the CA that signed the certificate and the CA that is already trusted by the recipient of the certificate. This allows the recipient to verify the validity of the certificates presented, even when the signing CA is unknown."

    ssl.use_chain_cert_2_max "" "Intermediate certificates must be created or imported onto this BIG-IP system prior to running this iApp. See http://support.f5.com/kb/en-us/solutions/public/13000/300/sol13302.html for help on creating an intermediate certificate chain."

    ssl.ssl_warn_1 "WARNING:" "The BIG-IP system's default certificate and key are not secure. For proper security, acquire a certificate and key from a trusted certificate authority, and then import it onto the BIG-IP system."


    ssl.client_ssl_profile "Which Client SSL profile do you want to use?"
	ssl.client_ssl_profile_max "" "If you have already created an Client SSL profile that includes the appropriate certificate and key, you can select it from the list.  Otherwise, the iApp creates a new Client SSL profile. "

    ssl.server_ssl_profile "Which Server SSL profile do you want to use?"
	ssl.server_ssl_profile_max "" "If you have already created an Server SSL profile on this BIG-IP system, you can select it from the list. Otherwise, the iApp creates a new Server SSL profile."


    pool "Virtual Server and Pools"
    pool.addr "What IP address do you want to use for the virtual server?"
	pool.addr_max "" "This IP address, combined with the port you specify below, becomes the BIG-IP virtual server address and port, which clients use to access the application. The system intercepts requests to this IP:Port and distributes them to the web servers."
    pool.mask "If using a network virtual address, what is the IP mask?"
	pool.mask_max "" "If you specified a network address for the virtual server (allowing the virtual server to handle multiple IP addresses), you must enter the full network mask that represents the address range. If you specified a single address for the virtual server, you may leave this field blank."
    pool.port "What port do you want to use for the virtual server?"
	pool.port_max "" "Specify the service port you want to use for the virtual server. The default value displayed here is based your answer to the question asking how the system should handle SSL traffic."
    pool.mirror "Do you want to enable connection and persistence mirroring?" {
        "Do not enable connection/persistence mirroring" => "disabled",
        "Enable connection/persistence mirroring"        => "enabled"
    }
    pool.port_secure "What port do you want to use for the virtual server?"
    pool.hosts "What FQDNs will clients use to access the servers?"
    pool.hosts.name "Host"

    pool.redirect_to_https "Do you want to redirect inbound HTTP traffic to HTTPS?" {
        "Redirect HTTP to HTTPS"        => "yes",
        "Do not redirect HTTP to HTTPS" => "no"
    }

    pool.mirror_max "" "Connection and persistence mirroring allows you to configure the BIG-IP system to duplicate connection and persistence information to the standby unit of a redundant pair. This setting provides higher reliability, but might affect system performance. For more information, see http://support.f5.com/kb/en-us/solutions/public/13000/400/sol13478.html"

    pool.redirect_port "From which port should HTTP traffic be redirected?"

    pool.redirect_max "" "It is common for users to mistakenly attempt insecure access  (HTTP)  to a secure application  (HTTPS). The BIG-IP system can automatically redirect these connections to use an encrypted connection."

    pool.redirect_port_max "" "Specify the port from which you want users redirected.  The most common port for HTTP is 80."


    pool.fqdn_max "" "Clients can use the FQDN (Fully Qualified Domain Name) you enter here to access the web servers. For each FQDN, your DNS administrator must configure a DNS entry  that resolves to the IP address you entered for the BIG-IP virtual server."

    pool.http "Which HTTP profile do you want to use?"
    pool.http_max "" "The HTTP profile contains settings that tell the BIG-IP system how to handle the HTTP protocol. If you have created a custom HTTP profile for this application, you can select it from the list."

    pool.xff "Should the BIG-IP system insert the X-Forwarded-For header?" {
             "Insert X-Forwarded-For HTTP header"        => "yes",
             "Do not insert X-Forwarded-For HTTP header" => "no"
    }

    pool.xff_max "" "If you choose to insert the X-Forwarded-For header, the BIG-IP system inserts the original client IP address in the HTTP header for logging purposes. Additional configuration may be required on the web server to log the value of the X-Forwarded-For header."

    pool.persist "Which persistence profile do you want to use?"

	pool.pass_thru_persist "Which persistence profile do you want to use?"

	pool.pass_thru_persist_max "" "With persistence, the BIG-IP system tracks and stores session data, such as the specific pool member that serviced a client request. For SSL pass-through, the F5 recommended method is source address persistence, where the source address of the client is used for persistence. You can also choose not to use persistence, or to select a custom persistence profile you have already created."

    pool.persist_max "" "With persistence, the BIG-IP system tracks and stores session data, such as the specific pool member that serviced a client request. The F5 recommended method is Cookie persistence, which inserts a cookie in the HTTP header of a client request after an initial load balancing decision is made. The BIG-IP system uses this cookie to direct all subsequent requests from a given client to the same web server in the configured pool.  An alternative method is source address persistence, where the source address of the client is used for persistence. You can also choose not to use persistence, or to select a custom persistence profile you have already created. "

    pool.pool_to_use "Do you want to create a new pool or use an existing one?"
    pool.pool_to_use_wom "Do you want to create a new pool or use an existing one?"
    pool.pool_max "" "A load balancing pool is a logical set of devices, such as web servers, grouped together to receive and process traffic. When clients attempt to access the application via the BIG-IP virtual server, the BIG-IP system distributes requests to any of the servers that are members of that pool."

    pool.members "Which web servers should be included in this pool?"
	pool.members_max "" "Specify the IP address(es) of your web servers. If you have existing nodes on this BIG-IP system, you can select them from the list, otherwise type the addresses. Click Add to include additional servers."
    pool.members.addr "Node/IP address"
    pool.members.port "Port"
    pool.members.port_secure "Port"
    pool.members.connection_limit "Connection limit"
    pool.members.ratio "Ratio"
    pool.members.priority "Priority"
    pool.lb_method "Which load balancing method do you want to use?" {
        "Dynamic Ratio (member)" => "dynamic-ratio-member",
        "Dynamic Ratio (node)" => "dynamic-ratio-node",
        "Fastest (application)" => "fastest-app-response",
        "Fastest (node)" => "fastest-node",
        "Least Connections (member)" => "least-connections-member",
        "Least Connections (node)" => "least-connections-node",
        "Least Sessions" => "least-sessions",
        "Observed (member)" => "observed-member",
        "Observed (node)" => "observed-node",
        "Predictive (member)" => "predictive-member",
        "Predictive (node)" => "predictive-node",
        "Round Robin" => "round-robin",
        "Ratio (member)" => "ratio-member",
        "Ratio (node)" => "ratio-node",
        "Ratio (session)" => "ratio-session",
        "Ratio Least Connections (member)" => "ratio-least-connections-member",
        "Ratio Least Connections (node)" => "ratio-least-connections-node",
        "Weighted Least Connections (member)" => "weighted-least-connections-member"
    }

    pool.lb_method_edge "Which load balancing method do you want to use?" {
        "Round Robin"    => "round-robin",
        "Ratio (member)" => "ratio-member",
        "Ratio (node)"   => "ratio-node"
    }

    pool.lb_method_max "" "A load balancing method is an algorithm that the BIG-IP system uses to select a pool member for processing a request. F5 recommends the Least Connections load balancing method, where new connections are routed to the node that has the least number of current connections. This is ideal for environments in which pool members have similar performance and capacity capabilities."

    pool.use_pga "Do you want to give priority to specific groups of servers?" {
                 "Do not use Priority Group Activation (recommended)" => "no",
                 "Use Priority Group Activation"        => "yes"
    }

    pool.pga_max "" "Priority Group Activation allows you to segment your servers into priority groups.  With Priority Group Activation, the BIG-IP system load balances traffic according to the priority number you assign to the pool members. A higher number indicates higher priority. Traffic is only sent to the servers with the highest priority, unless the number of available servers in that priority group falls below the value you specify as the minimum. The BIG-IP system then sends traffic to the group of servers with the next highest priority, and so on. See the BIG-IP documentation for more details."

    pool.min_active_members "What is the minimum number of active members in a group?"
	pool.min_active_members_max "" "Specify the minimum number of servers which must be available before the system sends traffic to servers with a lower priority."

    client "Delivery Optimization"
    client.use_wa "Use the BIG-IP Application Acceleration Manager?" {
                  "Yes, use BIG-IP AAM (recommended)" => "yes",
                  "No, do not use BIG-IP AAM" => "no"
    }
    client.x_wa_info_header "Do you want to insert the X-WA-Info header?" {
        "Do not insert the header (recommended)"   => "none",
        "Insert the Standard header" => "standard",
        "Insert the Debug header"    => "debug"
    }
    client.x_wa_info_max "" "By default, the AAM X-WA-info header is not included in the response from the BIG-IP system. This header is useful for debugging AAM behavior. If you choose to enable this header, you have two options, Standard and Debug. In Standard mode, the BIG-IP system  inserts an HTTP header that includes numeric codes which indicate if and how each object was cached. In Debug mode, the BIG-IP system includes additional information which may help for extended troubleshooting."
    client.enable_perf_monitor "Do you want to use the legacy AAM performance monitor?" {
         "Do not enable the legacy performance monitor (recommended)" => "no",
         "Enable the legacy performance monitor"        => "yes"
    }
    client.enable_perf_monitor_max "" "Enabling the legacy AAM performance monitor can adversely affect system performance. This monitor is primarily used for legacy AAM performance monitoring and debugging purposes. The BIG-IP Dashboard provides performance graphs and statistics related to AAM."
    client.data_retention_period "For how many days should the BIG-IP system retain the data?"
    client.policy "Which acceleration policy do you want to use?"
    client.policy_complete_about_max "" "In this predefined acceleration policy, HTML pages are cached and Intelligent Browser Referencing is enabled."
    client.policy_enhanced_about_max "" "In this predefined acceleration policy, HTML pages are cached and Intelligent Browser Referencing is enabled for includes."
    client.policy_extension_about_max "" "This predefined acceleration policy is ideal for High Performance policy for Ecommerce applications that use File Extensions instead of mime-types. This application policy is ideal if response-based matching is not required."
    client.policy_fundamental_about_max "" "In this predefined acceleration policy, HTML pages are always proxied and Intelligent Browser Referencing is disabled."

    client.http_compression "Which compression profile do you want to use?"
    client.standard_caching_with_wa "Which Web Acceleration profile do you want to use for caching?"
    client.standard_caching_with_wa_max "" "You can use the BIG-IP Application Acceleration Manager (AAM, formerly WebAccelerator) to accelerate your application traffic."
    client.standard_caching_with_wa_not_default_max "" "You have selected a BIG-IP AAM enabled Web Acceleration profile with an AAM application already attached, so an AAM application will not be created by this template. If you would rather have this template produce the AAM application, then choose 'Use F5's recommended Web Acceleration profile' above."
    client.standard_caching_without_wa "Which Web Acceleration profile do you want to use for caching?"
    client.about_custom_caching_max_1 "" "Caching is the local storage of data for re-use. Once an item is cached on the BIG-IP system, subsequent requests for the same data are served from local storage. This can improve client request response times and improve server scalability by reducing load associated with processing subsequent requests."

	client.about_custom_caching_max_2 "" "If you want to select a custom Web Acceleration profile for caching you have already created, it must have an AAM application enabled, otherwise it does not appear in the list of caching profiles. If you want access to all Web Acceleration profiles on the box, then you must choose No to the use BIG-IP AAM question. Use a custom Web Acceleration profile only if you need to define specific URIs that should or should not be cached. "
	client.about_custom_caching_max_3 "" "Use a custom Web Acceleration profile only if you need to define specific URIs that should or should not be cached."

    client.tcp_lan_opt "How do you want to optimize client-side connections?"
    client.tcp_wan_opt "How do you want to optimize client-side connections?"
    client.comp_max "" "Compression improves performance and end user experience for Web applications that suffer from WAN latency and throughput bottlenecks. Compression reduces the amount of traffic sent to the client to complete a transaction. "
	client.comp1_max "" "To select a profile from the list, it must already be present on the BIG-IP system. Creating a custom profile is not a part of this template; see Local Traffic >> Profiles : Services : HTTP Compression to create an HTTP Compression profile. To select any new profiles you create, you need to restart or reconfigure this template."

    client.tcp_max "" "The client-side TCP profile optimizes the communication between the BIG-IP system and the client by controlling the behavior of the traffic which results in higher transfer rates, improved connection reliability and increased bandwidth efficiency."

    client.isession_profile "Create a new iSession tunnel profile or use an existing one?"
	client.isession_profile_max "" "The iSession profile contains the settings for the secure and optimized tunnel between this BIG-IP system and the remote BIG-IP system. Remember that iSession tunnels are a shared BIG-IP system resource. And once configured, the settings in the iSession profile may overrule certain iApp encryption settings in order to avoid conflicts with the iSession tunnel encryption settings. F5 recommends using the default 'isession' profile, unless you have already created one on this system. The iApp can also create a new iSession profile."

    client.isession "Which iSession features do you want to use?"
	client.isession_max "" "The three major options of the iSession profile are WAN encryption, Adaptive Compression, and Deduplication.  WAN encryption specifies whether the traffic on the outbound connection is encrypted. Adaptive Compression selects and adjusts the optimal compression algorithm for the current traffic, based on link speed. Deduplication specifies whether the system optimizes traffic using symmetric data deduplication (locating byte patterns that were previously sent over the WAN, and replacing them with references)."

    client.isession.encryption "WAN encryption"
    client.isession.compression "Adaptive Compression"
    client.isession.deduplication "Deduplication"

        server "Server Offload"
    server.oneconnect "Which OneConnect profile do you want to use?"
    server.oc_max "" "OneConnect  (connection pooling or multiplexing)  improves server scalability by reducing load associated with concurrent connections and connection rate to web servers. When enabled, the BIG-IP system maintains one connection to each web server which is used to send requests from multiple clients."

    server.ntlm "Which NTLM profile do you want to use?"
    server.ntlm_max "" "In environments that use the NTLM security protocol with OneConnect, an NTLM profile is also required. This profile ensures a connection between the BIG-IP system and an application server is established and reused on a per-user basis, eliminating the possibility that user data is incorrectly accessible."

    server.tcp_lan_opt "How do you want to optimize server-side connections?"
    server.tcp_wan_opt "How do you want to optimize server-side connections?"
    server.tcp_max "" "The server-side TCP profile optimizes the communication between the BIG-IP system and the server by controlling the behavior of the traffic which results in higher transfer rates, improved connection reliability and increased bandwidth efficiency."

    server.tcp_req_queueing "Should the BIG-IP system queue TCP requests?" {
                        "Yes, enable TCP request queuing" => "yes",
                        "No, do not enable TCP request queuing  (recommended) " => "no"
                    }

    server.tcp_queue_length "What is the maximum number of TCP requests for the queue?"

    server.tcp_queue_length_max "" "Specify a number for the length of the queue.  You should not use a value of '0', which indicates an unlimited queue length, and is only constrained by available memory."

    server.tcp_queue_timeout "How many milliseconds should requests stay in the queue?"

    server.tcp_queue_timeout_max "" "Specify a number of milliseconds that requests should remain in the queue before timing out."

    server.tcp_request_queue_1_max "WARNING" "Improper use or misconfiguration of TCP Request Queuing/Connection Limits can result in unwanted application behavior and poor performance of your BIG-IP system. For this reason we recommended you verify these settings impact prior to deployment in a production environment. You MUST add a Connection Limit to your pool members for TCP Request Queuing."

    server.tcp_request_queue_2_max "" "TCP request queuing provides the ability to queue connection requests that exceed the capacity of connections for a pool, pool member, or node, as determined by the connection limit. If you enable TCP request queuing, you must specify a queue length and timeout for queued requests based on server capability, load, and need for shared resources."

    server.use_slow_ramp "Use a Slow Ramp time for newly added servers?" {
                        "Yes, use Slow Ramp  (recommended) " => "yes",
                        "No, do not use Slow Ramp" => "no"
                    }

    server.slow_ramp_max "" "With Slow Ramp, the BIG-IP system gradually adds connections to a newly-enabled or newly-added HTTP server over a time period you specify, rather than sending a full proportion of the traffic immediately. Slow Ramp is essential when using load balancing methods like Least Connections, as the BIG-IP system would otherwise send all new connections to a new server immediately, potentially overwhelming that server. The time period you select for Slow Ramp is highly dependent on the speed of your server hardware and the behavior of your web services."

    server.slow_ramp_setvalue "How many seconds should Slow Ramp time last?"
	server.slow_ramp_setvalue_max "" "Specify the duration (in seconds) for Slow Ramp time (the amount of time the system sends less traffic to a newly-enabled pool member). The default setting of 300 seconds  (5 minutes) is very conservative in most cases. "

    monitor "Application Health"
    monitor.monitor_max "" "Monitors are used to determine the health of the application on each web server. If an application instance does not respond or responds incorrectly, the system will cease to send client requests to that web server. The system will continue to monitor the instance and will begin sending requests once the application responds correctly."

    monitor.monitor "Create a new health monitor or use an existing one?"
    monitor.http_method "What type of HTTP request should be sent to the servers?"
    monitor.uri "What HTTP URI should be sent to the servers?"

    monitor.http_version "Which HTTP version do your servers expect clients to use?" {
                                "HTTP/1.0" => "http10",
                                "HTTP/1.1" => "http11"
    }
    monitor.version_max "" "The HTTP version can be customized so it matches what a typical client would be using, in order to detect failures in the most meaningful way. HTTP/1.0 and HTTP/1.1 are the most common.  HTTP/1.0 is more simple, while HTTP/1.1 offers more features."

    monitor.frequency "How many seconds should pass between health checks?"
    monitor.freq_max "" "This is the duration, in seconds, of a single monitor cycle. At this interval, the system checks the health of the application instance on each web server configured in the web server pool."

    monitor.response "What is the expected response to the HTTP request?"
    monitor.method_max "" "The HTTP request type determines which HTTP method the monitor sends to the web server. GET is the most common request type for web applications."

    monitor.uri_max "" "The HTTP URI is used to specify the resource on the web server for a given request. This parameter can be customized to request a specific part of an application, which can indicate the health of the application on a granular level."


    monitor.post_body "What HTTP POST body do you want to use for this monitor?"
    monitor.body_max "" "POST requests require an HTTP POST body to send to the web server."

    monitor.response_max "" "When the HTTP response arrives for a monitor request, its contents are searched for the value specified here. If it is not found, the monitoring attempt fails."

    monitor.anonymous "Should the health monitor require credentials?"
        { "No, allow anonymous access" => "yes", "Yes, require credentials" => "no" }
	monitor.anonymous_max "" "You can configure system to attempt to authenticate to the <APP_LABEL> implementation as a part of the health monitor. If you choose to require credentials, we recommend you create a user account specifically for this health monitor which has no other privileges, and has a password set to never expire."

    monitor.user "What user name should the monitor use?"
	monitor.user_max "" "Specify the user name for the account you want to use as a part of the health monitor."
    monitor.passwd "What is the associated password?"
	monitor.passwd_max "" "Specify the associated password. The password for this account should be set to never expire, otherwise servers could be improperly marked as unavailable when the password expires."

    irules "iRules"
    irules.irules "Do you want to add any custom iRules to this configuration?"
    irules.note "WARNING:" "Improper use or misconfigurations of an iRule can result in unwanted application behavior and poor performance of your BIG-IP system. For this reason we recommended you verify the impact of an iRule prior to deployment in a production environment."
    irules.irule_2_max "" "The BIG-IP system supports a scripting language to allow an administrator to instruct the system to intercept, inspect, transform, direct and track inbound or outbound application traffic. An iRule contains the set of instructions the system uses to process data flowing through it, either in the header or payload of a packet."


    irules.irule_3_max "" "Correct event priority is critical when assigning multiple iRules. For more information about iRule event priority, see https://devcentral.f5.com/wiki/iRules.priority.ashx"

    stats "Statistics and Logging"
    stats.analytics "Do you want to enable Analytics for application statistics?"
    stats.request_logging "Which HTTP request logging profile do you want to use?"
    stats.avr_1_max "IMPORTANT" "Enabling Analytics may affect overall system performance.  If you choose to enable Analytics, we recommend gathering statistics for a set time period, such as one week, and then re-entering this template and disabling Analytics while you process the data."
    stats.avr_2_max "" "The Application Visibility Reporting  (AVR)  module allows you to view statistics specific to your web application. "
    stats.avr_3_max "" "While this template includes a default Analytics profile, for full functionality and flexibility, we recommend you create a custom Analytics profile for this application service. Creating a custom profile is not a part of this template; see Local Traffic >> Profiles : Analytics. Once you have created an Analytics profile, you can select it from the list below. To select any new profiles you create, you need to restart or reconfigure this template."


    stats.req_log_max "" "HTTP request logging enables customizable log messages to be sent to a syslog server for each HTTP request processed by this application. Successful usage of this feature requires creation and association of a request logging profile. Creating a request logging profile is not a part of this template. See Local Traffic>>Profiles: Other: Request Logging.  To select any new profiles you create, you need to restart or reconfigure this template. The performance impact of using this feature should be thoroughly tested in a staging environment prior to enabling it on a production deployment."

    extra "Additional Steps"
    extra.dns "DNS" "You must configure a DNS entry for each fully qualified host name that the clients use to access the web servers.  Each DNS record must resolve to the IP address you configured for the BIG-IP virtual server defined in the High Availability section."
    extra.web_servers "Web servers" "Depending on your web service and application software, you may have to perform additional steps on your web application to enable SSL Offloading. If you are performing SSL offload on the BIG-IP system, you may need to configure your web servers not to expect SSL to avoid redirect loops and needless redirects. Also, the web server software may need to be configured to handle any HTTP/1.1 Host headers you specified during monitor creation."
    extra.critical "Default SSL certificate and key" "You have selected a default BIG-IP certificate and/or key. This application service configuration is incomplete and will not be secure until you import and assign a trusted certificate and key that are valid for all fully qualified domain names used to access the application. See Local Traffic >> SSL Certificate List for importing certificates and keys. To select any new certificates and keys you import, you need to restart or reconfigure this template."

# For v11.3 applications
    ssl_encryption_questions.deprecated "PLEASE UPGRADE" "This template has been deprecated. It is highly recommended that you upgrade this deployment to the current template version. To upgrade, choose Yes below. Note that this process will temporarily take your application offline."
    ssl_encryption_questions.upgrade "Do you want to upgrade this template?"
        { "Yes" => "Yes", "No"  => "No" }
    ssl_encryption_questions.gap_1 " "
    ssl_encryption_questions.gap_2 " "
    ssl_encryption_questions.section_head "SSL Encryption Questions"
    ssl_encryption_questions.offload_ssl_1 "Do you want the BIG-IP system to offload SSL processing from the web servers?"
        { "Yes" => "Yes", "No"  => "No" }
    ssl_encryption_questions.offload_ssl_2 "Do you want the BIG-IP system to offload SSL processing from the web servers?"
        { "Yes" => "Yes", "No"  => "No" }
    ssl_encryption_questions.cert "Which certificate do you want the BIG-IP system to use to authenticate the server? (You may need to import a certificate before deploying this Template.)"
    ssl_encryption_questions.key "Which key do you want the BIG-IP system to use for encryption? (You may need to import a key before deploying this Template.)"

    analytics "Analytics"
    analytics.add_analytics "Do you want to enable Analytics so that you can view application statistics? (This may affect system performance.)"
        { "Yes" => "Yes", "No"  => "No" }
    analytics.about_analytics_profiles "About creating your own Analytics profiles:" "For full functionality and flexibility, we recommend that you create a custom Analytics profile for each iApp under Local Traffic > Profiles > Analytics. Once you have created an Analytics profile, you will be able to select it from the list below."
    analytics.create_new_analytics "Do you want to use a default Analytics profile or select a custom profile?" {
        "Select a Custom Profile" => "Select a Custom Profile",
        "Use Default Profile" => "Use Default Profile"
    }
    analytics.analytics_profile "Which Analytics profile do you want to use?"

    basic "Virtual Server Questions"
    basic.addr "What IP address do you want to use for this virtual server?"
    basic.port "What port do you want to use for this virtual server?"
    basic.secure_port "What port do you want to use for this virtual server?"
    basic.create_redir "Do you want to redirect traffic that comes in as HTTP to HTTPS?"
        { "Yes" => "Yes", "No"  => "No" }
    basic.redir_port "What port do you want to use for the redirect virtual server?"
    basic.snat "Do the web servers have a route back to application clients via this BIG-IP system?"
        { "Yes" => "Yes", "No"  => "No" }
    basic.need_snatpool "Will you have more than 64,000 connections at one time? If so, you will need to enter at least one IP address for each 64,000 connections. "
        { "Yes" => "Yes", "No"  => "No" }
    basic.snatpool_members "Enter IP addresses that can be used for a SNAT pool. Enter one IP address for each 64,000 connections "
    basic.snatpool_members.addr "Address: "

    basic.using_ntlm "Are the web servers configured to use NTLM authentication?"
        { "Yes" => "Yes", "No"  => "No" }


    server_pools "HTTP Server Pool, Load Balancing, and Service Monitor Questions"
    server_pools.create_new_pool "Do you want to create a new pool or use an existing one?" {
        "Create New Pool" => "Create New Pool",
        "Use Pool..." => "Use Pool..."
    }
    server_pools.lb_method_choice "Which load balancing method do you want to use?" {
        "Dynamic Ratio (member)" => "dynamic-ratio-member",
        "Dynamic Ratio (node)" => "dynamic-ratio-node",
        "Fastest (application)" => "fastest-app-response",
        "Fastest (node)" => "fastest-node",
        "Least Connections (member)" => "least-connections-member",
        "Least Connections (node)" => "least-connections-node",
        "Least Sessions" => "least-sessions",
        "Observed (member)" => "observed-member",
        "Observed (node)" => "observed-node",
        "Predictive (member)" => "predictive-member",
        "Predictive (node)" => "predictive-node",
        "Round Robin" => "round-robin",
        "Ratio (member)" => "ratio-member",
        "Ratio (node)" => "ratio-node",
        "Ratio (session)" => "ratio-session",
        "Ratio Least Connections (member)" => "ratio-least-connections-member",
        "Ratio Least Connections (node)" => "ratio-least-connections-node",
        "Weighted Least Connections (member)" => "weighted-least-connections-member"
    }
    server_pools.servers "Which servers do you want this virtual server to reference? (The virtual server will not be available until at least one server is added.)"
    server_pools.servers.addr "Address"
    server_pools.servers.port "Port"
    server_pools.servers.ratio "Ratio"
    server_pools.servers.connection_limit "Connection Limit"
    server_pools.tcp_request_queuing_enable_question "Do you want the BIG-IP system to queue TCP requests?"
        { "Yes" => "Yes", "No"  => "No" }
    server_pools.note "NOTE:" "TCP request queuing requires you to have a Connection Limit on your pool members."
    server_pools.tcp_request_queue_length "Specify the TCP request queue length. Choose 0 for unlimited."
    server_pools.tcp_request_queue_timeout "Specify a timeout for TCP request queuing in milliseconds. Choose 0 for unlimited."
    server_pools.reuse_pool_name "Choose a pool from the list of available pools."
    server_pools.create_new_monitor "Do you want to create a new health monitor or use an existing one?" {
        "Create New Monitor" => "Create New Monitor",
        "Use Monitor..." => "Use Monitor..."
    }
    server_pools.monitor_interval "How often (in seconds) do you want the BIG-IP system to check on the health of each web server? "
    server_pools.monitor_send "What HTTP request should be sent to check the health of each web server?"

    server_pools.monitor_http_version "What HTTP version do your web servers expect clients to use?"
        { "Version 1.0", "Version 1.1" }

    server_pools.monitor_dns_name "What fully qualified DNS name are HTTP 1.1 clients expected to use to access the web servers?"
    server_pools.monitor_recv "What string can the BIG-IP system expect to see within the health check response for the server to be considered healthy?"
    server_pools.reuse_monitor_name "Choose a monitor from the list of available monitors."


    optimizations "Protocol Optimization Questions"
    optimizations.lan_or_wan "Will clients be connecting to this virtual server primarily over a LAN or a WAN?" {
        "WAN" => "WAN",
        "LAN" => "LAN"
    }

    optimizations.use_wa "Do you want to use the BIG-IP AAM module to accelerate your traffic?"
        { "Yes" => "Yes", "No"  => "No" }
    optimizations.hosts "What fully qualified DNS names will your end users use to access the web Virtual Server (e.g., site.f5.com)."
    optimizations.hosts.host "Host"
    optimizations.policy "Select the AAM policy to use."
    optimizations.x_wa_info_header "Do you want to insert the X-WA-Info Header?" {
        "None" => "none",
        "Standard" => "standard",
        "Debug" => "debug"
    }
    optimizations.perf_monitor "Do you want to enable the AAM performance monitor?" {
        "Enabled" => "enabled",
        "Disabled" => "disabled"
    }
    optimizations.data_retention_period "How many days to you want to keep AAM performance data?"

}
            }
            role-acl none
            run-as none
        }
    }
    description none
    ignore-verification false
    requires-bigip-version-max 11.6.0
    requires-bigip-version-min 11.4.0
    requires-modules { ltm }
    signing-key none
    tmpl-checksum none
    tmpl-signature none
}
sys application template /Common/f5.lbaas {
    actions {
        definition {
            html-help {
            }
            implementation {
                # Load Balancer As A Service iApp Template for BIG-IQ
#
# This simple load-balancing application template uses OpenStack
# terminology to create a BIG-IP configuration.
#
# In order to avoid present and future versioning issues, this
# template has no dependence on cli scripts or Tcl packages.
#
# Furthermore, for compatibility with BIG-IQ, no presentation
# logic is used and all APL variables are insured with default
# values as defined in the arrays shown below, called var_defaults
# and pool_defaults. Thus, the template will not abort merely
# because BIG-IQ fails to supply a given value. However, iApp
# implementation will still fail if BIG-IP rejects the resultant
# configuration. For example, the iApp will fail if HTTP_COOKIE
# persistence is chosen with TCP protocol optimization, since BIG-IP
# requires HTTP protocol optimization in order to offer cookie
# persistence.

array set var_defaults {
    vip__state enabled
    vip__addr Error
    vip__port 80
    vip__protocol http
    vip__persist http-cookie
    vip__cookie jsessionid
    pool__lb_method round-robin
    pool__monitor http
}

array set pool_defaults {
    pool__members {
        state enabled
        addr Error
        port 80
        connection_limit 1000
    }
}

# iRule from SOL7392: Overview of universal persistence
set persist_irule {
when HTTP_RESPONSE {
  if { \[HTTP::cookie exists \"$::vip__cookie\"\] } {
    persist add uie \[HTTP::cookie \"$::vip__cookie\"\]
  }
}
when HTTP_REQUEST {
  if { \[HTTP::cookie exists \"$::vip__cookie\"\] } {
    persist uie \[HTTP::cookie \"$::vip__cookie\"\]
  }
}}

array set pool_state {
    enabled        {session user-enabled  state user-up}
    disabled       {session user-disabled state user-up}
    drain-disabled {session user-disabled state user-up}
    force-disabled {state user-down}
}

array set monitor {
    ping {[tmsh_create ltm monitor gateway-icmp ${tmsh::app_name}_ping]}
    tcp  {[tmsh_create ltm monitor tcp ${tmsh::app_name}_tcp]}
    http {[tmsh_create ltm monitor http ${tmsh::app_name}_http]}
}

array set persist {
    none        {none}
    source-ip   {replace-all-with \{[tmsh_create ltm persistence \
                 source-addr ${tmsh::app_name}_source_ip]\}}
    http-cookie {replace-all-with \{[tmsh_create ltm persistence \
                 cookie ${tmsh::app_name}_http_cookie]\}}
    app-cookie  {replace-all-with \{[tmsh_create ltm persistence \
                 universal ${tmsh::app_name}_app_cookie \
                 rule [tmsh_create ltm rule ${tmsh::app_name}_cookie \
                 [subst $persist_irule]]]\}}
}

array set profiles {
    tcp  {none}
    http {replace-all-with \{[tmsh_create \
          ltm profile http ${tmsh::app_name}_http]\}}
}

# tmsh command wrapper that writes to scriptd log and returns object name
proc tmsh_create { args } {
    set args [join $args]
    puts "tmsh create $args"
    tmsh::create $args
    return [lindex $args [lsearch -glob $args "*_*"]]
}

# constructor that handles IPv6 and port number wildcards
proc destination { addr port } {

    # 0 and * represent wildcard port assignments in the GUI,
    # but TMSH requires the string 'any' to specify a wildcard
    if { $port eq "0" || $port eq "*" } {
        set port "any"
    }

    # decide on IPv4 or IPv6 delimiter
    set delimiter [expr {[string match "*:*:*" $addr] ? ".":":"}]
    return $addr$delimiter$port
}

# safely set any variables that do not exist
foreach var [array names var_defaults] {
    if { ![info exists ::$var] || [set ::$var] eq "" } {
        set ::$var $var_defaults($var)
    }
}

# safely set column values that do not exist
foreach table [array names pool_defaults] {
    if { ![info exists ::$table] } {
        set members none
    } else {
        array set column_defaults $pool_defaults($table)
        foreach row [set ::$table] {
            set params {}
            array unset column

            # extract the iApp table data
            foreach column_data [lrange [split [join $row] "\n"] 1 end-1] {
                set name [lindex $column_data 0]
                set column($name) [lindex $column_data 1]
            }

            # fill in any empty table values
            foreach name [array names column_defaults] {
                if { ![info exists column($name)] || $column($name) eq "" } {
                    set column($name) $column_defaults($name)
                }
                if { $name eq "state" } {
                    append params " $pool_state($column($name))"
                } elseif { $name ne "addr" && $name ne "port" } {
                    append params " [string map {_ -} $name] $column($name)"
                }
            }
            append members \
                " [destination $column(addr) $column(port)] \\\{$params\\\}"
        }
    }
}

# build the application
tmsh_create ltm virtual ${tmsh::app_name}_vip \
    $::vip__state ip-protocol tcp snat automap \
    destination [destination $::vip__addr $::vip__port] \
    pool [tmsh_create ltm pool ${tmsh::app_name}_pool \
    members replace-all-with \{ [join $members] \} \
    load-balancing-mode $::pool__lb_method \
    monitor  [subst $monitor($::pool__monitor)]] \
    persist  [subst $persist($::vip__persist)] \
    profiles [subst $profiles($::vip__protocol)]
            }
            macro {
            }
            presentation {
                section intro {
    message blank " "
}

section vip {
    string addr        display "large" validator "IpAddress" required
    string port        display "large" validator "PortNumber" default "80"
    choice protocol    display "medium" default "http"
        { "http", "tcp" }
    choice persist     display "medium" default "http-cookie"
        { "source-ip", "http-cookie", "app-cookie", "none" }
    optional ( persist == "app-cookie" ) {
        string cookie  display "medium" default "jsessionid"
    }
    choice state       display "medium" default "enabled"
        { "enabled", "disabled" }
}

section pool {
    table members {
        string addr    display "large" validator "IpAddress"
        string port    display "small" validator "PortNumber" default "80"
        string connection_limit display "small" validator "NonNegativeNumber" default "10000"
        choice state   display "medium" default "enabled"
            { "enabled", "drain-disabled", "force-disabled" }
    }
    choice lb_method   display "xlarge" default "round-robin"
        { "round-robin", "least-connections-member" }
    choice monitor     display "xlarge" default "http"
        { "http", "tcp", "ping" }
}

text {
    intro "Load Balancer As A Service Template for BIG-IQ"
    intro.blank " "

    vip "Virtual Server"
    vip.addr "What is the virtual IP address?"
    vip.port "What is the virtual port number? (default: 80)"
    vip.protocol "What protocol optimization should be used on this VIP?"
    vip.persist "What persistence type should be used on this VIP?"
    vip.cookie "What application cookie should BIG-IP persist on?"
    vip.state "What is the VIP state?"

    pool "Pool"
    pool.members "Enter an address and TCP port number for each pool member. (default: 80)"
    pool.members.addr "IP"
    pool.members.port "Port"
    pool.members.connection_limit "Connection Limit"
    pool.members.state "State"
    pool.lb_method "What load balancing method should be used?"
    pool.monitor "What type of monitor should be used to determine pool health?"
}
            }
            role-acl none
            run-as none
        }
    }
    description none
    ignore-verification false
    requires-bigip-version-max none
    requires-bigip-version-min none
    requires-modules none
    signing-key none
    tmpl-checksum none
    tmpl-signature none
}
sys daemon-log-settings csyncd {
    log-level critical
}
sys daemon-log-settings lind {
    log-level critical
}
sys daemon-log-settings tmm {
    arp-log-level error
    irule-log-level error
    net-log-level critical
    os-log-level critical
    ssl-log-level emergency
}
sys ecm cloud-provider /Common/aws-ec2 {
    description "The aws-ec2 parameters"
    property-template {
        account { }
        availability-zone {
            valid-values { a b c d }
        }
        instance-type {
            valid-values { t2.micro t2.small t2.medium m3.medium m3.large m3.xlarge m3.2xlarge c3.large c3.xlarge c3.2xlarge c3.4xlarge c3.8xlarge r3.large r3.xlarge r3.2xlarge r3.4xlarge r3.8xlarge }
        }
        region {
            valid-values { us-east-1 us-west-1 us-west-2 sa-east-1 eu-west-1 eu-central-1 ap-southeast-2 ap-southeast-1 ap-northeast-1 }
        }
    }
}
sys ecm cloud-provider /Common/dnet {
    description "The dnet parameters"
}
sys ecm cloud-provider /Common/vsphere {
    description "The vsphere parameters"
    property-template {
        cloud-host-ip { }
        dhcp-network-name { }
        end-point-url { }
        node-name { }
    }
}
sys file ssl-cert /Common/custom_ssl_cert.crt {
    cache-path /config/filestore/files_d/Common_d/certificate_d/:Common:custom_ssl_cert.crt_71757_1
    revision 1
    source-path /config/ssl/ssl.crt/custom_ssl_cert.crt
}
sys file ssl-cert /Common/dvwa.crt {
    cache-path /config/filestore/files_d/Common_d/certificate_d/:Common:dvwa.crt_99888_1
    revision 1
}
sys file ssl-cert /Common/lamp.crt {
    cache-path /config/filestore/files_d/Common_d/certificate_d/:Common:lamp.crt_71745_1
    revision 1
}
sys file ssl-key /Common/custom_ssl_cert.key {
    cache-path /config/filestore/files_d/Common_d/certificate_key_d/:Common:custom_ssl_cert.key_71754_1
    revision 1
    source-path /config/ssl/ssl.key/custom_ssl_cert.key
}
sys file ssl-key /Common/dvwa.key {
    cache-path /config/filestore/files_d/Common_d/certificate_key_d/:Common:dvwa.key_99892_1
    revision 1
}
sys file ssl-key /Common/lamp.key {
    cache-path /config/filestore/files_d/Common_d/certificate_key_d/:Common:lamp.key_71748_1
    revision 1
}
sys fpga firmware-config {
    type standard-balanced-fpga
}
sys sflow global-settings http { }
sys sflow global-settings vlan { }
sys software update {
    auto-check enabled
    auto-phonehome enabled
    frequency weekly
}
wom advertised-route /Common/10.128.20.0 {
    dest 10.128.20.0/24
}
wom endpoint-discovery { }
wom local-endpoint {
    addresses { 10.128.10.220 }
    allow-nat disabled
    ip-encap-profile { "" }
    server-ssl /Common/serverssl
}
wom remote-endpoint /Common/10.128.10.225 {
    address 10.128.10.225
    ip-encap-type none
    server-ssl /Common/serverssl
}
